apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "ArgoCD",
          "metadata": {
            "name": "argocd",
            "namespace": "argocd"
          },
          "spec": {
            "nameOverride": "argocd",
            "fullnameOverride": "",
            "installCRDs": false,
            "global": {
              "image": {
                "repository": "argoproj/argocd",
                "tag": "v1.4.2",
                "imagePullPolicy": "IfNotPresent"
              },
              "securityContext": {
              }
            },
            "controller": {
              "name": "application-controller",
              "image": {
                "repository": null,
                "tag": null,
                "imagePullPolicy": null
              },
              "args": {
                "statusProcessors": "20",
                "operationProcessors": "10"
              },
              "logLevel": "info",
              "extraArgs": {
              },
              "env": [

              ],
              "podAnnotations": {
              },
              "podLabels": {
              },
              "containerSecurityContext": {
              },
              "containerPort": 8082,
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "volumeMounts": [

              ],
              "volumes": [

              ],
              "service": {
                "annotations": {
                },
                "labels": {
                },
                "port": 8082
              },
              "nodeSelector": {
              },
              "tolerations": [

              ],
              "affinity": {
              },
              "priorityClassName": "",
              "resources": {
              },
              "serviceAccount": {
                "create": true,
                "name": "argocd-application-controller"
              },
              "metrics": {
                "enabled": false,
                "service": {
                  "annotations": {
                  },
                  "labels": {
                  },
                  "servicePort": 8082
                },
                "serviceMonitor": {
                  "enabled": false
                },
                "rules": {
                  "enabled": false,
                  "spec": [

                  ]
                }
              },
              "clusterAdminAccess": {
                "enabled": true
              }
            },
            "dex": {
              "enabled": true,
              "name": "dex-server",
              "image": {
                "repository": "quay.io/dexidp/dex",
                "tag": "v2.22.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "initImage": {
                "repository": null,
                "tag": null,
                "imagePullPolicy": null
              },
              "env": [

              ],
              "serviceAccount": {
                "create": true,
                "name": "argocd-dex-server"
              },
              "volumeMounts": [
                {
                  "name": "static-files",
                  "mountPath": "/shared"
                }
              ],
              "volumes": [
                {
                  "name": "static-files",
                  "emptyDir": {
                  }
                }
              ],
              "containerPortHttp": 5556,
              "servicePortHttp": 5556,
              "containerPortGrpc": 5557,
              "servicePortGrpc": 5557,
              "nodeSelector": {
              },
              "tolerations": [

              ],
              "affinity": {
              },
              "priorityClassName": "",
              "containerSecurityContext": {
              },
              "resources": {
              }
            },
            "redis": {
              "enabled": true,
              "name": "redis",
              "image": {
                "repository": "redis",
                "tag": "5.0.3",
                "imagePullPolicy": "IfNotPresent"
              },
              "containerPort": 6379,
              "servicePort": 6379,
              "env": [

              ],
              "nodeSelector": {
              },
              "tolerations": [

              ],
              "affinity": {
              },
              "priorityClassName": "",
              "containerSecurityContext": {
              },
              "resources": {
              },
              "volumeMounts": [

              ],
              "volumes": [

              ]
            },
            "server": {
              "name": "server",
              "image": {
                "repository": null,
                "tag": null,
                "imagePullPolicy": null
              },
              "extraArgs": {
              },
              "env": [

              ],
              "logLevel": "info",
              "podAnnotations": {
              },
              "podLabels": {
              },
              "containerPort": 8080,
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "volumeMounts": [

              ],
              "volumes": [

              ],
              "nodeSelector": {
              },
              "tolerations": [

              ],
              "affinity": {
              },
              "priorityClassName": "",
              "containerSecurityContext": {
              },
              "resources": {
              },
              "certificate": {
                "enabled": false,
                "domain": "argocd.example.com",
                "issuer": {
                },
                "additionalHosts": [

                ]
              },
              "service": {
                "annotations": {
                },
                "labels": {
                },
                "type": "ClusterIP",
                "servicePortHttp": 80,
                "servicePortHttps": 443
              },
              "metrics": {
                "enabled": false,
                "service": {
                  "annotations": {
                  },
                  "labels": {
                  },
                  "servicePort": 8083
                },
                "serviceMonitor": {
                  "enabled": false
                }
              },
              "serviceAccount": {
                "create": true,
                "name": "argocd-server"
              },
              "ingress": {
                "enabled": false,
                "annotations": {
                },
                "labels": {
                },
                "hosts": [

                ],
                "paths": [
                  "/"
                ],
                "tls": [

                ]
              },
              "config": {
                "application.instanceLabelKey": "argocd.argoproj.io/instance"
              },
              "rbacConfig": {
              },
              "additionalApplications": [

              ],
              "additionalProjects": [

              ]
            },
            "repoServer": {
              "name": "repo-server",
              "image": {
                "repository": null,
                "tag": null,
                "imagePullPolicy": null
              },
              "extraArgs": {
              },
              "env": [

              ],
              "logLevel": "info",
              "podAnnotations": {
              },
              "podLabels": {
              },
              "containerPort": 8081,
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "volumeMounts": [

              ],
              "volumes": [

              ],
              "nodeSelector": {
              },
              "tolerations": [

              ],
              "affinity": {
              },
              "priorityClassName": "",
              "containerSecurityContext": {
              },
              "resources": {
              },
              "service": {
                "annotations": {
                },
                "labels": {
                },
                "port": 8081
              },
              "metrics": {
                "enabled": false,
                "service": {
                  "annotations": {
                  },
                  "labels": {
                  },
                  "servicePort": 8084
                },
                "serviceMonitor": {
                  "enabled": false
                }
              },
              "serviceAccount": {
                "create": false,
                "annotations": {
                }
              }
            },
            "configs": {
              "knownHosts": {
                "data": {
                  "ssh_known_hosts": "bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"
                }
              },
              "tlsCerts": {
              },
              "repositoryCredentials": {
              },
              "secret": {
                "createSecret": true,
                "githubSecret": "",
                "gitlabSecret": "",
                "bitbucketServerSecret": "",
                "bitbucketUUÌD": "",
                "gogsSecret": "",
                "extra": {
                },
                "argocdServerTlsConfig": {
                }
              }
            },
            "openshift": {
              "enabled": true,
              "route": {
                "enabled": true,
                "host": "",
                "annotations": {
                }
              },
              "oAuth": {
                "enabled": true,
                "config": {
                  "image": {
                    "repository": "quay.io/openshift/origin-cli",
                    "tag": "latest",
                    "imagePullPolicy": "IfNotPresent"
                  },
                  "base": {
                    "url": "openshiftOAuthConfigBaseUrl"
                  },
                  "redirect": {
                    "url": "openshiftOAuthConfigRedirectURI"
                  },
                  "dex": {
                    "dex.config": "connectors:\n  - type: openshift\n    # Required field for connector id.\n    id: openshift\n    # Required field for connector name.\n    name: OpenShift\n    config:\n      # Location of the OpenShift API Server. Get it with \"oc whoami --show-server\" or\n      # leave this default for automatic discovery (recommended)\n      issuer: openshiftOAuthConfigIssuer\n      # Name of the OpenShift OAuth Client with format: \"system:serviceaccount:<namespace>:<service_account_name>\" or\n      # leave this default for automatic discovery (recommended)\n      clientID: openshiftOAuthConfigClientID\n      # Value of the OpenShift OAuth client secret. Get it with \"oc serviceaccounts get-token <argocd_dex_server_service_account_name>\" or\n      # leave this default for automatic discovery (recommended)\n      clientSecret: openshiftOAuthConfigClientSecret\n      # ArgoCD redirect URI in format: \"https://<argocd_host>/api/dex/callback\" or\n      # leave this default for automatic discovery (recommended)\n      redirectURI: openshiftOAuthConfigRedirectURI\n      # Disable SSL verification\n      insecureCA: true\n      # Optional: The location of file containing SSL certificates to communicate to OpenShift\n      # rootCA: /etc/ssl/openshift.pem\n"
                  }
                },
                "rbac": {
                  "enabled": true,
                  "groups": {
                    "admins": {
                      "name": "argocd-admins",
                      "role": "role:admin"
                    },
                    "developers": {
                      "name": "argoc-developers",
                      "role": "role:readonly"
                    }
                  },
                  "users": {
                    "admins": [
                      "developer",
                      "kubedadmin",
                      "admin"
                    ],
                    "developers": [

                    ]
                  }
                }
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    createdAt: 2020-01-30 01:01:01
    categories: "Integration & Delivery"
    description: Declarative Continuous Delivery following Gitops.
    certified: "false"
    containerImage: quay.io/disposab1e/argocd-operator-helm:v0.0.4
    support: Community
    repository: https://github.com/disposab1e/argocd-operator-helm.git
  name: argocd-operator-helm.v0.0.4
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: ArgoCD
      displayName: ArgoCD
      name: argocds.argoproj.io
      version: v1alpha1
      description: 'Represents the Argo CD installation.'
  description:  |

      [Argo CD](https://argoproj.github.io/argo-cd/) is a declarative, GitOps continuous delivery tool for Kubernetes.

      ### Overview
      This **community maintained** [Argo CD Operator (Helm)](https://github.com/disposab1e/argocd-operator-helm) 
      is based on the **community maintained** [Argo CD Helm Chart](https://github.com/argoproj/argo-helm/tree/master/charts/argo-cd) 
      and currently installs the non-HA version of [Argo CD](https://argoproj.github.io/argo-cd/) in OpenShift Container Platform. 
      

      ### Features
      * Easy configuration and installation
      * OpenShift OAuth integration

      ### Install

      The operator shares all [configuration values](https://github.com/disposab1e/argocd-operator-helm/blob/release-0.0.4/helm-charts/argo-cd/README.md) 
      from the Argo CD Helm Chart and manages a single namespace installation of Argo CD. 
      Therefore you have to install the operator and Argo CD in the same namespace. 
      For simplicity we recommend creating a namespace **argocd**. 
      
      To install Argo CD create a new [ArgoCD resource](https://github.com/disposab1e/argocd-operator-helm/blob/release-0.0.4/examples/ocp-oauth.yaml) 
      with your own customizations or use the provided example from the Web UI.

      The provided example with OpenShift OAuth integration enabled assumes you have an existing `developer`, `kubeadmin` or `admin` User 
      already available for the Argo CD administrator group. 
      If you have other existing groups or users feel free to change the example to fit your needs. 
      
      You can also disable the OAuth integration with:
      
      ```  
      openshift.oAuth.enabled: false
      ```

      ### Documentation

      See the [documentation](https://argocd-operator-helm.readthedocs.io/en/0.0.4/) 
      and [examples](https://github.com/disposab1e/argocd-operator-helm/blob/release-0.0.4/examples/) 
      or visit the [official github repository](https://github.com/disposab1e/argocd-operator-helm) for more information.


  displayName: Argo CD Operator (Helm)
  links:
  - name: Argo CD
    url: https://argoproj.github.io/argo-cd/
  - name: GitHub
    url: https://github.com/disposab1e/argocd-operator-helm.git
  - name: Read the Docs
    url: https://argocd-operator-helm.rtfd.io
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNzY4IDc2OCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOm5vbmU7fS5jbHMtMTIsLmNscy0ye2ZpbGw6I2U5NjU0Yjt9LmNscy0ze2ZpbGw6I2I2Y2ZlYTt9LmNscy00e2ZpbGw6I2U2ZjVmODt9LmNscy01e2ZpbGw6I2QwZThmMDt9LmNscy02e2ZpbGw6I2VlNzk0Yjt9LmNscy03e2NsaXAtcGF0aDp1cmwoI2NsaXAtcGF0aCk7fS5jbHMtOHtmaWxsOiNlMzRlM2I7ZmlsbC1vcGFjaXR5OjAuMjI7fS5jbHMtOXtmaWxsOiNmYmRmYzM7ZmlsbC1vcGFjaXR5OjAuNTt9LmNscy0xMHtmaWxsOiMwMTAxMDE7fS5jbHMtMTF7ZmlsbDojZmZmO30uY2xzLTEye2ZpbGwtb3BhY2l0eTowLjI1O308L3N0eWxlPjxjbGlwUGF0aCBpZD0iY2xpcC1wYXRoIj48cG9seWxpbmUgY2xhc3M9ImNscy0xIiBwb2ludHM9IjUxNC41NiAyMzguMDggNDk5LjIgNTg4LjggMjY4LjggNTg4LjggMjU2IDIzOC4wOCIvPjwvY2xpcFBhdGg+PC9kZWZzPjx0aXRsZT5leF9FbGVtZW50IDE8L3RpdGxlPjxnIGlkPSJFYmVuZV8yIiBkYXRhLW5hbWU9IkViZW5lIDIiPjxnIGlkPSJFYmVuZV8xLTIiIGRhdGEtbmFtZT0iRWJlbmUgMSI+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMjYzLjY4LDUyOS45MnMtNS4xMiwxNS4zNi0xMi44LDIzYy01LjEyLDUuMTItMTAuMjQsNy42OC0xNy45Miw3LjY4YTI5Ni44LDI5Ni44LDAsMCwxLTM4LjQsNy42OHMxNy45MiwyLjU2LDM4LjQsNS4xMmM3LjY4LDAsNy42OCwwLDEyLjgsMi41NiwxMi44LDAsMTcuOTItNy42OCwxNy45Mi03LjY4WiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTQ5OS4yLDUyOS45MnM1LjEyLDE1LjM2LDEyLjgsMjNjNS4xMiw1LjEyLDEwLjI0LDcuNjgsMTcuOTIsNy42OGEyOTYuOCwyOTYuOCwwLDAsMCwzOC40LDcuNjhzLTE3LjkyLDIuNTYtNDEsNS4xMmMtNy42OCwwLTcuNjgsMC0xMi44LDIuNTYtMTUuMzYsMC0xNy45Mi03LjY4LTE3LjkyLTcuNjhaIi8+PGNpcmNsZSBjbGFzcz0iY2xzLTMiIGN4PSIzODQiIGN5PSIyNzYuNDgiIHI9IjI3Ni40OCIvPjxjaXJjbGUgY2xhc3M9ImNscy00IiBjeD0iMzg0IiBjeT0iMjc2LjQ4IiByPSIyNjYuMjQiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNSIgY3g9IjM4NCIgY3k9IjI4MS42IiByPSIyMTcuNiIvPjxnIGlkPSJCb2R5Ij48cGF0aCBjbGFzcz0iY2xzLTYiIGQ9Ik0yNTYsMzg0czE3LjkyLDI4OS4yOCwxNy45MiwyOTQuNGMwLDIuNTYsMi41Niw3LjY4LTEwLjI0LDEyLjhzLTUzLjc2LDE1LjM2LTUzLjc2LDE1LjM2aDYxLjQ0YzI4LjE2LDAsMjguMTYtMjMsMjguMTYtMjguMTZzNy42OC0xMTUuMiw3LjY4LTExNS4yLDIuNTYsMTMwLjU2LDIuNTYsMTM1LjY4LTIuNTYsMTIuOC0yMC40OCwxNy45MkwyMzguMDgsNzI3SDI5N2MzNS44NCwwLDM1Ljg0LTIzLDM1Ljg0LTIzbDcuNjgtMTE1LjJTMzQzLDcwNCwzNDMsNzE2LjhjMCwxMC4yNC03LjY4LDE3LjkyLTM1Ljg0LDIzLTE3LjkyLDUuMTItNDEsMTAuMjQtNDEsMTAuMjRIMzMyLjhjMzMuMjgtMi41NiwzOC40LTI1LjYsMzguNC0yNS42bDU2LjMyLTI4Ni43MloiLz48cGF0aCBjbGFzcz0iY2xzLTYiIGQ9Ik01MTIsMzg0cy0xNy45MiwyODkuMjgtMTcuOTIsMjk0LjRjMCwyLjU2LTIuNTYsNy42OCwxMC4yNCwxMi44czUzLjc2LDE1LjM2LDUzLjc2LDE1LjM2SDQ5Ni42NGMtMjguMTYsMC0yOC4xNi0yMy0yOC4xNi0yOC4xNnMtNy42OC0xMTUuMi03LjY4LTExNS4yLTIuNTYsMTMwLjU2LTIuNTYsMTM1LjY4LDIuNTYsMTIuOCwyMC40OCwxNy45Mkw1MjkuOTIsNzI3SDQ3MWMtMzUuODQsMC0zNS44NC0yMy0zNS44NC0yM2wtNy42OC0xMTUuMlM0MjUsNzA0LDQyNSw3MTYuOGMwLDEwLjI0LDcuNjgsMTcuOTIsMzUuODQsMjMsMTcuOTIsNS4xMiw0MSwxMC4yNCw0MSwxMC4yNEg0MzUuMmMtMzMuMjgtMi41Ni0zOC40LTI1LjYtMzguNC0yNS42TDM0MC40OCw0MzcuNzZaIi8+PHBhdGggY2xhc3M9ImNscy02IiBkPSJNNTE0LjU2LDI0My4yYzAsNzEuNjgtNTguODgsMTI4LTEyOCwxMjhzLTEyOC01OC44OC0xMjgtMTI4LDU4Ljg4LTEyOCwxMjgtMTI4UzUxNC41NiwxNzEuNTIsNTE0LjU2LDI0My4yWiIvPjxnIGNsYXNzPSJjbHMtNyI+PGNpcmNsZSBjbGFzcz0iY2xzLTYiIGN4PSIzODYuNTYiIGN5PSIzMTIuMzIiIHI9IjIyNy44NCIvPjwvZz48cGF0aCBjbGFzcz0iY2xzLTgiIGQ9Ik01MDYuODgsMzg0czE1LjM2LTEzNS42OC01LjEyLTE4Ni44OGMtMzguNC04OS42LTEyOC04MS45Mi0xMjgtODEuOTJzNTEuMiwyMC40OCw1My43Niw5Ny4yOGMyLjU2LDUzLjc2LDAsMTMzLjEyLDAsMTMzLjEyWiIvPjwvZz48ZyBpZD0iRmFjZSI+PGNpcmNsZSBjbGFzcz0iY2xzLTkiIGN4PSIzMzIuOCIgY3k9IjE3NC4wOCIgcj0iMTcuOTIiLz48cGF0aCBjbGFzcz0iY2xzLTEwIiBkPSJNNDMwLjA4LDQzNS4yYzAsNDMuNTItMjAuNDgsNzEuNjgtNDYuMDgsNzEuNjhzLTQ2LjA4LTMzLjI4LTQ2LjA4LTc2LjhjMCwwLDIwLjQ4LDQxLDQ4LjY0LDQxUzQzMC4wOCw0MzUuMiw0MzAuMDgsNDM1LjJaIi8+PHBhdGggY2xhc3M9ImNscy0xMSIgZD0iTTQzMC4wOCw0MzUuMmMwLDI4LjE2LTIwLjQ4LDQzLjUyLTQ2LjA4LDQzLjUycy00My41Mi0yMC40OC00My41Mi00Ni4wOGMwLDAsMjAuNDgsMjUuNiw0OC42NCwyNS42UzQzMC4wOCw0MzUuMiw0MzAuMDgsNDM1LjJaIi8+PGNpcmNsZSBjbGFzcz0iY2xzLTIiIGN4PSI0NzMuNiIgY3k9IjMxNC44OCIgcj0iNzkuMzYiLz48Y2lyY2xlIGNsYXNzPSJjbHMtMiIgY3g9IjI5NC40IiBjeT0iMzE0Ljg4IiByPSI3OS4zNiIvPjxjaXJjbGUgY2xhc3M9ImNscy0xMSIgY3g9IjQ3My42IiBjeT0iMzE0Ljg4IiByPSI2MS40NCIvPjxjaXJjbGUgY2xhc3M9ImNscy0xMSIgY3g9IjI4OS4yOCIgY3k9IjMxNC44OCIgcj0iNjEuNDQiLz48Y2lyY2xlIGNsYXNzPSJjbHMtMTAiIGN4PSIyODkuMjgiIGN5PSIzMDcuMiIgcj0iMTcuOTIiLz48Y2lyY2xlIGNsYXNzPSJjbHMtMTAiIGN4PSI0NzMuNiIgY3k9IjMwNy4yIiByPSIxNy45MiIvPjwvZz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xMDIuNCwzNDUuNmMtNy42OCwwLTEyLjgtNS4xMi0xMi44LTEyLjhWMjMwLjRjMC03LjY4LDUuMTItMTIuOCwxMi44LTEyLjhzMTIuOCw1LjEyLDEyLjgsMTIuOFYzMzIuOEMxMTUuMiwzNDAuNDgsMTEwLjA4LDM0NS42LDEwMi40LDM0NS42WiIvPjxwYXRoIGNsYXNzPSJjbHMtMyIgZD0iTTY2MC40OCwzNDUuNmMtNy42OCwwLTEyLjgtNS4xMi0xMi44LTEyLjhWMjMwLjRjMC03LjY4LDUuMTItMTIuOCwxMi44LTEyLjhzMTIuOCw1LjEyLDEyLjgsMTIuOFYzMzIuOEM2NzMuMjgsMzQwLjQ4LDY2OC4xNiwzNDUuNiw2NjAuNDgsMzQ1LjZaIi8+PGNpcmNsZSBjbGFzcz0iY2xzLTExIiBjeD0iMjk2Ljk2IiBjeT0iNzEuNjgiIHI9IjEyLjgiLz48cGF0aCBjbGFzcz0iY2xzLTExIiBkPSJNMjA0LjgsNDE3LjI4Yy0yLjU2LDAtNS4xMiwwLTcuNjgtMi41NkMxNjYuNCwzNzYuMzIsMTUxLDMyNy42OCwxNTEsMjc5YTIyOC40NCwyMjguNDQsMCwwLDEsMzAuNzItMTE1LjIsMjUwLjU1LDI1MC41NSwwLDAsMSw4MS45Mi04MS45MmM1LjEyLTIuNTYsMTAuMjQsMCwxMi44LDIuNTYsMi41Niw1LjEyLDAsMTAuMjQtMi41NiwxMi44LTY0LDM1Ljg0LTEwNSwxMDUtMTA1LDE3OS4yYTIwMS43NSwyMDEuNzUsMCwwLDAsNDMuNTIsMTI1LjQ0YzIuNTYsMi41NiwyLjU2LDEwLjI0LTIuNTYsMTIuOEMyMDcuMzYsNDE3LjI4LDIwNy4zNiw0MTcuMjgsMjA0LjgsNDE3LjI4WiIvPjxwYXRoIGNsYXNzPSJjbHMtMTIiIGQ9Ik00OTkuMiw1MzcuNlY1MTcuMTJjLTM1Ljg0LDIwLjQ4LTc0LjI0LDQxLTEyMC4zMiw0MS01MS4yLDAtODQuNDgtMjMtMTE3Ljc2LTQxbDIuNTYsMjAuNDhzMzguNCw0MSwxMTcuNzYsNDFDNDU1LjY4LDU3Niw0OTkuMiw1MzcuNiw0OTkuMiw1MzcuNloiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHdpZHRoPSI3NjgiIGhlaWdodD0iNzY4Ii8+PC9nPjwvZz48L3N2Zz4=
    mediatype: image/svg+xml
  maintainers:
  - name: Disposable Zone
    email: disposable.source@icloud.com 
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          - pods
          - services
          - services/finalizers
          - endpoints
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - replicasets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resourceNames:
          - argocd-operator-helm
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          verbs:
          - get
        - apiGroups:
          - argoproj.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - prometheuses
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - user.openshift.io
          resources:
          - groups
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - '*'
        serviceAccountName: argocd-operator-helm
      deployments:
      - name: argocd-operator-helm
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: argocd-operator-helm
          strategy: {}
          template:
            metadata:
              labels:
                name: argocd-operator-helm
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: argocd-operator-helm
                image: quay.io/disposab1e/argocd-operator-helm:v0.0.4
                imagePullPolicy: Always
                name: argocd-operator-helm
                resources: {}
              serviceAccountName: argocd-operator-helm
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  maturity: alpha
  version: 0.0.4
  replaces: argocd-operator-helm.v0.0.3
  provider:
    name: Disposable Zone
