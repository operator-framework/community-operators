data:
  clusterServiceVersions: |
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          alm-examples: |-
            [{"apiVersion":"osb.openshift.io/v1alpha1","kind":"AutomationBroker","metadata":{"name":"ansible-service-broker","namespace":"openshift-ansible-service-broker"},"spec":{"createBrokerNamespace":"false","waitForBroker":"false"}}]
        name: automationbrokeroperator.v0.2.0
        namespace: placeholder
      spec:
        customresourcedefinitions:
          owned:
          - description: An Open Service Broker supporting management of application bundles
            displayName: Automation Broker
            kind: AutomationBroker
            name: automationbrokers.osb.openshift.io
            version: v1alpha1
          - description: An application bundle available for deployment via Automation
              Broker
            displayName: Automation Broker Bundle
            kind: Bundle
            name: bundles.automationbroker.io
            version: v1alpha1
          - description: An application bundle binding
            displayName: Automation Broker Bundle Binding
            kind: BundleBinding
            name: bundlebindings.automationbroker.io
            version: v1alpha1
          - description: An instance of an application bundle
            displayName: Automation Broker Bundle Instance
            kind: BundleInstance
            name: bundleinstances.automationbroker.io
            version: v1alpha1
        description: |
          Ansible Service Broker is an implementation of the [Open Service Broker API](https://github.com/openservicebrokerapi/servicebroker)
          that manages applications defined in [Ansible Playbook Bundles](https://github.com/ansibleplaybookbundle/ansible-playbook-bundle).
          Ansible Playbook Bundles (APB) are a method of defining applications via a collection of Ansible Playbooks built into a container
          with an Ansible runtime with the playbooks corresponding to a type of request specified in the
          [Open Service Broker API Specification](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#api-overview).

          Check out the [Keynote Demo from Red Hat Summit 2017](https://youtu.be/8MCbJmZQM9c?list=PLEGSLwUsxfEh4TE2GDU4oygCB-tmShkSn&t=4732)
        displayName: Automation Broker Operator
        icon:
        - base64data: 
          mediatype: image/png
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ''
                resources:
                - serviceaccounts
                - namespaces
                - pods
                verbs:
                - '*'
              - apiGroups:
                - authentication.k8s.io
                resources:
                - tokenreviews
                verbs:
                - create
              - apiGroups:
                - authorization.k8s.io
                resources:
                - subjectaccessreviews
                verbs:
                - create
              - apiGroups:
                - rbac.authorization.k8s.io
                resources:
                - clusterroles
                - clusterrolebindings
                - rolebindings
                verbs:
                - create
                - delete
                - patch
                - get
                - list
              - apiGroups:
                - servicecatalog.k8s.io
                resources:
                - clusterservicebrokers
                - servicebrokers
                verbs:
                - '*'
              - apiGroups:
                - networking.k8s.io
                resources:
                - networkpolicies
                verbs:
                - create
                - delete
                - list
                - get
              - apiGroups:
                - authorization.openshift.io
                resources:
                - subjectrulesreview
                verbs:
                - create
              - apiGroups:
                - network.openshift.io
                - ''
                resources:
                - clusternetworks
                - netnamespaces
                verbs:
                - get
                - update
                - list
              - apiGroups:
                - image.openshift.io
                - ''
                resources:
                - images
                verbs:
                - get
                - list
              - apiGroups:
                - osb.openshift.io
                resources:
                - '*'
                verbs:
                - '*'
              - apiGroups:
                - automationbroker.io
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - /osb
                - /osb/*
                verbs:
                - get
                - post
                - put
                - patch
                - delete
              serviceAccountName: automation-broker-operator
            deployments:
            - name: automation-broker-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: automation-broker-operator-alm-owned
                template:
                  metadata:
                    labels:
                      name: automation-broker-operator-alm-owned
                    name: automation-broker-operator-alm-owned
                  spec:
                    containers:
                    - env:
                      - name: IMAGE
                        value: docker.io/ansibleplaybookbundle/origin-ansible-service-broker:v4.0
                      - name: OPERATOR_NAME
                        value: automation-broker-operator
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      image: docker.io/automationbroker/automation-broker-operator:v4.0
                      imagePullPolicy: Always
                      name: automation-broker-operator
                    serviceAccountName: automation-broker-operator
            permissions:
            - rules:
              - apiGroups:
                - ''
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - ''
                resources:
                - pods
                - configmaps
                - secrets
                - services
                verbs:
                - '*'
              - apiGroups:
                - apps
                resources:
                - deployments
                verbs:
                - '*'
              - apiGroups:
                - route.openshift.io
                resources:
                - routes
                verbs:
                - '*'
              - apiGroups:
                - apps.openshift.io
                resources:
                - deploymentconfigs
                verbs:
                - '*'
              serviceAccountName: automation-broker-operator
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: false
          type: AllNamespaces
        keywords:
        - ansible
        - automation
        - broker
        - open service broker
        labels:
          alm-status-descriptors: automationbrokeroperator.v0.1.0
          operated-by: automationbrokeroperator
        links:
        - name: Blog
          url: http://automationbroker.io/
        - name: YouTube
          url: https://www.youtube.com/channel/UC04eOMIMiV06_RSZPb4OOBw
        - name: Source Code
          url: https://github.com/openshift/ansible-service-broker/
        maintainers:
        - email: ansible-service-broker@redhat.com
          name: Red Hat, Inc.
        maturity: alpha
        provider:
          name: Red Hat, Inc.
        selector:
          matchLabels:
            operated-by: automationbrokeroperator
        version: 0.2.0
  customResourceDefinitions: |
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: bundles.automationbroker.io
      spec:
        group: automationbroker.io
        names:
          kind: Bundle
          plural: bundles
          singular: bundle
        scope: Namespaced
        version: v1alpha1
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: bundlebindings.automationbroker.io
      spec:
        group: automationbroker.io
        names:
          kind: BundleBinding
          plural: bundlebindings
          singular: bundleebinding
        scope: Namespaced
        version: v1alpha1
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: automationbrokers.osb.openshift.io
      spec:
        group: osb.openshift.io
        names:
          kind: AutomationBroker
          listKind: AutomationBrokerList
          plural: automationbrokers
          singular: automationbroker
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: bundleinstances.automationbroker.io
      spec:
        group: automationbroker.io
        names:
          kind: BundleInstance
          plural: bundleinstances
          singular: bundleinstance
        scope: Namespaced
        version: v1alpha1
  packages: |
    - channels:
      - currentCSV: automationbrokeroperator.v0.2.0
        name: alpha
      packageName: automationbroker
