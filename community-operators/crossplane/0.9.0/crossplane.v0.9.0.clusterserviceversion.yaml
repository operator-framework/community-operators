apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: crossplane.v0.9.0
  namespace: crossplane-system
  annotations:
    capabilities: "Basic Install"
    support: Crossplane Developers
    categories: 'Application Runtime, Cloud Provider, Database, Integration &
    Delivery, Networking, Storage'
    containerImage: "crossplane/crossplane:v0.9.0"
    createdAt: 2020-04-01T11:59:59Z
    repository: https://github.com/crossplane/crossplane
    certified: "false"
    description: |-
      Crossplane is an open source control plane that allows you to manage
      applications and infrastructure the Kubernetes way. It manages external
      services by installing Custom Resource Definitions
      (CRDs) and reconciling instances of those Custom Resources. Crossplane is
      built to be extensible, meaning that anyone can add functionality for an new or existing cloud provider.
    alm-examples: |-
      []
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: "An ApplicationConfiguration represents an OAM application."
      displayName: "ApplicationConfiguration"
      kind: "ApplicationConfiguration"
      name: "applicationconfigurations.core.oam.dev"
      version: "v1alpha2"
    - description: "A Bucket is a portable resource claim that may be satisfied by binding to a managed resource such as an AWS S3 bucket or Azure storage container."
      displayName: "Bucket"
      kind: "Bucket"
      name: "buckets.storage.crossplane.io"
      version: "v1alpha1"
    - description: "ClusterStackInstall"
      displayName: "ClusterStackInstall"
      kind: "ClusterStackInstall"
      name: "clusterstackinstalls.stacks.crossplane.io"
      version: "v1alpha1"
    - description: "A Component describes how an OAM workload kind may be instantiated."
      displayName: "Component"
      kind: "Component"
      name: "components.core.oam.dev"
      version: "v1alpha2"
    - description: "A ContainerizedWorkload is a workload that runs OCI containers."
      displayName: "ContainerizedWorkload"
      kind: "ContainerizedWorkload"
      name: "containerizedworkloads.core.oam.dev"
      version: "v1alpha2"
    - description: "A KubernetesApplicationResource is a resource of a Kubernetes application. Each resource templates a single Kubernetes resource to be deployed to its scheduled KubernetesCluster."
      displayName: "KubernetesApplicationResource"
      kind: "KubernetesApplicationResource"
      name: "kubernetesapplicationresources.workload.crossplane.io"
      version: "v1alpha1"
    - description: "A KubernetesApplication defines an application deployed by Crossplane to a Kubernetes cluster, i.e. a portable KubernetesCluster resource claim."
      displayName: "KubernetesApplication"
      kind: "KubernetesApplication"
      name: "kubernetesapplications.workload.crossplane.io"
      version: "v1alpha1"
    - description: "A KubernetesCluster is a portable resource claim that may be satisfied by binding to a Kubernetes cluster managed resource such as an AWS EKS cluster or an Azure AKS cluster."
      displayName: "KubernetesCluster"
      kind: "KubernetesCluster"
      name: "kubernetesclusters.compute.crossplane.io"
      version: "v1alpha1"
    - description: "A KubernetesTarget is a scheduling target for a Kubernetes Application."
      displayName: "KubernetesTarget"
      kind: "KubernetesTarget"
      name: "kubernetestargets.workload.crossplane.io"
      version: "v1alpha1"
    - description: "A MachineInstance is a portable resource claim that may be satisfied by binding to a machine instance, which may include Virtual Machine managed resources such as an AWS EC2 instance or bare metal managed resources such as a Packet Device."
      displayName: "MachineInstance"
      kind: "MachineInstance"
      name: "machineinstances.compute.crossplane.io"
      version: "v1alpha1"
    - description: "A ManualScalerTrait determines how many replicas a workload should have."
      displayName: "ManualScalerTrait"
      kind: "ManualScalerTrait"
      name: "manualscalertraits.core.oam.dev"
      version: "v1alpha2"
    - description: "A MySQLInstance is a portable resource claim that may be satisfied by binding to a MySQL managed resource such as an AWS RDS instance or a GCP CloudSQL instance."
      displayName: "MySQLInstance"
      kind: "MySQLInstance"
      name: "mysqlinstances.database.crossplane.io"
      version: "v1alpha1"
    - description: "A NoSQLInstance is a portable resource claim that may be satisfied by binding to a NoSQL managed resource such as an AWS DynamoDB or an Azure CosmosDB instance."
      displayName: "NoSQLInstance"
      kind: "NoSQLInstance"
      name: "nosqlinstances.database.crossplane.io"
      version: "v1alpha1"
    - description: "A PostgreSQLInstance is a portable resource claim that may be satisfied by binding to a PostgreSQL managed resource such as an AWS RDS instance or a GCP CloudSQL instance."
      displayName: "PostgreSQLInstance"
      kind: "PostgreSQLInstance"
      name: "postgresqlinstances.database.crossplane.io"
      version: "v1alpha1"
    - description: "A Provider configures a Kubernetes 'provider', i.e. a connection to a particular Kubernetes cluster using the referenced Secret."
      displayName: "Provider"
      kind: "Provider"
      name: "providers.kubernetes.crossplane.io"
      version: "v1alpha1"
    - description: "A RedisCluster is a portable resource claim that may be satisfied by binding to a Redis managed resource such as a GCP CloudMemorystore instance or an AWS ReplicationGroup. Despite the name RedisCluster claims may bind to Redis managed resources that are a single node, or not in cluster mode."
      displayName: "RedisCluster"
      kind: "RedisCluster"
      name: "redisclusters.cache.crossplane.io"
      version: "v1alpha1"
    - description: "A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration."
      displayName: "ScopeDefinition"
      kind: "ScopeDefinition"
      name: "scopedefinitions.core.oam.dev"
      version: "v1alpha2"
    - description: "StackDefinition"
      displayName: "StackDefinition"
      kind: "StackDefinition"
      name: "stackdefinitions.stacks.crossplane.io"
      version: "v1alpha1"
    - description: "StackInstall"
      displayName: "StackInstall"
      kind: "StackInstall"
      name: "stackinstalls.stacks.crossplane.io"
      version: "v1alpha1"
    - description: "Stack"
      displayName: "Stack"
      kind: "Stack"
      name: "stacks.stacks.crossplane.io"
      version: "v1alpha1"
    - description: "A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration."
      displayName: "TraitDefinition"
      kind: "TraitDefinition"
      name: "traitdefinitions.core.oam.dev"
      version: "v1alpha2"
    - description: "A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component."
      displayName: "WorkloadDefinition"
      kind: "WorkloadDefinition"
      name: "workloaddefinitions.core.oam.dev"
      version: "v1alpha2"
  displayName: Crossplane
  description: |-
    Crossplane is an open source control plane that allows you to manage
    applications and infrastructure the Kubernetes way. It provides the
    following features:

    - Deployment and management of cloud provider managed services using the
      Kubernetes API.
    - Management and scheduling of configuration data across multiple Kubernetes
      clusters.
    - Separation of concern between [infrastructure
      owners](https://crossplane.github.io/docs/v0.9/infra_operators/overview.html), [application
      owners](https://crossplane.github.io/docs/v0.9/app_operators/overview.html), and
      [developers](https://crossplane.github.io/docs/v0.9/developers/overview.html).
    - Infrastructure agnostic packaging of applications and their dependencies.
    - Scheduling applications into different clusters, zones, and regions.

    Crossplane does not:

    - Require that you run your workloads on Kubernetes.
    - Manage the data plane across Kubernetes clusters.
    - Manage or provision non-hosted Kubernetes clusters.

    Crossplane can be [installed](https://crossplane.github.io/docs/v0.9/install.html) into any Kubernetes cluster,
    and is compatible with any Kubernetes-native project. It manages external
    services by installing [Custom Resource
    Definitions](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/)
    (CRDs) and
    [reconciling](https://kubernetes.io/docs/concepts/architecture/controller/)
    instances of those Custom Resources. Crossplane is built to be extensible,
    meaning that anyone can add functionality for an new or existing cloud provider.

    Crossplane is comprised of four main components:

    1. **Core Crossplane**: the set of Kubernetes CRDs and controllers that manage
      installation of `providers`, `stacks`, and `applications`, as well as the
      scheduling of configuration data to remote Kubernetes clusters.
    2. **Providers**: the set of Kubernetes CRDs and controllers that provision and
      manage services on cloud providers. A cloud provider is any service that
      exposes infrastructure via an API.
        - Examples: [Google Cloud
          Platform](https://github.com/crossplane/provider-gcp), [Amazon Web
          Services](https://github.com/crossplane/provider-aws),
          [Azure](https://github.com/crossplane/provider-azure),
          [Alibaba](https://github.com/crossplane/provider-alibaba),
          [Github](https://github.com/crossplane/provider-github)
    3. **Stacks**: a bundled set of custom resources that together represent an
      environment on a cloud provider. The bundle of instances can be created by
      a single custom resource.
      - Examples: [Stack Minimal
        GCP](https://github.com/crossplane/stack-minimal-gcp), [Stack Minimal
        AWS](https://github.com/crossplane/stack-minimal-aws), [Stack Minimal
        Azure](https://github.com/crossplane/stack-minimal-azure)
    4. **Applications**: a deployable unit of code and configuration, which,
      when created, may involve provisioning new services which are managed by a
      `provider`, or consuming services created by a `stack`.
        - Examples: [Wordpress](https://github.com/crossplane/app-wordpress)

    The full vision and architecture of the Crossplane project is described in our
    [architecture document](https://docs.google.com/document/d/1whncqdUeU2cATGEJhHvzXWC9xdK29Er45NJeoemxebo/edit?usp=sharing).

    For more information, take a look at the official Crossplane [documentation](https://crossplane.io/docs/latest).
  icon:
  - base64data: iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSJVB4uIiGSoThZERRy1CkWoEGqFVh1MLv0QmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi5Oik6CIl/i8ptIjx4Lgf7+497t4BQq3ENKttDNB020wl4mImuyKGXhHEELrRh4DMLGNWkpLwHV/3CPD1Lsaz/M/9ObrUnMWAgEg8wwzTJl4nntq0Dc77xBFWlFXic+JRky5I/Mh1xeM3zgWXBZ4ZMdOpOeIIsVhoYaWFWdHUiCeJo6qmU76Q8VjlvMVZK1VY4578heGcvrzEdZqDSGABi5AgQkEFGyjBRoxWnRQLKdqP+/gHXL9ELoVcG2DkmEcZGmTXD/4Hv7u18hPjXlI4DrS/OM7HMBDaBepVx/k+dpz6CRB8Bq70pr9cA6Y/Sa82tegR0LMNXFw3NWUPuNwB+p8M2ZRdKUhTyOeB9zP6pizQewt0rnq9NfZx+gCkqavkDXBwCIwUKHvN590drb39e6bR3w8ZfXKD6dodOgAAAAZiS0dEAMgAAAAAICYYZQAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+QDHg4YMBg7LLcAAAKTSURBVFjD7Zc/aBNhGMaf97u75Cq1g6FtootLKW1jqaaLhSo41EFQUlP/DI46uCr1TwJe0OLmaKkOdVEsLoIUBw0OgRak4H9pBN1KhBqQtjQmd7nXIQg21uZyyV1u6DPevfd9v3ve73s+PmBb9YkaMUhO09oU6P0gtAMAGMs6lPcBTVtpKuDqzUQPSuYtgE4AkCpelwA8ZZiJNu32ouuAa8n4OWbcA6BWKc0T4XzrjYmHduYRtpxLxseY8cACHAC0mMCU8fz4qCsOrmlakKFnALRZ/GRdHfy0KId+dIGpmwbTWUcdZBQTNuAOANgJwVcdbTFrmgDojA24P393llkTjgH+LDsXsAVXVjvepAKOAfqBVktwkY+ZTeDKMg3nAH9Vry87tzu3/78VppAcA2yx19aN8rmQg7bh3Apqt+AaAbj1hthEaSXMbgFW3xAVuk6x+Ut6lNwAXFcjn2tqa1zE5l6K3oO1TiS7sebiIjb3gnqH7DhRG6CahxrOuAZXM6A6nCaowjLcNRpLp6hnuJ5dWJuDfsG1OFcvXCODeoMmxSjX01ZHASdFFNMUpkaNJxoPt6+JJ8kO0rdoqyU4uYSCc4AczAEoVj5OSiffTlPYyggFFFaWHAOkvidFME9VHl+z6BuwdkOju/NDp/LOrsFVZRzArI3j61nJ+HbFlYs7M+jxwuXDd+SRERAFd6HYcchYPqaWyt1ngjnj2/sIIJ2Zs8Lk1OvI0VcA2BXAfxbWh4l+QzfffV/KQteLICJ0R++Tp2JGSBI694Sg+HxNjJkqkiQJnaEQZEVhTwICgCRL6AiGDM8CAoCsSN5ykA2zMtvyngL0D5S+Alj4K4dmPAVIpJmqXzoCwgVmPq1+6bqIbXlEvwH2we+YDAREaAAAAABJRU5ErkJggg==
    mediatype: image/png
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
          - create
          - update
        - apiGroups:
          - cache.crossplane.io
          - compute.crossplane.io
          - database.crossplane.io
          - kubernetes.crossplane.io
          - core.crossplane.io
          - stacks.crossplane.io
          - storage.crossplane.io
          - workload.crossplane.io
          - core.oam.dev
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: crossplane
      - rules:
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: crossplane-stack-manager
      deployments:
      - name: crossplane
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: crossplane
          template:
            metadata:
              labels:
                name: crossplane
            spec:
              containers:
              - image: crossplane/crossplane:v0.9.0
                imagePullPolicy: Always
                name: crossplane
              serviceAccountName: crossplane
      - name: crossplane-stack-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: crossplane-stack-manager
          template:
            metadata:
              labels:
                name: crossplane-stack-manager
            spec:
              containers:
              - image: crossplane/crossplane:v0.9.0
                args:
                - stack
                - manage
                - --templates
                - --templating-controller-image
                - crossplane/templating-controller:v0.2.1
                env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: STACK_MANAGER_IMAGE
                  value: crossplane/crossplane:v0.9.0
                imagePullPolicy: Always
                name: crossplane
              serviceAccountName: crossplane-stack-manager
  version: 0.9.0
  maturity: alpha
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  maintainers:
  - name: Crossplane Maintainers
    email: info@crossplane.io
  provider:
    name: Crossplane Developers
  links:
  - name: GitHub Repository
    url: https://github.com/crossplane/crossplane
  - name: Blog
    url: https://blog.crossplane.io/
  - name: Twitter
    url: https://twitter.com/crossplane_io
  - name: Slack
    url: https://slack.crossplane.io/
  keywords:
  - clusters as cattle
  - infrastructure
  - iac
  - workloads
  - gcp
  - azure
  - aws
  - rds
  - cloudsql
  - gke
  - aks
  - eks
  - oam
