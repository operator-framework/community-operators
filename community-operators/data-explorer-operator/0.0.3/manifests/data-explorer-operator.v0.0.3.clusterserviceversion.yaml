apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "data-explorer.com/v1alpha1",
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboardwithjupyterhub-sample"
          },
          "spec": {}
        }
      ]
    capabilities: Basic Install
    categories: Developer Tools
    certified: "false"
    createdAt: "2020-11-17T12:00:00Z"
    repository: https://github.com/rhm-samples/data-explorer-operator
    support: IBM Edge
    operators.operatorframework.io/builder: operator-sdk-v1.1.0
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
  name: data-explorer-operator.v0.0.3
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Deploy Data Explorer Dashboard with JupyterHub
        displayName: DashboardWithJupyterHub
        kind: DashboardWithJupyterHub
        name: dashboardwithjupyterhubs.data-explorer.com
        resources:
          - kind: Route
            name: ""
            version: route.openshift.io/v1
        statusDescriptors:
          - description: Dashboard URL
            displayName: Data explorer Dashboard URL
            path: url
            x-descriptors:
              - "urn:alm:descriptor:org.w3:link"
        version: v1alpha1
  description: |
    Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.

    ***Pre-Requisite:***

    Create a secret in the namespace where the operator needs to be installed. 

    The secret name should be ***aws-access*** and should contain the AWS ACCESS KEY and AWS SECRET ACCESS KEY with S3 access.

    ```
      apiVersion: v1
      kind: Secret
      metadata:
        name: aws-access
        namespace: YOUR-NAMESPACE
      data:
        AWS_ACCESS_KEY_ID: YOUR_AWS_KEY
        AWS_SECRET_ACCESS_KEY: YOUR_AWS_ACCESS_KEY_SECRET
      type: Opaque
    ```
  displayName: Data Explorer Operator
  icon:
    - base64data: >-
        
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - secrets
                - pods
                - pods/exec
                - pods/log
                - services
                - services/finalizers
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - deployments
                - routes
                - serviceaccounts
                - persistentvolumes
                - nodes
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - security.openshift.io
              resourceNames:
                - anyuid
                - privileged
              resources:
                - securitycontextconstraints
              verbs:
                - use
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - data-explorer.com
              resources:
                - dashboardwithjupyterhubs
                - dashboardwithjupyterhubs/status
                - dashboardwithjupyterhubs/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - "*"
            - apiGroups:
                - operators.coreos.com
              resources:
                - operatorgroups
                - subscriptions
                - clusterserviceversions
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - "*"
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
          serviceAccountName: data-explorer-operator
      deployments:
        - name: data-explorer-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: data-explorer-operator
            strategy: {}
            template:
              metadata:
                labels:
                  name: data-explorer-operator
              spec:
                containers:
                  - args:
                      - --secure-listen-address=0.0.0.0:8443
                      - --upstream=http://127.0.0.1:8080/
                      - --logtostderr=true
                      - --v=10
                    image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                    name: kube-rbac-proxy
                    ports:
                      - containerPort: 8443
                        name: https
                    resources: {}
                  - args:
                      - --metrics-addr=127.0.0.1:8080
                      - --enable-leader-election
                      - --leader-election-id=data-explorer-operator
                    env:
                      - name: ANSIBLE_GATHERING
                        value: explicit
                    image: quay.io/dataexplorer/data-explorer-operator-community:12-8-1
                    imagePullPolicy: Always
                    name: manager
                    resources: {}
                    volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                initContainers:
                  - command:
                      - /bin/sh
                      - -c
                      - "echo \"apiVersion: data-explorer.com/v1alpha1\nkind: DashboardWithJupyterHub\nmetadata:\n  name: dashboard-with-jupyterhub\nspec:\" | oc apply -f -                            \n"
                    image: widerin/openshift-cli:v4.5
                    imagePullPolicy: Always
                    name: dashboardinstaller
                    resources: {}
                serviceAccountName: data-explorer-operator
                volumes:
                  - emptyDir: {}
                    name: runner
          serviceAccountName: data-explorer-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  keywords:
    - Developer tools
    - Data Explorer Operator
  links:
    - name: Data Explorer Operator
      url: https://github.com/rhm-samples/data-explorer-operator
  maintainers:
    - email: edge@us.ibm.com
      name: IBM-Edge
  replaces: data-explorer-operator.v0.0.2
  maturity: alpha
  provider:
    name: IBM-Edge
  version: 0.0.3
