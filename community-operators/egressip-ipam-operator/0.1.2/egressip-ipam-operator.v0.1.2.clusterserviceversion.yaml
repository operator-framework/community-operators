apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "redhatcop.redhat.io/v1alpha1",
          "kind": "EgressIPAM",
          "metadata": {
            "name": "egressipam-baremetal"
          },
          "spec": {
            "cidrAssignments": [
              {
                "CIDR": "192.169.0.0/24",
                "labelValue": "true"
              }
            ],
            "nodeSelector": {
              "matchLabels": {
                "node-role.kubernetes.io/worker": ""
              }
            },
            "topologyLabel": "egressGateway"
          }
        },
        {
          "apiVersion": "redhatcop.redhat.io/v1alpha1",
          "kind": "EgressIPAM",
          "metadata": {
            "name": "egressipam-aws"
          },
          "spec": {
            "cidrAssignments": [
              {
                "CIDR": "10.0.128.0/20",
                "labelValue": "eu-central-1a"
              },
              {
                "CIDR": "10.0.144.0/20",
                "labelValue": "eu-central-1b"
              },
              {
                "CIDR": "10.0.160.0/20",
                "labelValue": "eu-central-1c"
              }
            ],
            "nodeSelector": {
              "matchLabels": {
                "node-role.kubernetes.io/worker": ""
              }
            },
            "topologyLabel": "failure-domain.beta.kubernetes.io/zone"
          }
        }
      ]
    capabilities: Deep Insights
    categories: Networking, Cloud Provider, Security
    certified: "false"
    containerImage: quay.io/redhat-cop/egressip-ipam-operator:v0.1.2
    createdAt: 03/13/2020
    description: This operator provides automation around manageing egressIPs.
    repository: https://github.com/redhat-cop/egressip-ipam-operator
    support: Best Effort
  name: egressip-ipam-operator.v0.1.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: EgressIPAM is the Schema for the egressipams API
      kind: EgressIPAM
      name: egressipams.redhatcop.redhat.io
      version: v1alpha1
  description: |
    This operator automates the assignment of egressIPs to namespaces.
    Namespaces can opt in to receiving one or more egressIPs with the following annotation `egressip-ipam-operator.redhat-cop.io/egressipam:<egressIPAM>`, where `egressIPAM` is the CRD that controls how egressIPs are assigned.
    IPs assigned to the namespace can be looked up in the following annotation: `egressip-ipam-operator.redhat-cop.io/egressips`.

    EgressIP assignments is managed by the EgressIPAM CRD. Here is an example of it:

    ```yaml
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: EgressIPAM
    metadata:
      name: example-egressipam
    spec:
      cidrAssignments:
        - labelValue: "true"
          CIDR: 192.169.0.0/24
          reservedIPs:
          - "192.159.0.5"
      topologyLabel: egressGateway
      nodeSelector:
        node-role.kubernetes.io/worker: ""
    ```

    This EgressIPAM specifies that all nodes that comply with the specified node selector and that also have labels `egressGateway: "true"` will be assigned egressIP from the specified CIDR.

    Note that the `cidrAssigments` field is an array and therefore, multiple groups of nodes can be identified with the labelValue and different CIDRs can be assigned to them. This is usually not necessary on a bare metal deployment.

    In the bare metal scenario, when this egressCRD is created, all the `hostsubnet` relative to the nodes selected by this EgressIPAM will be update to have the EgressCIDRs field equal to the specified CIDR (see below for cloud provider scenarios).

    When a namespace is created with the opt-in annotation: `egressip-ipam-operator.redhat-cop.io/egressipam=<egressIPAM>`, an available egressIP is selected from the CIDR and assigned to the namespace.The `netnamespace` associated with this namespace is updated to use that egressIP.

    It is possible to specify a set of reserved IPs. These IPs must belong to the CIDR and will never be assigned.

    ## Passing EgressIPs as input

    The normal mode of operation of this operator is to pick a random IP from the configured CIDR. However, it also supports a scenario where egressIPs are picked by an external process and passed as input.

    In this case IPs must me passed as an annotation to the namespace, like this: `egressip-ipam-operator.redhat-cop.io/egressips=IP1,IP2...`. The value of the annotation is a comma separated array of ip with no spaces.

    There must be exactly one IP per CIDR defined in the referenced egressIPAM. Moreover, each IP must belong to the corresponding CIDR. Because this situation can lead to inconsistencies, failing to have correspondence between IPs in the namespace annotation and CIDRs in the egressIPAM CR will cause the operator to error out and stop processing all the namespaces associated with the given EgressIPAM CR.

    It also also a responsibility of the progress picking the IPs to ensure that those IPs are actually available.

    ## Assumptions

    The following assumptions apply when using this operator:

    1. If multiple EgressIPAMs are defined, their selected nodes MUST NOT overlap.
    2. When using a cloud provider the topology label MUST be `failure-domain.beta.kubernetes.io/zone`.

    ## Support for AWS

    In AWS as well as other cloud providers, one cannot freely assign IPs to machines. Additional steps need to be performed in this case. Considering this EgressIPAM

    ```yaml
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: EgressIPAM
    metadata:
      name: egressipam-aws
    spec:
      cidrAssignments:
        - labelValue: "eu-central-1a"
          CIDR: 10.0.128.0/20
        - labelValue: "eu-central-1b"
          CIDR: 10.0.144.0/20
        - labelValue: "eu-central-1c"
          CIDR: 10.0.160.0/20
      topologyLabel: failure-domain.beta.kubernetes.io/zone
      nodeSelector:
        matchLabels:
          node-role.kubernetes.io/worker: ""
    ```

    When a namespace with the opt-in annotation is created, the following happens:

    1. for each of the CIDRs, an available IP is selected and assigned to the namespace
    2. the relative `netnamespace` is update to reflect the assignment (multiple IPs will be assigned in this case).
    3. one node per zone is selected to carry the egressIP
    4. the relative aws machines are assigned the additional IP on the main interface (support for secondary interfaces in not available)
    5. the relative `hostsubnets` are updated to reflect the assigned IP, the `egressIP` field is updated.
  displayName: Egressip Ipam Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - redhatcop.redhat.io
          resources:
          - egressipams
          - egressipams/finalizers
          - egressipams/status
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          - namespaces
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - update
        - apiGroups:
          - network.openshift.io
          resources:
          - netnamespaces
          - hostsubnets
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - config.openshift.io
          resources:
          - infrastructures
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - machine.openshift.io
          resources:
          - machinesets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cloudcredential.openshift.io
          resources:
          - credentialsrequests
          verbs:
          - get
          - list
          - watch
          - create
          - update
        serviceAccountName: egressip-ipam-operator
      deployments:
      - name: egressip-ipam-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: egressip-ipam-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: egressip-ipam-operator
            spec:
              containers:
              - command:
                - egressip-ipam-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: egressip-ipam-operator
                image: quay.io/redhat-cop/egressip-ipam-operator:v0.1.2
                imagePullPolicy: Always
                name: egressip-ipam-operator
                resources: {}
              serviceAccountName: egressip-ipam-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - pods
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - services
          - services/finalizers
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
          - list
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - egressip-ipam-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        serviceAccountName: egressip-ipam-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - egressIPs
  - high availability
  - firewall support
  - traffic management
  - ipam
  links:
  - name: repository
    url: https://github.com/redhat-cop/egressip-ipam-operator
  - name: containerImage
    url: https://quay.io/redhat-cop/egressip-ipam-operator:v0.1.2
  maintainers:
  - email: rspazzol@redhat.com
    name: Raffaele Spazzoli
  maturity: alpha
  provider:
    name: Red Hat Community of Practice
  replaces: egressip-ipam-operator.v0.1.1
  version: 0.1.2
