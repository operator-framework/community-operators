apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: beats.beat.k8s.elastic.co
spec:
  additionalPrinterColumns:
  - JSONPath: .status.health
    name: health
    type: string
  - JSONPath: .status.availableNodes
    description: Available nodes
    name: available
    type: integer
  - JSONPath: .status.expectedNodes
    description: Expected nodes
    name: expected
    type: integer
  - JSONPath: .spec.type
    description: Beat type
    name: type
    type: string
  - JSONPath: .spec.version
    description: Beat version
    name: version
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: age
    type: date
  group: beat.k8s.elastic.co
  names:
    categories:
    - elastic
    kind: Beat
    listKind: BeatList
    plural: beats
    shortNames:
    - beat
    singular: beat
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Beat is the Schema for the Beats API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BeatSpec defines the desired state of a Beat.
          properties:
            config:
              description: Config holds the Beat configuration. At most one of [`Config`,
                `ConfigRef`] can be specified.
              type: object
            configRef:
              description: ConfigRef contains a reference to an existing Kubernetes
                Secret holding the Beat configuration. Beat settings must be specified
                as yaml, under a single "beat.yml" entry. At most one of [`Config`,
                `ConfigRef`] can be specified.
              properties:
                secretName:
                  description: SecretName is the name of the secret.
                  type: string
              type: object
            daemonSet:
              description: DaemonSet specifies the Beat should be deployed as a DaemonSet,
                and allows providing its spec. Cannot be used along with `deployment`.
                If both are absent a default for the Type is used.
              properties: {}
              type: object
            deployment:
              description: Deployment specifies the Beat should be deployed as a Deployment,
                and allows providing its spec. Cannot be used along with `daemonSet`.
                If both are absent a default for the Type is used.
              properties:
                replicas:
                  format: int32
                  type: integer
              type: object
            elasticsearchRef:
              description: ElasticsearchRef is a reference to an Elasticsearch cluster
                running in the same Kubernetes cluster.
              properties:
                name:
                  description: Name of the Kubernetes object.
                  type: string
                namespace:
                  description: Namespace of the Kubernetes object. If empty, defaults
                    to the current namespace.
                  type: string
              required:
              - name
              type: object
            image:
              description: Image is the Beat Docker image to deploy. Version and Type
                have to match the Beat in the image.
              type: string
            kibanaRef:
              description: KibanaRef is a reference to a Kibana instance running in
                the same Kubernetes cluster. It allows automatic setup of dashboards
                and visualizations.
              properties:
                name:
                  description: Name of the Kubernetes object.
                  type: string
                namespace:
                  description: Namespace of the Kubernetes object. If empty, defaults
                    to the current namespace.
                  type: string
              required:
              - name
              type: object
            secureSettings:
              description: SecureSettings is a list of references to Kubernetes Secrets
                containing sensitive configuration options for the Beat. Secrets data
                can be then referenced in the Beat config using the Secret's keys
                or as specified in `Entries` field of each SecureSetting.
              items:
                description: SecretSource defines a data source based on a Kubernetes
                  Secret.
                properties:
                  entries:
                    description: Entries define how to project each key-value pair
                      in the secret to filesystem paths. If not defined, all keys
                      will be projected to similarly named paths in the filesystem.
                      If defined, only the specified keys will be projected to the
                      corresponding paths.
                    items:
                      description: KeyToPath defines how to map a key in a Secret
                        object to a filesystem path.
                      properties:
                        key:
                          description: Key is the key contained in the secret.
                          type: string
                        path:
                          description: Path is the relative file path to map the key
                            to. Path must not be an absolute file path and must not
                            contain any ".." components.
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  secretName:
                    description: SecretName is the name of the secret.
                    type: string
                required:
                - secretName
                type: object
              type: array
            serviceAccountName:
              description: ServiceAccountName is used to check access from the current
                resource to Elasticsearch resource in a different namespace. Can only
                be used if ECK is enforcing RBAC on references.
              type: string
            type:
              description: Type is the type of the Beat to deploy (filebeat, metricbeat,
                heartbeat, auditbeat, journalbeat, packetbeat, etc.). Any string can
                be used, but well-known types will have the image field defaulted
                and have the appropriate Elasticsearch roles created automatically.
                It also allows for dashboard setup when combined with a `KibanaRef`.
              maxLength: 20
              pattern: '[a-zA-Z0-9-]+'
              type: string
            version:
              description: Version of the Beat.
              type: string
          required:
          - type
          - version
          type: object
        status:
          description: BeatStatus defines the observed state of a Beat.
          properties:
            availableNodes:
              format: int32
              type: integer
            elasticsearchAssociationStatus:
              description: AssociationStatus is the status of an association resource.
              type: string
            expectedNodes:
              format: int32
              type: integer
            health:
              type: string
            kibanaAssociationStatus:
              description: AssociationStatus is the status of an association resource.
              type: string
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
