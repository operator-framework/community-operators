---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/hook": crd-install
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: federatedclusters.core.federation.k8s.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: ready
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: age
    type: date
  group: core.federation.k8s.io
  names:
    kind: FederatedCluster
    plural: federatedclusters
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            clusterRef:
              description: Name of the cluster registry Cluster resource from which
                to source api endpoints. TODO(marun) should this go away in favor
                of a 1:1 mapping?
              properties:
                name:
                  description: Name of the cluster registry Cluster resource from
                    which to source API endpoints.
                  type: string
              required:
              - name
              type: object
            secretRef:
              description: Name of the secret containing kubeconfig to access the
                referenced cluster.  Admin needs to ensure that the required secret
                exists. Secret should be in the same namespace where federation control
                plane is hosted and it should have kubeconfig in its data with key
                "kubeconfig".  This will later be changed to a reference to secret
                in federation control plane when the federation control plane supports
                secrets.  This can be left empty if the cluster allows insecure access.
              properties:
                name:
                  description: Name of a secret within the enclosing namespace
                  type: string
              required:
              - name
              type: object
          type: object
        status:
          properties:
            conditions:
              description: Conditions is an array of current cluster conditions.
              items:
                properties:
                  lastProbeTime:
                    description: Last time the condition was checked.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transit from one status to
                      another.
                    format: date-time
                    type: string
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  reason:
                    description: (brief) reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of cluster condition, Ready or Offline.
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            region:
              description: Region is the name of the region in which all of the nodes
                in the cluster exist.  e.g. 'us-east1'.
              type: string
            zones:
              description: Zones are the names of availability zones in which the
                nodes of the cluster exist, e.g. 'us-east1-a'.
              items:
                type: string
              type: array
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
