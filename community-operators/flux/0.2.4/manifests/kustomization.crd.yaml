apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: 0.2.4
  name: kustomizations.kustomize.toolkit.fluxcd.io
spec:
  group: kustomize.toolkit.fluxcd.io
  names:
    kind: Kustomization
    listKind: KustomizationList
    plural: kustomizations
    shortNames:
      - ks
    singular: kustomization
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of
                an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architectur\
                e/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object
                represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info:
                https://git.k8s.io/community/contributors/devel/sig-architectur\
                e/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the desired state of a kustomization.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for
                        decryption.
                      properties:
                        name:
                          description: "Name of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/workin\
                            g-with-objects/names/#names TODO: Add other useful
                            fields. apiVersion, kind, uid?"
                          type: string
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: DependsOn may contain a
                    dependency.CrossNamespaceDependencyReference slice with
                    references to Kustomization resources that must be ready
                    before this Kustomization can be reconciled.
                  items:
                    description: CrossNamespaceDependencyReference holds the reference to a
                      dependency.
                    properties:
                      name:
                        description: Name holds the name reference of a dependency.
                        type: string
                      namespace:
                        description: Namespace holds the namespace reference of a dependency.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: CrossNamespaceObjectReference contains enough information to let
                      you locate the typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent, defaults to 'apps/v1'
                        type: string
                      kind:
                        description: Kind of the referent
                        type: string
                      name:
                        description: Name of the referent
                        type: string
                      namespace:
                        description: Namespace of the referent
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the kustomization.
                  type: string
                kubeConfig:
                  description: The KubeConfig for reconciling the Kustomization on a remote
                    cluster. When specified, KubeConfig takes precedence over
                    ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains a 'value' key
                        with the kubeconfig file as the value. It must be in the
                        same namespace as the Kustomization. It is recommended
                        that the kubeconfig is self-contained, and the secret is
                        regularly updated if credentials such as a
                        cloud-access-token expire. Cloud specific `cmd-path`
                        auth helpers will not function without adding binaries
                        and credentials to the Pod that is responsible for
                        reconciling the Kustomization.
                      properties:
                        name:
                          description: "Name of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/workin\
                            g-with-objects/names/#names TODO: Add other useful
                            fields. apiVersion, kind, uid?"
                          type: string
                      type: object
                  type: object
                path:
                  description: Path to the directory containing the kustomization file.
                  pattern: ^\./
                  type: string
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate when
                    reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      description: Kind of the referent
                      enum:
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the Kustomization namespace
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent kustomize
                    executions, it does not apply to already started executions.
                    Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace sets or overrides the namespace in the
                    kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: Validate the Kubernetes objects before applying them on the
                    cluster. The validation strategy can be 'client' (local
                    dry-run), 'server' (APIServer dry-run) or 'none'.
                  enum:
                    - none
                    - client
                    - server
                  type: string
              required:
                - interval
                - path
                - prune
                - sourceRef
              type: object
            status:
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: >-
                      Condition contains details for one aspect of the current
                      state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path
                      .status.conditions.  For example, type FooStatus
                      struct{     // Represents the observations of a foo's
                      current state.     // Known .status.conditions.type are:
                      "Available", "Progressing", and "Degraded"     //
                      +patchMergeKey=type     // +patchStrategy=merge     //
                      +listType=map     // +listMapKey=type     Conditions
                      []metav1.Condition `json:"conditions,omitempty"
                      patchStrategy:"merge" patchMergeKey:"type"
                      protobuf:"bytes,1,rep,name=conditions"` 
                           // other fields }
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from
                          one status to another. This should be when the
                          underlying condition changed.  If that is not known,
                          then using the time when the API field changed is
                          acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the
                          transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the
                          condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the
                          .status.conditions[x].observedGeneration is 9, the
                          condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for
                          the condition's last transition. Producers of specific
                          condition types may define expected values and
                          meanings for this field, and whether the values are
                          considered a guaranteed API. The value should be a
                          CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. ---
                          Many .condition.type values are consistent across
                          resources like Available, but because arbitrary
                          conditions can be useful (see
                          .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is
                          (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAppliedRevision:
                  description: The last successfully applied revision. The revision format for Git
                    sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation
                    attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile
                    request value, so a change can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
                snapshot:
                  description: The last successfully applied revision metadata.
                  properties:
                    checksum:
                      description: The manifests sha1 checksum.
                      type: string
                    entries:
                      description: A list of Kubernetes kinds grouped by namespace.
                      items:
                        description: Snapshot holds the metadata of namespaced Kubernetes objects
                        properties:
                          kinds:
                            additionalProperties:
                              type: string
                            description: The list of Kubernetes kinds.
                            type: object
                          namespace:
                            description: The namespace of this entry.
                            type: string
                        required:
                          - kinds
                        type: object
                      type: array
                  required:
                    - checksum
                    - entries
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
