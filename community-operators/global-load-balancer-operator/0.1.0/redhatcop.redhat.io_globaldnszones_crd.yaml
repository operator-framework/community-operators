apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: globaldnszones.redhatcop.redhat.io
spec:
  group: redhatcop.redhat.io
  names:
    kind: GlobalDNSZone
    listKind: GlobalDNSZoneList
    plural: globaldnszones
    singular: globaldnszone
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: GlobalDNSZone is the Schema for the globaldnszones API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GlobalDNSZoneSpec defines the desired state of GlobalDNSZone
          properties:
            domain:
              pattern: (?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]
              type: string
            provider:
              description: ProviderConfig configures kind and access to the DNS Zone.
                Exactly one of its members must be set.
              properties:
                externalDNS:
                  description: ExternalDNSProviderConfig contains configuration on
                    how configure the external DNS provider
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a map of annotations to be added
                        to the created DNSEndpoint records.
                      type: object
                  type: object
                route53:
                  description: Route53ProviderConfig contains configuration on how
                    to access the route53 API
                  properties:
                    credentialsSecretRef:
                      description: CredentialsSecretRef is a reference to a secret
                        containing the credentials to access the AWS API //TODO (content
                        and needed permissions) expected secret keys are "aws_access_key_id"
                        and "aws_secret_access_key"
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    zoneID:
                      description: ZoneID is the AWS route53 zone ID.
                      type: string
                  required:
                  - credentialsSecretRef
                  - zoneID
                  type: object
              type: object
          required:
          - domain
          - provider
          type: object
        status:
          description: GlobalDNSZoneStatus defines the observed state of GlobalDNSZone
          properties:
            conditions:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
