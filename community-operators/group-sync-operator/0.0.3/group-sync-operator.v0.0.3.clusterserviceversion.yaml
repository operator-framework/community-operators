apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "redhatcop.redhat.io/v1alpha1",
          "kind": "GroupSync",
          "metadata": {
            "name": "azure-groupsync"
          },
          "spec": {
            "providers": [
              {
                "azure": {
                  "credentialsSecret": {
                    "name": "azure-group-sync",
                    "namespace": "group-sync-operator"
                  }
                },
                "name": "azure"
              }
            ]
          }
        },
        {
          "apiVersion": "redhatcop.redhat.io/v1alpha1",
          "kind": "GroupSync",
          "metadata": {
            "name": "github-groupsync"
          },
          "spec": {
            "providers": [
              {
                "github": {
                  "credentialsSecret": {
                    "name": "github-group-sync",
                    "namespace": "group-sync-operator"
                  },
                  "organization": "redhat-cop"
                },
                "name": "github"
              }
            ]
          }
        },
        {
          "apiVersion": "redhatcop.redhat.io/v1alpha1",
          "kind": "GroupSync",
          "metadata": {
            "name": "gitlab-groupsync"
          },
          "spec": {
            "providers": [
              {
                "gitlab": {
                  "credentialsSecret": {
                    "name": "gitlab-group-sync",
                    "namespace": "group-sync-operator"
                  },
                  "url": "https://gitlab.apps.openshift.com"
                },
                "name": "gitlab"
              }
            ]
          }
        },
        {
          "apiVersion": "redhatcop.redhat.io/v1alpha1",
          "kind": "GroupSync",
          "metadata": {
            "name": "keycloak-groupsync"
          },
          "spec": {
            "providers": [
              {
                "keycloak": {
                  "credentialsSecret": {
                    "name": "keycloak-group-sync",
                    "namespace": "group-sync-operator"
                  },
                  "insecure": true,
                  "realm": "ocp",
                  "url": "https://keycloak.apps.openshift.com"
                },
                "name": "keycloak"
              }
            ]
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Security
    certified: "false"
    containerImage: quay.io/redhat-cop/group-sync-operator:v0.0.3
    createdAt: "2020-06-25T15:20:12Z"
    description: Synchronize groups and users from external providers
    repository: https://github.com/redhat-cop/group-sync-operator
    support: Red Hat Community of Practice
  name: group-sync-operator.v0.0.3
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: GroupSync is the Schema for the groupsyncs API
        displayName: Group Sync Operator
        kind: GroupSync
        name: groupsyncs.redhatcop.redhat.io
        specDescriptors:
          - description:
              List of Providers that can be mounted by containers belonging
              to the pod.
            displayName: Providers
            path: providers
          - description: Azure represents the Azure provider
            displayName: Azure
            path: providers[0].azure
          - description:
              CredentialsSecret is a reference to a secret containing authentication
              details for communicating to Azure
            displayName: Credentials Secret
            path: providers[0].azure.credentialsSecret
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
          - description: Key represents the specific key to reference from the secret
            displayName: Key
            path: providers[0].azure.credentialsSecret.key
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the secret
            displayName: Name
            path: providers[0].azure.credentialsSecret.name
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Namespace represents the namespace containing the secret
            displayName: Namespace
            path: providers[0].azure.credentialsSecret.namespace
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Groups represents a filtered list of groups to synchronize
            displayName: Groups
            path: providers[0].azure.groups
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description:
              Insecure specifies whether to allow for unverified certificates
              to be used when communicating to Azure
            displayName: Insecure
            path: providers[0].azure.insecure
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
          - description: URL is the location of the Azure platform
            displayName: URL
            path: providers[0].azure.url
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: GitHub represents the GitHub provider
            displayName: Git Hub
            path: providers[0].github
          - description:
              CaSecret is a reference to a secret containing a CA certificate
              to communicate to the GitHub server
            displayName: Ca Secret
            path: providers[0].github.caSecret
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
          - description: Key represents the specific key to reference from the secret
            displayName: Key
            path: providers[0].github.caSecret.key
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the secret
            displayName: Name
            path: providers[0].github.caSecret.name
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Namespace represents the namespace containing the secret
            displayName: Namespace
            path: providers[0].github.caSecret.namespace
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description:
              CredentialsSecret is a reference to a secret containing authentication
              details for the GitHub server
            displayName: Credentials Secret
            path: providers[0].github.credentialsSecret
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
          - description: Key represents the specific key to reference from the secret
            displayName: Key
            path: providers[0].github.credentialsSecret.key
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the secret
            displayName: Name
            path: providers[0].github.credentialsSecret.name
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Namespace represents the namespace containing the secret
            displayName: Namespace
            path: providers[0].github.credentialsSecret.namespace
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description:
              Insecure specifies whether to allow for unverified certificates
              to be used when communicating to GitHab
            displayName: Insecure
            path: providers[0].github.insecure
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
          - description: Organization represents the location to source teams to synchronize
            displayName: Organization
            path: providers[0].github.organization
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Teams represents a filtered list of teams to synchronize
            displayName: Teams
            path: providers[0].github.teams
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: URL is the location of the GitHub server
            displayName: URL
            path: providers[0].github.url
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: GitLab represents the GitLab provider
            displayName: Git Lab
            path: providers[0].gitlab
          - description:
              CaSecret is a reference to a secret containing a CA certificate
              to communicate to the GitLab server
            displayName: Ca Secret
            path: providers[0].gitlab.caSecret
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
          - description: Key represents the specific key to reference from the secret
            displayName: Key
            path: providers[0].gitlab.caSecret.key
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the secret
            displayName: Name
            path: providers[0].gitlab.caSecret.name
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Namespace represents the namespace containing the secret
            displayName: Namespace
            path: providers[0].gitlab.caSecret.namespace
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description:
              CredentialsSecret is a reference to a secret containing authentication
              details for the GitLab server
            displayName: Credentials Secret
            path: providers[0].gitlab.credentialsSecret
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
          - description: Key represents the specific key to reference from the secret
            displayName: Key
            path: providers[0].gitlab.credentialsSecret.key
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the secret
            displayName: Name
            path: providers[0].gitlab.credentialsSecret.name
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Namespace represents the namespace containing the secret
            displayName: Namespace
            path: providers[0].gitlab.credentialsSecret.namespace
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Groups represents a filtered list of groups to synchronize
            displayName: Groups
            path: providers[0].gitlab.groups
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description:
              Insecure specifies whether to allow for unverified certificates
              to be used when communicating to GitLab
            displayName: Insecure
            path: providers[0].gitlab.insecure
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
          - description: URL is the location of the GitLub server
            displayName: URL
            path: providers[0].gitlab.url
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Keycloak represents the Keycloak provider
            displayName: Keycloak
            path: providers[0].keycloak
          - description:
              CaSecret is a reference to a secret containing a CA certificate
              to communicate to the Keycloak server
            displayName: Ca Secret
            path: providers[0].keycloak.caSecret
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
          - description: Key represents the specific key to reference from the secret
            displayName: Key
            path: providers[0].keycloak.caSecret.key
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the secret
            displayName: Name
            path: providers[0].keycloak.caSecret.name
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Namespace represents the namespace containing the secret
            displayName: Namespace
            path: providers[0].keycloak.caSecret.namespace
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description:
              CredentialsSecret is a reference to a secret containing authentication
              details for the Keycloak server
            displayName: Credentials Secret
            path: providers[0].keycloak.credentialsSecret
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
          - description: Key represents the specific key to reference from the secret
            displayName: Key
            path: providers[0].keycloak.credentialsSecret.key
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the secret
            displayName: Name
            path: providers[0].keycloak.credentialsSecret.name
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Namespace represents the namespace containing the secret
            displayName: Namespace
            path: providers[0].keycloak.credentialsSecret.namespace
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Groups represents a filtered list of groups to synchronize
            displayName: Groups
            path: providers[0].keycloak.groups
          - description:
              Insecure specifies whether to allow for unverified certificates
              to be used when communicating to Keycloak
            displayName: Insecure
            path: providers[0].keycloak.insecure
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
          - description: LoginRealm is the Keycloak realm to authenticate against
            displayName: Login Realm
            path: providers[0].keycloak.loginRealm
          - description: Realm is the realm containing the groups to synchronize against
            displayName: Realm
            path: providers[0].keycloak.realm
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Scope represents the depth for which groups will be synchronized
            displayName: Scope
            path: providers[0].keycloak.scope
          - description: URL is the location of the Keycloak server
            displayName: URL
            path: providers[0].keycloak.url
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:advanced
              - urn:alm:descriptor:com.tectonic.ui:text
          - description: Name represents the name of the provider
            displayName: Name
            path: providers[0].name
        statusDescriptors:
          - displayName: Conditions
            path: conditions
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes.conditions
          - description:
              LastSyncSuccessTime represents the time last synchronization
              completed successfully
            displayName: Last Sync Success Time
            path: lastSyncSuccessTime
        version: v1alpha1
  description: |
    Synchronizes groups from external providers into OpenShift

    ## Overview

    The OpenShift Container Platform contains functionality to synchronize groups found in external identity providers into the platform. Currently, this functionality is limited to LDAP only. This operator is designed to integrate with external providers in order to provide new solutions.

    Group Synchronization is facilitated by creating a `GroupSync` resource. The following describes the high level schema for this resource:

    ```shell
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: GroupSync
    metadata:
      name: example-groupsync
    spec:
      providers:
        - <One or more providers to synchronize>
    ```

    ## Deploying the Operator

    Use the following steps to deploy the operator to an OpenShift cluster

    1. Assuming that you are authenticated to the cluster, create a new project called `group-sync-operator`
    .
    ```shell
    oc new-project group-sync-operator
    ```
    .
    2. Clone the project locally and changed into the project
    .
    .
    ```shell
    git clone https://github.com/redhat-cop/group-sync-operator.git
    cd group-sync-operator
    oc apply -f deploy/crds/redhatcop.redhat.io_groupsyncs_crd.yaml
    oc apply -n group-sync-operator -f deploy/service_account.yaml
    oc apply -n group-sync-operator -f deploy/clusterrole.yaml
    oc apply -n group-sync-operator -f deploy/clusterrole_binding.yaml
    oc apply -n group-sync-operator -f deploy/role.yaml
    oc apply -n group-sync-operator -f deploy/role_binding.yaml
    oc apply -n group-sync-operator -f deploy/operator.yaml
    ```

    ## Authentication

    In most cases, authentication details must be provided in order to communicate with providers. Authentication details are provider specific with regards to the required values. In supported providers, the secret can be referenced in the `credentialsSecret` by name and namespace where it has been created as shown below:

    ```
    credentialsSecret:
      name: <secret_name>
      namespace: <secret_namespace>
    ```

    ## Providers

    Integration with external systems is made possible through a set of pluggable external providers. The following providers are currently supported:

    * [Azure](https://azure.microsoft.com/)
    * [GitHub](https://github.com)
    * [GitLab](https://gitlab.com)
    * [Keycloak](https://www.keycloak.org/)/[Red Hat Single Sign On](https://access.redhat.com/products/red-hat-single-sign-on)

    The following sections describe the configuration options available for each provider


    ### Azure

    Groups contained within Azure Active Directory can be synchronized into OpenShift. The following table describes the set of configuration options for the Azure provider:

    | Name | Description | Defaults | Required | 
    | ----- | ---------- | -------- | ----- |
    | `credentialsSecret` | Name of the secret containing authentication details (See below) | | Yes |
    | `groups` | List of groups to filter against | | No |

    The following is an example of a minimal configuration that can be applied to integrate with a Azure provider:

    ```shell
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: GroupSync
    metadata:
      name: azure-groupsync
    spec:
      providers:
      - name: azure
        azure:
          credentialsSecret:
            name: azure-group-sync
            namespace: group-sync-operator
    ```

    #### Authenticating to Azure

    Authentication to Azure can be performed using Service Principal with access to query group information in Azure Active Directory. A secret must be created in the same namespace that contains the `GroupSync` resource:

    The following keys must be defined in the secret

    * `AZURE_SUBSCRIPTION_ID` - Subscription ID
    * `AZURE_TENANT_ID` - Tenant ID
    * `AZURE_CLIENT_ID` - Client ID
    * `AZURE_CLIENT_SECRET` - Client Secret

    The secret can be created by executing the following command:

    ```shell
    oc create secret generic azure-group-sync --from-literal=AZURE_SUBSCRIPTION_ID=<AZURE_SUBSCRIPTION_ID> --from-literal=AZURE_TENANT_ID=<AZURE_TENANT_ID> --from-literal=AZURE_CLIENT_ID=<AZURE_CLIENT_ID> --from-literal=AZURE_CLIENT_SECRET=<AZURE_CLIENT_SECRET>
    ```

    ### GitHub

    Teams stored within a GitHub organization can be synchronized into OpenShift. The following table describes the set of configuration options for the GitHub provider:

    | Name | Description | Defaults | Required | 
    | ----- | ---------- | -------- | ----- |
    | `caSecret` | Reference to a secret containing a SSL certificate to use for communication (See below) | | No |
    | `credentialsSecret` | Reference to a secret containing authentication details (See below) | | Yes |
    | `insecure` | Ignore SSL verification | `false` | No |
    | `organization` | Organization to synchronize against | | Yes |
    | `teams` | List of teams to filter against | | No |
    | `url` | Base URL for the GitHub or GitHub Enterprise host (Must contain a trailing slash) | | No |


    The following is an example of a minimal configuration that can be applied to integrate with a Github provider:

    ```shell
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: GroupSync
    metadata:
      name: github-groupsync
    spec:
      providers:
      - name: github
        github:
          organization: ocp
          credentialsSecret: 
            name: github-group-sync
            namespace: group-sync-operator
    ```

    #### Authenticating to GitHub

    Authentication to GitHub can be performed using an OAuth Personal Access Token or a Username and Password (Note: 2FA not supported). A secret must be created in the same namespace that contains the `GroupSync` resource:

    When using an OAuth token, the following key is required:

    * `token` - OAuth token

    The secret can be created by executing the following command:

    ```shell
    oc create secret generic github-group-sync --from-literal=token=<token>
    ```


    The following keys are required for username and password:

    * `username` - Username for authenticating with GitHub
    * `password` - Password for authenticating with GitHub

    The secret can be created by executing the following command:

    ```shell
    oc create secret generic github-group-sync --from-literal=username=<username> --from-literal=password=<password>
    ```

    ### GitLab

    Groups stored within a GitLab can be synchronized into OpenShift. The following table describes the set of configuration options for the GitLab provider:

    | Name | Description | Defaults | Required | 
    | ----- | ---------- | -------- | ----- |
    | `caSecret` | Reference to a secret containing a SSL certificate to use for communication (See below) | | No |
    | `credentialsSecret` | Reference to a secret containing authentication details (See below) | | Yes |
    | `insecure` | Ignore SSL verification | 'false' | No |
    | `groups` | List of groups to filter against | | No |
    | `url` | Base URL for the GitLab instance | `https://gitlab.com` | No |


    The following is an example of a minimal configuration that can be applied to integrate with a Github provider:

    ```shell
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: GroupSync
    metadata:
      name: gitlab-groupsync
    spec:
      providers:
      - name: gitlab
        gitlab:
          credentialsSecret:
            name: gitlab-group-sync
            namespace: group-sync-operator
    ```

    #### Authenticating to GitLab

    Authentication to GitLab can be performed using an OAuth Personal Access Token or a Username and Password (Note: 2FA not supported). A secret must be created in the same namespace that contains the `GroupSync` resource:

    When using an OAuth token, the following key is required:

    * `token` - OAuth token

    The secret can be created by executing the following command:

    ```shell
    oc create secret generic gitlab-group-sync --from-literal=token=<token>
    ```


    The following keys are required for username and password:

    * `username` - Username for authenticating with GitLab
    * `password` - Password for authenticating with GitLab

    The secret can be created by executing the following command:

    ```shell
    oc create secret generic gitlab-group-sync --from-literal=username=<username> --from-literal=password=<password>
    ```

    ### Keycloak

    Groups stored within Keycloak can be synchronized into OpenShift. The following table describes the set of configuration options for the Keycloak provider:

    | Name | Description | Defaults | Required | 
    | ----- | ---------- | -------- | ----- |
    | `caSecret` | Reference to a secret containing a SSL certificate to use for communication (See below) | | No |
    | `credentialsSecret` | Reference to a secret containing authentication details (See below) | | Yes |
    | `groups` | List of groups to filter against | | No |
    | `insecure` | Ignore SSL verification | 'false' | No |
    | `loginRealm` | Realm to authenticate against | `master` | No |
    | `realm` | Realm to synchronize | | Yes |
    | `scope` | Scope for group synchronization. Options are `one` for one level or `sub` to include subgroups | `sub` | No |
    | `url` | URL Location for Keycloak | | Yes |


    The following is an example of a minimal configuration that can be applied to integrate with a Keycloak provider:

    ```shell
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: GroupSync
    metadata:
      name: keycloak-groupsync
    spec:
      providers:
      - name: keycloak
        keycloak:
          realm: ocp
          credentialsSecret:
            name: keycloak-group-sync
            namespace: group-sync-operator
          url: https://keycloak-keycloak-operator.apps.openshift.com
    ```

    #### Authenticating to Keycloak

    A secret must be created in the same namespace that contains the `GroupSync` resource. It must contain the following keys:

    * `username` - Username for authenticating with Keycloak
    * `password` - Password for authenticating with Keycloak

    The secret can be created by executing the following command:

    ```shell
    oc create secret generic keycloak-group-sync --from-literal=username=<username> --from-literal=password=<password>
    ```

    ### Support for Additional Metadata (Beta)

    Additional metadata based on Keycloak group are also added to the OpenShift groups as Annotations including:

    * Parent/child relationship between groups and their subgroups
    * Group attributes

    ## CA Certificates

    Each provider allows for certificates to be provided in a secret to communicate to the target host. The secret must be placed in the same namespace as the `GroupSync`. An example of how a CA certificate for the Keycloak provider can be found below:


    ```shell
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: GroupSync
    metadata:
      name: keycloak-groupsync
    spec:
      providers:
      - keycloak:
          realm: ocp
          credentialsSecret:
            name: keycloak-group-sync
            namespace: group-sync-operator
          caSecret:
            name: keycloak-certs
            key: tls.crt
          url: https://keycloak-keycloak-operator.apps.openshift.com
    ```


    ## Scheduled Execution

    A cron style expression can be specified for which a synchronization event will occur. The following specifies that a synchronization should occur nightly at 3AM


    ```shell
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: GroupSync
    metadata:
      name: keycloak-groupsync
    spec:
      schedule: "0 3 * * *"
      providers:
      - ...
    ```

    If a schedule is not provided, synchronization will occur only when the object is reconciled by the platform.
  displayName: Group Sync Operator
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - get
                - list
                - watch
                - create
                - patch
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - user.openshift.io
              resources:
                - groups
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - redhatcop.redhat.io
              resources:
                - groupsyncs
                - groupsyncs/status
                - groupsyncs/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
          serviceAccountName: group-sync-operator
      deployments:
        - name: group-sync-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: group-sync-operator
            strategy: {}
            template:
              metadata:
                labels:
                  name: group-sync-operator
              spec:
                containers:
                  - command:
                      - group-sync-operator
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: group-sync-operator
                    image: quay.io/redhat-cop/group-sync-operator:v0.0.3
                    imagePullPolicy: Always
                    name: group-sync-operator
                    resources: {}
                serviceAccountName: group-sync-operator
      permissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - pods
                - services
                - services/finalizers
                - endpoints
                - events
                - configmaps
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - replicasets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - group-sync-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - replicasets
                - deployments
              verbs:
                - get
          serviceAccountName: group-sync-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  keywords:
    - group
    - user
    - security
    - authorization
  links:
    - name: Group Sync Operator
      url: https://github.com/redhat-cop/group-sync-operator
  maintainers:
    - email: ablock@redhat.com
      name: Andrew Block
  maturity: alpha
  provider:
    name: Red Hat Community of Practice
  replaces: group-sync-operator.v0.0.2
  version: 0.0.3
