apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: clusterdeployments.hive.openshift.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.clusterName
    name: ClusterName
    type: string
  - JSONPath: .metadata.labels.hive\.openshift\.io/cluster-type
    name: ClusterType
    type: string
  - JSONPath: .spec.baseDomain
    name: BaseDomain
    type: string
  - JSONPath: .spec.installed
    name: Installed
    type: boolean
  - JSONPath: .spec.clusterMetadata.infraID
    name: InfraID
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: hive.openshift.io
  names:
    kind: ClusterDeployment
    plural: clusterdeployments
    shortNames:
    - cd
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClusterDeployment is the Schema for the clusterdeployments API
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterDeploymentSpec defines the desired state of ClusterDeployment
          type: object
          required:
          - baseDomain
          - clusterName
          - platform
          properties:
            baseDomain:
              description: BaseDomain is the base domain to which the cluster should
                belong.
              type: string
            certificateBundles:
              description: CertificateBundles is a list of certificate bundles associated
                with this cluster
              type: array
              items:
                description: CertificateBundleSpec specifies a certificate bundle
                  associated with a cluster deployment
                type: object
                required:
                - certificateSecretRef
                - name
                properties:
                  certificateSecretRef:
                    description: CertificateSecretRef is the reference to the secret
                      that contains the certificate bundle. If the certificate bundle
                      is to be generated, it will be generated with the name in this
                      reference. Otherwise, it is expected that the secret should
                      exist in the same namespace as the ClusterDeployment
                    type: object
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                  generate:
                    description: Generate indicates whether this bundle should have
                      real certificates generated for it.
                    type: boolean
                  name:
                    description: Name is an identifier that must be unique within
                      the bundle and must be referenced by an ingress or by the control
                      plane serving certs
                    type: string
            clusterMetadata:
              description: ClusterMetadata contains metadata information about the
                installed cluster.
              type: object
              required:
              - adminKubeconfigSecretRef
              - adminPasswordSecretRef
              - clusterID
              - infraID
              properties:
                adminKubeconfigSecretRef:
                  description: AdminKubeconfigSecretRef references the secret containing
                    the admin kubeconfig for this cluster.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                adminPasswordSecretRef:
                  description: AdminPasswordSecretRef references the secret containing
                    the admin username/password which can be used to login to this
                    cluster.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                clusterID:
                  description: ClusterID is a globally unique identifier for this
                    cluster generated during installation. Used for reporting metrics
                    among other places.
                  type: string
                infraID:
                  description: InfraID is an identifier for this cluster generated
                    during installation and used for tagging/naming resources in cloud
                    providers.
                  type: string
            clusterName:
              description: ClusterName is the friendly name of the cluster. It is
                used for subdomains, some resource tagging, and other instances where
                a friendly name for the cluster is useful.
              type: string
            controlPlaneConfig:
              description: ControlPlaneConfig contains additional configuration for
                the target cluster's control plane
              type: object
              properties:
                apiURLOverride:
                  description: APIURLOverride is the optional URL override to which
                    Hive will transition for communication with the API server of
                    the remote cluster. When a remote cluster is created, Hive will
                    initially communicate using the API URL established during installation.
                    If an API URL Override is specified, Hive will periodically attempt
                    to connect to the remote cluster using the override URL. Once
                    Hive has determined that the override URL is active, Hive will
                    use the override URL for further communications with the API server
                    of the remote cluster.
                  type: string
                servingCertificates:
                  description: ServingCertificates specifies serving certificates
                    for the control plane
                  type: object
                  properties:
                    additional:
                      description: Additional is a list of additional domains and
                        certificates that are also associated with the control plane's
                        api endpoint.
                      type: array
                      items:
                        description: ControlPlaneAdditionalCertificate defines an
                          additional serving certificate for a control plane
                        type: object
                        required:
                        - domain
                        - name
                        properties:
                          domain:
                            description: Domain is the domain of the additional control
                              plane certificate
                            type: string
                          name:
                            description: Name references a CertificateBundle in the
                              ClusterDeployment.Spec that should be used for this
                              additional certificate.
                            type: string
                    default:
                      description: Default references the name of a CertificateBundle
                        in the ClusterDeployment that should be used for the control
                        plane's default endpoint.
                      type: string
            ingress:
              description: Ingress allows defining desired clusteringress/shards to
                be configured on the cluster.
              type: array
              items:
                description: ClusterIngress contains the configurable pieces for any
                  ClusterIngress objects that should exist on the cluster.
                type: object
                required:
                - domain
                - name
                properties:
                  domain:
                    description: Domain (sometimes referred to as shard) is the full
                      DNS suffix that the resulting IngressController object will
                      service (eg abcd.mycluster.mydomain.com).
                    type: string
                  name:
                    description: Name of the ClusterIngress object to create.
                    type: string
                  namespaceSelector:
                    description: NamespaceSelector allows filtering the list of namespaces
                      serviced by the ingress controller.
                    type: object
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        type: array
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          type: object
                          required:
                          - key
                          - operator
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              type: array
                              items:
                                type: string
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
                  routeSelector:
                    description: RouteSelector allows filtering the set of Routes
                      serviced by the ingress controller
                    type: object
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        type: array
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          type: object
                          required:
                          - key
                          - operator
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              type: array
                              items:
                                type: string
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
                  servingCertificate:
                    description: ServingCertificate references a CertificateBundle
                      in the ClusterDeployment.Spec that should be used for this Ingress
                    type: string
            installed:
              description: Installed is true if the cluster has been installed
              type: boolean
            manageDNS:
              description: ManageDNS specifies whether a DNSZone should be created
                and managed automatically for this ClusterDeployment
              type: boolean
            platform:
              description: Platform is the configuration for the specific platform
                upon which to perform the installation.
              type: object
              properties:
                aws:
                  description: AWS is the configuration used when installing on AWS.
                  type: object
                  required:
                  - credentialsSecretRef
                  - region
                  properties:
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the AWS account access credentials.
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                    region:
                      description: Region specifies the AWS region where the cluster
                        will be created.
                      type: string
                    userTags:
                      description: UserTags specifies additional tags for AWS resources
                        created for the cluster.
                      type: object
                      additionalProperties:
                        type: string
                azure:
                  description: Azure is the configuration used when installing on
                    Azure.
                  type: object
                  required:
                  - credentialsSecretRef
                  - region
                  properties:
                    baseDomainResourceGroupName:
                      description: BaseDomainResourceGroupName specifies the resource
                        group where the azure DNS zone for the base domain is found
                      type: string
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the Azure account access credentials.
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                    region:
                      description: Region specifies the Azure region where the cluster
                        will be created.
                      type: string
                baremetal:
                  description: BareMetal is the configuration used when installing
                    on bare metal.
                  type: object
                  required:
                  - libvirtSSHPrivateKeySecretRef
                  properties:
                    libvirtSSHPrivateKeySecretRef:
                      description: LibvirtSSHPrivateKeySecretRef is the reference
                        to the secret that contains the private SSH key to use for
                        access to the libvirt provisioning host. The SSH private key
                        is expected to be in the secret data under the "ssh-privatekey"
                        key.
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                gcp:
                  description: GCP is the configuration used when installing on Google
                    Cloud Platform.
                  type: object
                  required:
                  - credentialsSecretRef
                  - region
                  properties:
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the GCP account access credentials.
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                    region:
                      description: Region specifies the GCP region where the cluster
                        will be created.
                      type: string
                openstack:
                  description: OpenStack is the configuration used when installing
                    on OpenStack
                  type: object
                  required:
                  - cloud
                  - credentialsSecretRef
                  properties:
                    cloud:
                      description: Cloud will be used to indicate the OS_CLOUD value
                        to use the right section from the cloud.yaml in the CredentialsSecretRef.
                      type: string
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the OpenStack account access credentials.
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
            preserveOnDelete:
              description: PreserveOnDelete allows the user to disconnect a cluster
                from Hive without deprovisioning it
              type: boolean
            provisioning:
              description: Provisioning contains settings used only for initial cluster
                provisioning. May be unset in the case of adopted clusters.
              type: object
              required:
              - installConfigSecretRef
              properties:
                imageSetRef:
                  description: ImageSetRef is a reference to a ClusterImageSet. If
                    a value is specified for ReleaseImage, that will take precedence
                    over the one from the ClusterImageSet.
                  type: object
                  required:
                  - name
                  properties:
                    name:
                      description: Name is the name of the ClusterImageSet that this
                        refers to
                      type: string
                installConfigSecretRef:
                  description: InstallConfigSecretRef is the reference to a secret
                    that contains an openshift-install InstallConfig. This file will
                    be passed through directly to the installer. Any version of InstallConfig
                    can be used, provided it can be parsed by the openshift-install
                    version for the release you are provisioning.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                installerEnv:
                  description: InstallerEnv are extra environment variables to pass
                    through to the installer. This may be used to enable additional
                    features of the installer.
                  type: array
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    type: object
                    required:
                    - name
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        type: object
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            type: object
                            required:
                            - key
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            type: object
                            required:
                            - fieldPath
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            type: object
                            required:
                            - resource
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            type: object
                            required:
                            - key
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                manifestsConfigMapRef:
                  description: ManifestsConfigMapRef is a reference to user-provided
                    manifests to add to or replace manifests that are generated by
                    the installer.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                releaseImage:
                  description: ReleaseImage is the image containing metadata for all
                    components that run in the cluster, and is the primary and best
                    way to specify what specific version of OpenShift you wish to
                    install.
                  type: string
                sshKnownHosts:
                  description: SSHKnownHosts are known hosts to be configured in the
                    hive install manager pod to avoid ssh prompts. Use of ssh in the
                    install pod is somewhat limited today (failure log gathering from
                    cluster, some bare metal provisioning scenarios), so this setting
                    is often not needed.
                  type: array
                  items:
                    type: string
                sshPrivateKeySecretRef:
                  description: SSHPrivateKeySecretRef is the reference to the secret
                    that contains the private SSH key to use for access to compute
                    instances. This private key should correspond to the public key
                    included in the InstallConfig. The private key is used by Hive
                    to gather logs on the target cluster if there are install failures.
                    The SSH private key is expected to be in the secret data under
                    the "ssh-privatekey" key.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
            pullSecretRef:
              description: PullSecretRef is the reference to the secret to use when
                pulling images.
              type: object
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
        status:
          description: ClusterDeploymentStatus defines the observed state of ClusterDeployment
          type: object
          properties:
            apiURL:
              description: APIURL is the URL where the cluster's API can be accessed.
              type: string
            certificateBundles:
              description: CertificateBundles contains of the status of the certificate
                bundles associated with this cluster deployment.
              type: array
              items:
                description: CertificateBundleStatus specifies whether a certificate
                  bundle was generated for this cluster deployment.
                type: object
                required:
                - generated
                - name
                properties:
                  generated:
                    description: Generated indicates whether the certificate bundle
                      was generated
                    type: boolean
                  name:
                    description: Name of the certificate bundle
                    type: string
            cliImage:
              description: CLIImage is the name of the oc cli image to use when installing
                the target cluster
              type: string
            clusterVersionStatus:
              description: ClusterVersionStatus will hold a copy of the remote cluster's
                ClusterVersion.Status
              type: object
              required:
              - availableUpdates
              - desired
              - observedGeneration
              - versionHash
              properties:
                availableUpdates:
                  description: availableUpdates contains the list of updates that
                    are appropriate for this cluster. This list may be empty if no
                    updates are recommended, if the update service is unavailable,
                    or if an invalid channel has been specified.
                  type: array
                  items:
                    description: Update represents a release of the ClusterVersionOperator,
                      referenced by the Image member.
                    type: object
                    properties:
                      force:
                        description: "force allows an administrator to update to an
                          image that has failed verification, does not appear in the
                          availableUpdates list, or otherwise would be blocked by
                          normal protections on update. This option should only be
                          used when the authenticity of the provided image has been
                          verified out of band because the provided image will run
                          with full administrative access to the cluster. Do not use
                          this flag with images that comes from unknown or potentially
                          malicious sources. \n This flag does not override other
                          forms of consistency checking that are required before a
                          new update is deployed."
                        type: boolean
                      image:
                        description: image is a container image location that contains
                          the update. When this field is part of spec, image is optional
                          if version is specified and the availableUpdates field contains
                          a matching version.
                        type: string
                      version:
                        description: version is a semantic versioning identifying
                          the update version. When this field is part of spec, version
                          is optional if image is specified.
                        type: string
                  nullable: true
                conditions:
                  description: conditions provides information about the cluster version.
                    The condition "Available" is set to true if the desiredUpdate
                    has been reached. The condition "Progressing" is set to true if
                    an update is being applied. The condition "Degraded" is set to
                    true if an update is currently blocked by a temporary or permanent
                    error. Conditions are only valid for the current desiredUpdate
                    when metadata.generation is equal to status.generation.
                  type: array
                  items:
                    description: ClusterOperatorStatusCondition represents the state
                      of the operator's managed and monitored components.
                    type: object
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status property.
                        type: string
                        format: date-time
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the CamelCase reason for the condition's
                          current status.
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the aspect reported by this condition.
                        type: string
                desired:
                  description: desired is the version that the cluster is reconciling
                    towards. If the cluster is not yet fully initialized desired will
                    be set with the information available, which may be an image or
                    a tag.
                  type: object
                  properties:
                    force:
                      description: "force allows an administrator to update to an
                        image that has failed verification, does not appear in the
                        availableUpdates list, or otherwise would be blocked by normal
                        protections on update. This option should only be used when
                        the authenticity of the provided image has been verified out
                        of band because the provided image will run with full administrative
                        access to the cluster. Do not use this flag with images that
                        comes from unknown or potentially malicious sources. \n This
                        flag does not override other forms of consistency checking
                        that are required before a new update is deployed."
                      type: boolean
                    image:
                      description: image is a container image location that contains
                        the update. When this field is part of spec, image is optional
                        if version is specified and the availableUpdates field contains
                        a matching version.
                      type: string
                    version:
                      description: version is a semantic versioning identifying the
                        update version. When this field is part of spec, version is
                        optional if image is specified.
                      type: string
                history:
                  description: history contains a list of the most recent versions
                    applied to the cluster. This value may be empty during cluster
                    startup, and then will be updated when a new update is being applied.
                    The newest update is first in the list and it is ordered by recency.
                    Updates in the history have state Completed if the rollout completed
                    - if an update was failing or halfway applied the state will be
                    Partial. Only a limited amount of update history is preserved.
                  type: array
                  items:
                    description: UpdateHistory is a single attempted update to the
                      cluster.
                    type: object
                    required:
                    - completionTime
                    - image
                    - startedTime
                    - state
                    - verified
                    properties:
                      completionTime:
                        description: completionTime, if set, is when the update was
                          fully applied. The update that is currently being applied
                          will have a null completion time. Completion time will always
                          be set for entries that are not the current update (usually
                          to the started time of the next update).
                        type: string
                        format: date-time
                        nullable: true
                      image:
                        description: image is a container image location that contains
                          the update. This value is always populated.
                        type: string
                      startedTime:
                        description: startedTime is the time at which the update was
                          started.
                        type: string
                        format: date-time
                      state:
                        description: state reflects whether the update was fully applied.
                          The Partial state indicates the update is not fully applied,
                          while the Completed state indicates the update was successfully
                          rolled out at least once (all parts of the update successfully
                          applied).
                        type: string
                      verified:
                        description: verified indicates whether the provided update
                          was properly verified before it was installed. If this is
                          false the cluster may not be trusted.
                        type: boolean
                      version:
                        description: version is a semantic versioning identifying
                          the update version. If the requested image does not define
                          a version, or if a failure occurs retrieving the image,
                          this value may be empty.
                        type: string
                observedGeneration:
                  description: observedGeneration reports which version of the spec
                    is being synced. If this value is not equal to metadata.generation,
                    then the desired and conditions fields may represent a previous
                    version.
                  type: integer
                  format: int64
                versionHash:
                  description: versionHash is a fingerprint of the content that the
                    cluster will be updated with. It is used by the operator to avoid
                    unnecessary work and is for internal use only.
                  type: string
            conditions:
              description: Conditions includes more detailed status for the cluster
                deployment
              type: array
              items:
                description: ClusterDeploymentCondition contains details for the current
                  condition of a cluster deployment
                type: object
                required:
                - status
                - type
                properties:
                  lastProbeTime:
                    description: LastProbeTime is the last time we probed the condition.
                    type: string
                    format: date-time
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another.
                    type: string
                    format: date-time
                  message:
                    description: Message is a human-readable message indicating details
                      about last transition.
                    type: string
                  reason:
                    description: Reason is a unique, one-word, CamelCase reason for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
            installRestarts:
              description: InstallRestarts is the total count of container restarts
                on the clusters install job.
              type: integer
            installedTimestamp:
              description: InstalledTimestamp is the time we first detected that the
                cluster has been successfully installed.
              type: string
              format: date-time
            installerImage:
              description: InstallerImage is the name of the installer image to use
                when installing the target cluster
              type: string
            provisionRef:
              description: ProvisionRef is a reference to the last ClusterProvision
                created for the deployment
              type: object
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
            webConsoleURL:
              description: WebConsoleURL is the URL for the cluster's web console
                UI.
              type: string
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
