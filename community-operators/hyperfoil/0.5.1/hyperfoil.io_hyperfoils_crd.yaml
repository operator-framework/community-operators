apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: hyperfoils.hyperfoil.io
spec:
  group: hyperfoil.io
  names:
    kind: Hyperfoil
    listKind: HyperfoilList
    plural: hyperfoils
    singular: hyperfoil
    shortNames:
    - hf
    categories:
    - all
    - hyperfoil
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Hyperfoil is the Schema for the hyperfoils API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Configures Hyperfoil Controller and related resources.
          type: object
          properties:
            version:
              description: Tag for controller image. Defaults to version matching the operator version.
              type: string
            image:
              description: >
                Controller image. If 'version' is defined, too, the tag is replaced (or appended).
                Defaults to 'quay.io/hyperfoil/hyperfoil'
              type: string
            route:
              description: Host for the route leading to Controller REST endpoint.
              type: string
            log:
              description: >
                Name of the config map and optionally its entry (separated by '/': e.g myconfigmap/log4j2-superverbose.xml)
                storing Log4j2 configuration file. By default the Controller uses its embedded configuration.
              type: string
            agentDeployTimeout:
              description: Deploy timeout for agents, in milliseconds.
              type: integer
            triggerUrl:
              description: >
                If this is set the controller does not start benchmark run right away after hitting
                /benchmark/my-benchmark/start ; instead it responds with status 301 and header Location
                set to concatenation of this string and 'BENCHMARK=my-benchmark&RUN_ID=xxxx'.
                CLI interprets that response as a request to hit CI instance on this URL, assuming that
                CI will trigger a new job that will eventually call /benchmark/my-benchmark/start?runId=xxxx
                with header 'x-trigger-job'. This is useful if the the CI has to synchronize Hyperfoil
                to other benchmarks that don't use this controller instance.
              type: string
            preHooks:
              description: Name of config map holding hooks that run before the run starts.
              type: string
            postHooks:
              description: Name of config map holding hooks that run when the run finishes.
              type: string
        status:
          description: status defines the observed state of Hyperfoil
          type: object
          properties:
            status:
              description: "One of: 'Ready', 'Pending' or 'Error'"
              type: string
            reason:
              description: Human readable explanation for the status.
              type: string
            lastUpdate:
              description: RFC 3339 date and time of the last update.
              type: string
      type: object
  version: v1alpha1
  additionalPrinterColumns:
  - JSONPath: .spec.version
    name: Version
    type: string
  - JSONPath: .spec.route
    name: Route
    type: string
  - JSONPath: .status.status
    name: Status
    type: string
  versions:
  - name: v1alpha1
    served: true
    storage: true
