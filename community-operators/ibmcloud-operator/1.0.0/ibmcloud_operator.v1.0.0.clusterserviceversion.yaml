apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: ibmcloud-operator.v1.0.0
  namespace: placeholder
  annotations:
    alm-examples: |-
      [{"apiVersion":"ibmcloud.ibm.com/v1","kind":"Service","metadata":{"annotations":{"ibmcloud.ibm.com/self-healing":"enabled"},"name":"mytranslator"},"spec":{"plan":"lite","serviceClass":"language-translator"}},{"apiVersion":"ibmcloud.ibm.com/v1","kind":"Binding","metadata":{"name":"binding-translator"},"spec":{"parameters":[{"name":"serviceid_crn","value":"crn:v1:bluemix:public:iam-identity::a/ACCOUNT_ID::serviceid:SERVICE_ID"}],"secretName":"translator-secret","serviceName":"mytranslator"}}]
    capabilities: Basic Install
    categories: Cloud Provider
    certified: "false"
    containerImage: cloudoperators/ibmcloud-operator:1.0.0
    createdAt: 2020-09-23T23:57:03Z
    description: The IBM Cloud Operator provides a Kubernetes CRD-Based API to manage the lifecycle of IBM public cloud services.
    repository: https://github.com/IBM/cloud-operators
    support: IBM
spec:
  displayName: IBM Cloud Operator
  icon:
  # image should be 175x175
  - base64data: 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
    mediatype: image/png
  description: |-
    With the IBM Cloud Operator, you can provision and bind [IBM public cloud services](https://cloud.ibm.com/catalog#services) to your Kubernetes cluster in a Kubernetes-native way. The IBM Cloud Operator is based on the [Kubernetes custom resource definition (CRD) API](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) so that your applications can create, update, and delete IBM Cloud services from within the cluster by calling Kubnernetes APIs, instead of needing to use several IBM Cloud APIs in addition to configuring your app for Kubernetes.
    
    
    ## Features
    
    * **Service provisioning**: Create any service with any plan that is available in the [IBM Cloud catalog](https://cloud.ibm.com/catalog#services).
    
    * **Bindings management**: Automatically create Kubernetes secrets in your Kubernetes cluster with the credentials to bind to any provisioned service to the cluster.
    
    
    ## Upgrading the operator
    
    
    To upgrade an OperatorHub installation, use the OpenShift web console to perform the upgrade. If upgrading from the `alpha` channel subscription to `stable`, follow the additional upgrade instructions below.
    
    ### Upgrading to version v0.3 or v1.0
    **IMPORTANT NOTICE:** v0.1 and v0.2 used a different naming scheme for secrets and configmaps. Before you update the IBM Cloud Operator, create secret and configmap resources with these names and copy the contents of your previous resources to the new resources. Then, the upgraded operator recognizes and continues to update the resources.
    
    Existing `Service` and `Binding` resources **do not** need modification for the upgrade.
    
    | Previous names (v0.1 and v0.2)         | **Current names (v0.3 and v1.0)**             | Description                                                                           |
    |:---------------------------------------|:--------------------------------------------|:--------------------------------------------------------------------------------------|
    | secret-ibm-cloud-operator              | **ibmcloud-operator-secret**                | Secret with the API key, scoped to the namespace.                                     |
    | config-ibm-cloud-operator              | **ibmcloud-operator-defaults**              | ConfigMap with the default values for new resources.                                  |
    | ibm-cloud-operator                     | **ibmcloud-operator-config**                | ConfigMap with the management namespace configuration.                                |
    | ${namespace}-secret-ibm-cloud-operator | **${namespace}-ibmcloud-operator-secret**   | Management namespace Secret with the API key for ${namespace}.                        |
    | ${namespace}-config-ibm-cloud-operator | **${namespace}-ibmcloud-operator-defaults** | Management namespace ConfigMap with default values for new resources in ${namespace}. |
    
    **Tip:** Forgot to update the secret and configmap names before upgrading? The operator will not take action on Service and Binding resources until the new secrets and configmaps have been created. Creating these after the upgrade will also work.
    
    
    ### OperatorHub stable channel
    Continuous updates and bug fixes are provided in the latest stable channel. Subscribing to the `stable` channel in OperatorHub means you automatically get the latest updates without breaking backward compatibility.
    
    ### Changelog
    
    For a list of recent changes, see the [releases page](https://github.com/IBM/cloud-operators/releases).
    
    
    ## Prerequisites
    
    1.  Have an [IBM Cloud account](https://cloud.ibm.com/registration).
    2.  Have a cluster that runs Kubernetes version 1.11 or later (OpenShift 3.11 or later).
    3.  Install the required command line tools.
        *   [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started) (`ibmcloud`)
        *   [Kubernetes CLI](https://kubernetes.io/docs/tasks/tools/install-kubectl/) (`kubectl`)
    4.  Log in to your IBM Cloud account from the CLI.
    
        ```bash
        ibmcloud login
        ```
    
    5.  Target the appropriate resource group (`-g`) and default region (`-r`) for provisioning services:
    
        ```bash
        ibmcloud target -g default -r us-south
        ```
    
    6.  If you also want to provision Cloud Foundry services, target the appropriate `org` and `space` (`--cf`).
    
        ```bash
        ibmcloud target --cf
        ```
    
    7.  Set the Kubernetes context of your CLI to your cluster so that you can run `kubectl` commands. For example, if your cluster runs OpenShift, use the `oc login` command.
    
    
    ## Setting up the operator
    
    You can use an installation script to set up the IBM Cloud Operator.
    By default, the installation script stores an API key in a Kubernetes secret in your cluster that can be accessed by the IBM Cloud Operator.
    Next, the script sets default values that are used to provision IBM Cloud services, like the resource group and region to provision the services in. Later, you can override any default value in the `Service` custom resource. Finally, the script deploys the operator in your cluster.
    
    To use your own API key, set the `IBMCLOUD_API_KEY` environment variable to the key before running the installation script:
    
        export IBMCLOUD_API_KEY="CUSTOM_API_KEY"
    
    If installed with Operator Hub, the operator will run in the `openshift-operators` namespace. Otherwise, it will run in the `ibmcloud-operator-system` namespace.
    
    Prefer to create the secrets and defaults yourself? See the [IBM Cloud Operator installation guide](https://github.com/IBM/cloud-operators/blob/master/docs/install.md).
    
    ### Using a service ID
    
    By default, the installation script creates an IBM Cloud API key that impersonates your user credentials, to use to set up the IBM Cloud Operator. However, you might want to create a service ID in IBM Cloud Identity and Access Managment (IAM). By using a service ID, you can control access for the IBM Cloud Operator without having the permissions tied to a particular user, such as if that user leaves the company. For more information, see the [IBM Cloud docs](https://cloud.ibm.com/docs/account?topic=account-serviceids).
    
    1.  Create a service ID in IBM Cloud IAM. If possible, do not use spaces in the names for your IAM credentials. When you use the operator binding feature, any spaces are replaced with underscores.
    
        ```bash
        ibmcloud iam service-id-create serviceid-ico -d service-ID-for-ibm-cloud-operator
        ```
    
    2.  Assign the service ID access to the required permissions to work with the IBM Cloud services that you want the operator to manage. The required permissions vary with each IBM Cloud service. You can also scope an access policy to different regions or resource groups. For example, the following command grants the service ID the **Administrator** platform role in the default resource group in the US South (Dallas) region. For more information, see the [IBM Cloud docs](https://cloud.ibm.com/docs/account?topic=account-userroles).
    
        ```bash
        ibmcloud iam service-policy-create serviceid-ico --roles Administrator --resource-group-name default --region us-south
        ```
    
    3.  Create an API key for the service ID.
    
        ```bash
        ibmcloud iam service-api-key-create apikey-ico serviceid-ico -d api-key-for-ibm-cloud-operator
        ```
    
    4.  Set the API key of the service ID as your CLI environment variable. Now, when you run the installation script, the script uses the service ID's API key. The following command is an example for macOS.
    
        ```bash
        export IBMCLOUD_API_KEY=<apikey-ico-value>
        ```
    
    5.  Confirm that the API key environment variable is set in your CLI.
    
        ```bash
        echo $IBMCLOUD_API_KEY
        ```
    
    6.  Follow the [prerequisite steps](https://github.com/IBM/cloud-operators/blob/master/README.md#prerequisites) to log in to the IBM Cloud account that owns the service ID.
    
    
    ### Installing the operator for OpenShift clusters
    
    Before you begin, complete the [prerequisite steps](https://github.com/IBM/cloud-operators/blob/master/README.md#prerequisites) to log in to IBM Cloud and your cluster, and optionally set up a [service ID API key](https://github.com/IBM/cloud-operators/blob/master/README.md#using-a-service-id).
    
    To configure the latest release for OpenShift before installing via the OperatorHub, run the following script:
    
    *   **Latest release**:
    
        ```bash
        curl -sL https://raw.githubusercontent.com/IBM/cloud-operators/master/hack/configure-operator.sh | bash
        ```
    
    *   **Specific release**: Replace `-v 0.0.0` with the specific version that you want to install.
    
        ```bash
        curl -sL https://raw.githubusercontent.com/IBM/cloud-operators/master/hack/configure-operator.sh | bash -s -- -v 0.0.0 store-creds
        ```
    
    
    ## Using the IBM Cloud Operator
    
    To use the IBM Cloud Operator, create a service instance and then bind the service to your cluster. For more information, see the [sample configuration files](https://github.com/IBM/cloud-operators/blob/master/config/samples), [user guide](https://github.com/IBM/cloud-operators/blob/master/docs/user-guide.md), and [reference documentation](https://github.com/IBM/cloud-operators/blob/master/README.md#reference).
    
    #### Step 1: Creating a service instance
    
    1.  To create an instance of an IBM public cloud service, first create a `Service` custom resource file. For more options, see the [Service properties](https://github.com/IBM/cloud-operators/blob/master/README.md#service-properties) reference doc.
        *   `<SERVICE_CLASS>` is the IBM Cloud service that you want to create. To list IBM Cloud services, run `ibmcloud catalog service-marketplace` and use the **Name** value from the output.
        *   `<PLAN>` is the plan for the IBM Cloud service that you want to create, such as `free` or `standard`. To list available plans, run `ibmcloud catalog service <SERVICE_CLASS> | grep plan`.
    
        ```yaml
        apiVersion: ibmcloud.ibm.com/v1
        kind: Service
        metadata:
            name: myservice
        spec:
            plan: <PLAN>
            serviceClass: <SERVICE_CLASS>
        ```
    
    2.  Create the service instance in your cluster.
    
        ```bash
        kubectl apply -f filepath/myservice.yaml
        ```
    
    3.  Check that your service status is **Online** in your cluster.
    
        ```bash
        kubectl get services.ibmcloud
        NAME           STATUS   AGE
        myservice      Online   12s
        ```
    
    4.  Verify that your service instance is created in IBM Cloud.
    
        ```bash
        ibmcloud resource service-instances | grep myservice
        ```
    
    #### Step 2: Binding the service instance
    
    1.  To bind your service to the cluster so that your apps can use the service, create a `Binding` custom resource, where the `serviceName` field is the name of the `Service` custom resource that you previously created. For more options, see [Binding properties](https://github.com/IBM/cloud-operators/blob/master/README.md#binding-properties).
    
        ```yaml
        apiVersion: ibmcloud.ibm.com/v1
        kind: Binding
        metadata:
            name: mybinding
        spec:
            serviceName: myservice
        ```
    
    2.  Create the binding in your cluster.
    
        ```bash
        kubectl apply -f filepath/mybinding.yaml
        ```
    
    3.  Check that your service status is **Online**.
    
        ```bash
        kubectl get bindings.ibmcloud
        NAME         STATUS   AGE
        mybinding    Online   25s
        ```
    
    4.  Check that a secret of the same name as your binding is created. The secret contains the service credentials that apps in your cluster can use to access the service.
    
        ```bash
        kubectl get secrets
        NAME         TYPE      DATA   AGE
        mybinding    Opaque    6      102s
        ```
  version: 1.0.0
  replaces: ibmcloud-operator.v0.1.11
  maturity: alpha
  maintainers:
  - email: johnstarich@johnstarich.com
    name: John Starich
  - email: mvaziri@us.ibm.com
    name: vazirim
  - email: artberger@users.noreply.github.com
    name: Art
  - email: cdlliuy@cn.ibm.com
    name: ying
  - email: xuliuxl@cn.ibm.com
    name: Lance Liu
  provider:
    name: IBM
  links:
  - name: Source on GitHub
    url: https://github.com/ibm/cloud-operators
  keywords: 
  - IBM
  - Cloud
  labels:
    name: ibmcloud-operator
  selector:
    matchLabels:
      name: ibmcloud-operator
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: false
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ibmcloud.ibm.com
          resources:
          - bindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ibmcloud.ibm.com
          resources:
          - bindings/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ibmcloud.ibm.com
          resources:
          - bindings/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ibmcloud.ibm.com
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ibmcloud.ibm.com
          resources:
          - services/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ibmcloud.ibm.com
          resources:
          - services/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        - nonResourceURLs:
          - /metrics
          verbs:
          - get
        serviceAccountName: default
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        serviceAccountName: default
      deployments: 
      - name: ibmcloud-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              creationTimestamp: null
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                command:
                - /manager
                env:
                - name: CONTROLLER_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MAX_CONCURRENT_RECONCILES
                  value: "1"
                image: cloudoperators/ibmcloud-operator:1.0.0
                name: manager
                resources:
                  limits:
                    cpu: 100m
                    memory: 175Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              terminationGracePeriodSeconds: 10
  customresourcedefinitions:
    owned:
      - description: Binding is the Schema for the bindings API
        displayName: Binding
        group: ibmcloud.ibm.com
        kind: Binding
        name: bindings.ibmcloud.ibm.com
        resources:
        - kind: Secret
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Binding
          name: ""
          version: v1beta1
        - kind: Service
          name: ""
          version: v1beta1
        specDescriptors:
        - description: ""
          displayName: alias
          path: alias
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: parameters
          path: parameters
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: role
          path: role
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: secretName
          path: secretName
          x-descriptors:
          - urn:alm:descriptor:text
          - urn:alm:descriptor:io.kubernetes:Secret
          - binding:env:object:secret
        - description: ""
          displayName: serviceName
          path: serviceName
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: serviceNamespace
          path: serviceNamespace
          x-descriptors:
          - urn:alm:descriptor:text
        statusDescriptors:
        - description: ""
          displayName: generation
          path: generation
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: instanceId
          path: instanceId
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: keyInstanceId
          path: keyInstanceId
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: message
          path: message
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: secretName
          path: secretName
          x-descriptors:
          - urn:alm:descriptor:text
          - urn:alm:descriptor:io.kubernetes:Secret
          - binding:env:object:secret
        - description: ""
          displayName: state
          path: state
          x-descriptors:
          - urn:alm:descriptor:text
        version: v1
      - description: Service is the Schema for the services API
        displayName: Service
        group: ibmcloud.ibm.com
        kind: Service
        name: services.ibmcloud.ibm.com
        resources:
        - kind: Secret
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Binding
          name: ""
          version: v1beta1
        - kind: Service
          name: ""
          version: v1beta1
        specDescriptors:
        - description: Resource Context defines the CloudFoundry context and resource group
          displayName: Resource Context
          path: context
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: externalName
          path: externalName
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: parameters
          path: parameters
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: plan
          path: plan
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: serviceClass
          path: serviceClass
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: serviceClassType
          path: serviceClassType
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: tags
          path: tags
          x-descriptors:
          - urn:alm:descriptor:text
        statusDescriptors:
        - description: Resource Context defines the CloudFoundry context and resource group
          displayName: Resource Context
          path: context
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: dashboardURL
          path: dashboardURL
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: externalName
          path: externalName
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: generation
          path: generation
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: instanceId
          path: instanceId
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: message
          path: message
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: parameters
          path: parameters
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: plan
          path: plan
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: serviceClass
          path: serviceClass
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: serviceClassType
          path: serviceClassType
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: state
          path: state
          x-descriptors:
          - urn:alm:descriptor:text
        - description: ""
          displayName: tags
          path: tags
          x-descriptors:
          - urn:alm:descriptor:text
        version: v1
