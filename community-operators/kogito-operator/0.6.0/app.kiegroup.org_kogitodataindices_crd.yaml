apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitodataindices.app.kiegroup.org
spec:
  group: app.kiegroup.org
  names:
    kind: KogitoDataIndex
    listKind: KogitoDataIndexList
    plural: kogitodataindices
    singular: kogitodataindex
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: KogitoDataIndex is the Schema for the kogitodataindices API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoDataIndexSpec defines the desired state of KogitoDataIndex
          properties:
            cpuLimit:
              description: CPULimit is the limit of CPU for the container
              type: string
            cpuRequest:
              description: CPURequest is the request of CPU for the container
              type: string
            env:
              additionalProperties:
                type: string
              description: Env is a collection of additional environment variables
                to add to the Data Index container
              type: object
            image:
              description: Image to use for this service
              type: string
            infinispan:
              description: Infinispan has the data used by the Kogito Data Index to
                connect to the Infinispan cluster
              properties:
                authRealm:
                  description: Name of the Infinispan authentication realm. This sets
                    the property infinispan.client.hotrod.auth_realm.
                  type: string
                credentials:
                  description: SecretCredentialsType is the data structure for specifyng
                    credentials within a Secret
                  properties:
                    passwordKey:
                      description: PasswordKey is the password for the Infinispan
                        user. This sets the propery infinispan.client.hotrod.auth_password.
                      type: string
                    secretName:
                      description: SecretName is the name of the secret where the
                        credentials are set
                      type: string
                    usernameKey:
                      description: UsernameKey is the user name for the user who will
                        be authenticated in the cluster. This sets the property infinispan.client.hotrod.auth_username.
                      type: string
                  type: object
                saslMechanism:
                  description: SaslMechanism defined for the authentication. This
                    sets the property infinispan.client.hotrod.sasl_mechanism.
                  enum:
                  - PLAIN
                  - DIGEST-MD5
                  type: string
                serviceURI:
                  description: ServiceURI is the service URI to connect to the Infinispan
                    cluster, for example, myinfinispan-cluster:11222
                  type: string
                useAuth:
                  description: UseAuth is set to true if the credentials are set.
                    This also sets the property infinispan.client.hotrod.use_auth.
                  type: boolean
                useKogitoInfra:
                  description: UseKogitoInfra flags if this Data Index instance will
                    use a provided infrastructure by KogitoInfra CR. Defaults to true.
                    Set this to false and fill all other properties to provide your
                    own infrastructure
                  type: boolean
              type: object
            kafka:
              description: Kafka has the data used by the Kogito Data Index to connect
                to a Kafka cluster
              properties:
                externalURI:
                  description: ExternalURI is the service URI to connect to the Kafka
                    cluster, for example, my-cluster-kafka-bootstrap:9092
                  type: string
                instance:
                  description: Instance is the Kafka instance to be used, for example,
                    kogito-kafka
                  type: string
              type: object
            memoryLimit:
              description: MemoryLimit is the limit of Memory for the container
              type: string
            memoryRequest:
              description: MemoryRequest is the request of Memory for the container
              type: string
            replicas:
              description: Replicas is the number of pod replicas that the Data Index
                Service will create
              format: int32
              maximum: 100
              minimum: 0
              type: integer
          type: object
        status:
          description: KogitoDataIndexStatus defines the observed state of KogitoDataIndex
          properties:
            conditions:
              description: OK when all resources are created successfully
              items:
                description: DataIndexCondition indicates the possible conditions
                  for the Data Index Service
                properties:
                  condition:
                    description: DataIndexConditionType indicates the possible status
                      that the resource can have
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                required:
                - condition
                type: object
              type: array
            dependenciesStatus:
              description: All dependencies OK means that everything was found within
                the namespace
              items:
                description: DataIndexDependenciesStatus indicates all possible statuses
                  that the dependencies can have
                type: string
              type: array
            deploymentStatus:
              description: Status of the Data Index Service Deployment created and
                managed by it
              properties:
                collisionCount:
                  description: collisionCount is the count of hash collisions for
                    the StatefulSet. The StatefulSet controller uses this field as
                    a collision avoidance mechanism when it needs to create the name
                    for the newest ControllerRevision.
                  format: int32
                  type: integer
                conditions:
                  description: Represents the latest available observations of a statefulset's
                    current state.
                  items:
                    description: StatefulSetCondition describes the state of a statefulset
                      at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of statefulset condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                currentReplicas:
                  description: currentReplicas is the number of Pods created by the
                    StatefulSet controller from the StatefulSet version indicated
                    by currentRevision.
                  format: int32
                  type: integer
                currentRevision:
                  description: currentRevision, if not empty, indicates the version
                    of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
                  type: string
                observedGeneration:
                  description: observedGeneration is the most recent generation observed
                    for this StatefulSet. It corresponds to the StatefulSet's generation,
                    which is updated on mutation by the API Server.
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas is the number of Pods created by the
                    StatefulSet controller that have a Ready Condition.
                  format: int32
                  type: integer
                replicas:
                  description: replicas is the number of Pods created by the StatefulSet
                    controller.
                  format: int32
                  type: integer
                updateRevision:
                  description: updateRevision, if not empty, indicates the version
                    of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
                  type: string
                updatedReplicas:
                  description: updatedReplicas is the number of Pods created by the
                    StatefulSet controller from the StatefulSet version indicated
                    by updateRevision.
                  format: int32
                  type: integer
              required:
              - replicas
              type: object
            route:
              description: Route is where the service is exposed
              type: string
            serviceStatus:
              description: Status of the Data Index Service created and managed by
                it
              properties:
                loadBalancer:
                  description: LoadBalancer contains the current status of the load-balancer,
                    if one is present.
                  properties:
                    ingress:
                      description: Ingress is a list containing ingress points for
                        the load-balancer. Traffic intended for the service should
                        be sent to these ingress points.
                      items:
                        description: 'LoadBalancerIngress represents the status of
                          a load-balancer ingress point: traffic intended for the
                          service should be sent to an ingress point.'
                        properties:
                          hostname:
                            description: Hostname is set for load-balancer ingress
                              points that are DNS based (typically AWS load-balancers)
                            type: string
                          ip:
                            description: IP is set for load-balancer ingress points
                              that are IP based (typically GCE or OpenStack load-balancers)
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
