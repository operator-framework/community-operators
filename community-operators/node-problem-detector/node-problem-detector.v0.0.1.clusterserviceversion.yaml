#! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
#! parse-kind: ClusterServiceVersion
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |
      [
        {
          "apiVersion": "node-problem-detector.operator.k8s.io/v1alpha1",
          "kind": "NodeProblemDetector",
          "metadata": {
            "name": "node-problem-detector",
            "namespace": "openshift-node-problem-detector"
          }
        }
      ]
    categories: OpenShift Optional
    certifiedLevel: Primed
    containerImage: registry.svc.ci.openshift.org/openshift/origin-v4.0:node-problem-detector-operator
    createdAt: 2019/01/31
    description: An operator to run the OpenShift Node Problem Detector
    healthIndex: B
    repository: https://github.com/openshift/node-problem-detector-operator
    support: Red Hat
  name: node-problem-detector.v0.0.1
  namespace: openshift-node-problem-detector
spec:
  description: |
      # Node Problem Detector

      node-problem-detector aims to make various node problems visible to the upstream
      layers in cluster management stack.
      It is a daemon which runs on each node, detects node problems and reports them to apiserver.
      node-problem-detector runs as a DaemonSet

      ## Background
      There are many problems that could possibly affect the pods running on the node such as:
      * Infrastructure daemon issues: ntp service down;
      * Hardware issues: Bad cpu, memory or disk;
      * Kernel issues: Kernel deadlock, corrupted file system;
      * Container runtime issues: Unresponsive runtime daemon;
      * ...

      Currently these problems are invisible to the upstream layers in cluster management
      stack, so Kubernetes will continue scheduling pods to the bad nodes.

      node-problem-detector watches the node for problems and publishes them to the API server.

      ## Problem API
      node-problem-detector uses `Event` and `NodeCondition` to report problems to
      apiserver.
      * `NodeCondition`: Permanent problem that makes the node unavailable for pods should
      be reported as `NodeCondition`. A reboot of the node will remove the `NodeCondition`.
      * `Event`: Temporary problem that has limited impact on pod but is informative
      should be reported as an `Event`.

      ## Prerequisites

      An Operator Group is required to install this operator. For example:
      ```
      $ oc create ns openshift-node-problem-detector
      $ oc create -f - <<EOF
      apiVersion: operators.coreos.com/v1alpha2
      kind: OperatorGroup
      metadata:
        name: npd-operators
        namespace: openshift-node-problem-detector
      spec:
        targetNamespaces:
        - openshift-node-problem-detector
      EOF
      ```
  customresourcedefinitions:
    owned:
    - description: Represents an instance of a Node Problem Detector application
      displayName: Node Problem Detector Operator
      kind: NodeProblemDetector
      name: nodeproblemdetectors.node-problem-detector.operator.k8s.io
      version: v1alpha1
  displayName: Node Problem Detector
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: false
  install:
    spec:
      clusterPermissions:
      - serviceAccountName: node-problem-detector-operator
        rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          # the operator needs to be able to bind the cluster role
          # system:node-problem-detector to the node-problem-detector service account
          - clusterrolebindings
          verbs:
          - "*"
        - apiGroups:
          - security.openshift.io
          resources:
          # the operator needs to be able to add the node-problem-detector service account
          # to the list of accounts that can use the privileged SCC
          - securitycontextconstraints
          verbs:
          - "*"
        # The following sections for nodes and nodes/status are
        # copied from the system:node-problem-detector clusterrolebinding
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - update
      permissions:
      - serviceAccountName: node-problem-detector-operator
        rules:
        - apiGroups:
          - node-problem-detector.operator.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - ""
          resources:
          - pods
          - events
          - configmaps
          - secrets
          - services
          - endpoints
          - serviceaccounts
          verbs:
          - "*"
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - "*"
      deployments:
      - name: node-problem-detector-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: node-problem-detector-operator
          template:
            metadata:
              labels:
                name: node-problem-detector-operator
            spec:
              containers:
                - name: node-problem-detector-operator
                  image: registry.svc.ci.openshift.org/openshift/origin-v4.0:node-problem-detector-operator
                  ports:
                  - containerPort: 60000
                    name: metrics
                  command:
                  - node-problem-detector-operator
                  imagePullPolicy: Always
                  env:
                    - name: WATCH_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.annotations['olm.targetNamespaces']
                    - name: OPERATOR_NAME
                      value: node-problem-detector-operator
              serviceAccountName: node-problem-detector-operator
    strategy: deployment
  labels:
    olm-owner-enterprise-app: node-problem-detector
    olm-status-descriptors: node-problem-detector.v0.0.1
  maintainers:
  - email: support@redhat.com
    name: Red Hat
  provider:
    name: Red Hat
  version: 0.0.1
