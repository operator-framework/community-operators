apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: open-liberty-0.0.1
  namespace: placeholder
  annotations:
    capabilities: Seamless Upgrades
    categories: "Application Runtime"
    certified: "false"
    containerImage: openliberty/operator:0.0.1
    createdAt: 2019-05-16T12:00:00.000-0500
    description: Installs a Jakarta EE / MicroProfile / Spring application running on Open Liberty.        
    repository: https://github.com/OpenLiberty/open-liberty-operator
    support: IBM
    alm-examples: |-
      [
         {
            "apiVersion":"openliberty.io/v1alpha1",
            "kind":"OpenLiberty",
            "metadata":{
               "name":"demo3-openliberty"
            },
            "spec":{
               "image":{
                  "extraEnvs":[],
                  "extraVolumeMounts":[],
                  "lifecycle":{},
                  "livenessProbe":{},
                  "pullPolicy":"IfNotPresent",
                  "pullSecret":"",
                  "readinessProbe":{},
                  "repository":"open-liberty",
                  "security":{},
                  "serverOverridesConfigMapName":"",
                  "tag":"javaee8"
               },
               "resourceNameOverride":"",
               "deployment":{
                  "annotations":{},
                  "labels":{}
               },
               "pod":{
                  "annotations":{},
                  "extraContainers":[],
                  "extraInitContainers":[],
                  "extraVolumes":[],
                  "labels":{},
                  "security":{}
               },
               "service":{
                  "annotations":{},
                  "enabled":true,
                  "extraPorts":[],
                  "extraSelectors":{},
                  "labels":{},
                  "name":"",
                  "port":9443,
                  "targetPort":9443,
                  "type":"NodePort"
               },
               "jmsService":{
                  "enabled":false,
                  "port":7286,
                  "targetPort":7286,
                  "type":"NodePort"
               },
               "iiopService":{
                  "enabled":false,
                  "nonSecurePort":2809,
                  "nonSecureTargetPort":2809,
                  "securePort":9402,
                  "secureTargetPort":9402,
                  "type":"NodePort"
               },
               "ssl":{
                  "createClusterSSLConfiguration":false,
                  "enabled":true,
                  "useClusterSSLConfiguration":false
               },
               "ingress":{
                  "annotations":{},
                  "enabled":false,
                  "host":"",
                  "labels":{},
                  "path":"/",
                  "rewriteTarget":"/",
                  "secretName":""
               },
               "persistence":{
                  "fsGroupGid":null,
                  "name":"liberty-pvc",
                  "selector":{
                     "label":"",
                     "value":""
                  },
                  "size":"1Gi",
                  "storageClassName":"",
                  "useDynamicProvisioning":true
               },
               "logs":{
                  "consoleFormat":"json",
                  "consoleLogLevel":"info",
                  "consoleSource":"message,trace,accessLog,ffdc",
                  "persistLogs":false,
                  "persistTransactionLogs":false
               },
               "microprofile":{
                  "health":{
                     "enabled":false
                  }
               },
               "monitoring":{
                  "enabled":false
               },
               "replicaCount":1,
               "autoscaling":{
                  "enabled":false,
                  "maxReplicas":10,
                  "minReplicas":1,
                  "targetCPUUtilizationPercentage":50
               },
               "resources":{
                  "constraints":{
                     "enabled":false
                  },
                  "limits":{
                     "cpu":"500m",
                     "memory":"512Mi"
                  },
                  "requests":{
                     "cpu":"500m",
                     "memory":"512Mi"
                  }
               },
               "arch":{
                  "amd64":"2 - No preference",
                  "ppc64le":"2 - No preference",
                  "s390x":"2 - No preference"
               },
               "env":{
                "jvmArgs":""
               },
               "rbac":{
                  "install":true
               }
            }
         }
      ]
spec:
  minKubeVersion: 1.11.0
  displayName: Open Liberty Operator
  maturity: alpha
  description: |
    Installs a Jakarta EE / MicroProfile / Spring application running on Open Liberty.  
    This is an alpha version and is not intended to be used in production. 
 
    ## Building an Application Image
      
      The first step is to build an application image that contains your application and Open Liberty configuration.
      
      See our [Open Liberty official GitHub repository](https://github.com/OpenLiberty/ci.docker#building-an-application-image) for details on how to build an application image with Open Liberty as the base layer.

    ## Configuration

      For a complete list of configuration items please see [this table](https://github.com/IBM/charts/blob/master/stable/ibm-open-liberty/README.md#configuration).

      When running on an OpenShift environment, define your Security Context Constraints (SCC) following the instructions under the install security section [here](https://github.com/OpenLiberty/open-liberty-operator).
  icon:
  - base64data: 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
    mediatype: image/png
  version: 0.0.1
  maintainers:
  - name: Arthur De Magalhaes
    email: arthurdm@ca.ibm.com
  - name: Tim Kaczynski
    email: kaczynsk@us.ibm.com
  - name: Ed Mezarina
    email: mezarina@us.ibm.com
  - name: Tim Spewak
    email: spewak@us.ibm.com
  - name: Mike Ginnick
    email: ginnick@us.ibm.com
  provider:
    name: IBM
  links:
  - name: Open Liberty Operator Guide
    url: https://github.com/OpenLiberty/open-liberty-operator/blob/master/README.md
  keywords:
  - 'Open Liberty'
  - 'MicroProfile'
  - 'Jakarta EE'
  - 'Java'
  - 'Application Server'
  - 'Runtime'
  - 'Spring'
  customresourcedefinitions:
    owned:
    - description: Open Liberty Application
      displayName: Open Liberty
      group: openliberty.io
      kind: OpenLiberty
      name: openliberties.openliberty.io
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1beta1
      - kind: HorizontalPodAutoscaler
        name: ""
        version: v1
      - kind: Namespaces
        name: ""
        version: v1
      - kind: OpenLiberty
        name: ""
        version: v1alpha1
      - kind: Pod
        name: ""
        version: v1
      - kind: Role
        name: ""
        version: v1
      - kind: RoleBinding
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceAccount
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      version: v1alpha1
      specDescriptors:
        - description: Docker registry to pull Liberty image from.
          displayName: Liberty image repository
          path: image.repository
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other.
          displayName: Image tag
          path: image.tag
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists.
          displayName: Image pull policy
          path: image.pullPolicy
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: If using a registry that requires authentication, the name of the secret containing credentials.
          displayName: Image pull secret
          path: image.pullSecret
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Additional environment variables that will be set.
          displayName: Image Additional Environment Variables
          path: image.extraEnvs
        - description: Name of the ConfigMap that contains server configuration overrides (within key 'server-overrides.xml') to configure your Liberty server at deployment.
          displayName: ConfigMap with server configuration overrides
          path: image.serverOverridesConfigMapName
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Additional Volume Mounts for server pods.
          displayName: Extra Volume Mounts
          path: image.extraVolumeMounts
        - description: This name will be appended to the release name to form the name of resources created by the chart.
          displayName: Resource Name Override
          path: resourceNameOverride
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Additional Init Containers which are run before the containers are started.
          displayName: Extra Init Containers
          path: pod.extraInitContainers
        - description: Additional containers to be added to the server pods.
          displayName: Extra containers
          path: pod.extraContainers
        - description: Additional Volumes for server pods.
          displayName: Extra Volumes
          path: pod.extraVolumes
        # Service (HTTP).
        - description: An API object that describes how to access applications, such as a set of Pods, and can describe ports and load-balancers.
          displayName: HTTP Service Type
          path: service.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: The name of the service.
          displayName: HTTP Service Name
          path: service.name
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: The HTTP port that the container will expose.
          displayName: HTTP Service Port
          path: service.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: A service can map an incoming HTTP port to the targetPort.
          displayName: HTTP Service Target Port
          path: service.targetPort
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Specifies whether HTTP protocol is enabled.
          displayName: Enable HTTP Service
          path: service.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: List of additional ports that are exposed by this service.
          displayName: Additional HTTP Service Ports
          path: service.extraPorts
        # JmsService.
        - description: An API object that describes how to access applications, such as a set of Pods, and can describe ports and load-balancers.
          displayName: JMS Service Type
          path: jmsService.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: The JMS port that the container will expose. This port uses SSL encryption if you enable SSL for this chart.
          displayName: JMS Port
          path: jmsService.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: A service can map an incoming JMS port to the targetPort. This port uses SSL encryption if you enable SSL for this chart.
          displayName: JMS Target port
          path: jmsService.targetPort
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Specifies whether JMS port is enabled.
          displayName: Enable JMS Service
          path: jmsService.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        # IIOPService.
        - description: An API object that describes how to access applications, such as a set of Pods, and can describe ports and load-balancers.
          displayName: IIOP Service Type
          path: iiopService.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: The IIOP port that the container will expose.
          displayName: IIOP Port
          path: iiopService.nonSecurePort
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: A service can map an incoming IIOP port to the targetPort.
          displayName: IIOP Target port
          path: iiopService.nonSecureTargetPort
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: The secure IIOP port that the container will expose.
          displayName: IIOP Secure Port
          path: iiopService.securePort
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: A service can map an incoming secure IIOP port to the targetPort.
          displayName: IIOP Secure Target port
          path: iiopService.secureTargetPort
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Specifies whether IIOP port is enabled.
          displayName: Enable IIOP Service
          path: iiopService.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        # SSL.
        - description: Specifies whether SSL is enabled. Set to true if SSL will be enabled via generated SSL configuration or if Liberty is configured to use SSL in the Docker image.
          displayName: Enable SSL
          path: ssl.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Set to true if you want to use the generated SSL ConfigMap and secrets. This setting requires you to check 'Create cluster SSL configuration' the very first use. The benefit of reusing the generated SSL configuration between multiple Liberty servers is so that they can easily communicate with each other over SSL. Set to false if the Docker image already has SSL configured.
          displayName: Use cluster SSL configuration
          path: ssl.useClusterSSLConfiguration
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Specifies whether to generate Liberty SSL ConfigMap and secrets to be used in the cluster. Only generate the SSL configuration one time. If you generate the configuration a second time, errors might occur.
          displayName: Create cluster SSL configuration
          path: ssl.createClusterSSLConfiguration
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        # Ingress.
        - description: Specifies whether to use Ingress.
          displayName: Enable Ingress
          path: ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: In some scenarios the exposed URL in the backend service differs from the specified path in the Ingress rule. Without a rewrite any request will return 404. To circumvent this, you can set rewrite target to the path expected by the service.
          displayName: Ingress Rewrite target
          path: ingress.rewriteTarget
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Path must match the content of an incoming request before the loadbalancer directs traffic to the backend.
          displayName: Ingress Path
          path: ingress.path
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Hostname used to access Liberty via Ingress (e.g. liberty.<icp proxy node address>.nip.io). See chart readme documentation for more details.
          displayName: Ingress Host
          path: ingress.host
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Name of the secret containing Ingress TLS certificate and key. See chart readme documentation for more details.
          displayName: Ingress Secret name
          path: ingress.secretName
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        # Persistence.
        - description: A prefix for the name of the persistence volume claim (PVC). A PVC will not be created unless either 'Persist logs' or 'Persist transaction logs' is checked.
          displayName: PVC Prefix Name
          path: persistence.name
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Size of the volume to hold all the persisted data.        
          displayName: PV Size
          path: persistence.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: The file system group ID to use for volumes that support ownership management.
          displayName: PV File system group ID
          path: persistence.fsGroupGid
        - description: Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects.
          displayName: PV Use dynamic provisioning
          path: persistence.useDynamicProvisioning
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Specifies a StorageClass pre-created by the sysadmin. When set to "", then the PVC is bound to the default storageClass setup by the Kube Administrator.
          displayName: PV Storage class name
          path: persistence.storageClassName
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: When matching a PV, the label is used to find a match on the key.
          displayName: PV Selector label
          path: persistence.selector.label
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: When matching a PV, the value is used to find a match on the value.
          displayName: PV Selector value
          path: persistence.selector.value
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        # Logs.
        - description: Select this checkbox to store server logs on a persistent volume so that the data is preserved if the pod is stopped.
          displayName: Persist Liberty logs
          path: logs.persistLogs
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Select this checkbox to store transaction logs data on a persistent volume so that the transaction logs can be recovered if the pod is stopped.
          displayName: Persist transaction logs
          path: logs.persistTransactionLogs
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Specifies container log output format.
          displayName: Liberty Console logging format
          path: logs.consoleFormat
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Controls the granularity of messages that go to the container log. 
          displayName: Liberty Console logging level
          path: logs.consoleLogLevel
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Specify sources that are written to the container log. Use a comma separated list for multiple sources.
          displayName: Liberty Console logging sources
          path: logs.consoleSource
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        # Microprofiling.
        - description: Specifies whether to use the MicroProfile health endpoint (`/health`) as a readiness probe of the container. Requires HTTP service to be enabled.    
          displayName: Enable Microprofile health
          path: microprofile.health.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        # Monitoring.
        - description: Specifies whether to use Liberty features `monitor-1.0` and `mpMetrics-1.1` to monitor the server runtime environment and application metrics. Requires HTTP service to be enabled.
          displayName: Enable Liberty monitoring
          path: monitoring.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        # ReplicaCount.
        - description: The number of desired replica pods that run simultaneously.
          displayName: Number of pod replicas
          path: replicaCount
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        # AutoScaling.
        - description: Specifies whether a horizontal pod autoscaler (HPA) is deployed. Note that enabling this field disables the Number of replicas field.
          displayName: Enable automatic scaling
          path: autoscaling.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Target average CPU utilization (represented as a percentage of requested CPU) over all the pods.
          displayName: Autoscale Target CPU utilization percentage
          path: autoscaling.targetCPUUtilizationPercentage
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Lower limit for the number of pods that can be set by the autoscaler.
          displayName: Autoscale Minimum replicas
          path: autoscaling.minReplicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Upper limit for the number of pods that can be set by the autoscaler.  Cannot be lower than the minimum number of replicas.
          displayName: Autoscale Maximum replicas
          path: autoscaling.maxReplicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        # Resources.
        - description: Specifies whether the resource constraints in this Helm chart are enabled.
          displayName: Enable Helm resource constraints
          path: resources.constraints.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core).
          displayName: CPU limit
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        # Arch
        - description: Scheduling priority for using the Intel 64-bit architecture for worker nodes.
          displayName: Intel 64-bit architecture preference
          path: arch.amd64 
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Scheduling priority for using the PowerPC 64-bit LE architecture for worker nodes.
          displayName: PowerPC 64-bit LE architecture preference
          path: arch.ppc64le
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        - description: Scheduling priority for using s390x zLinux architecture for worker nodes.
          displayName: s390x zLinux architecture preference
          path: arch.s390x
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        # Env.
        - description: Liberty runtime JVM arguments.
          displayName: Liberty JVM_ARGS
          path: env.jvmArgs
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        # SessionCache
        - description: Enable Hazelcast Session Caching by enabling and configuring Liberty feature sessionCaching-1.0 and enabling Hazelcast client provider libraries.
          displayName: Enable Hazelcast Session Caching
          path: sessioncache.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Embedded Hazelcast Topology (true). Client/Server Hazelcast Topology (false).
          displayName: Embedded Hazelcast Topology
          path: sessioncache.hazelcast.embedded
        - description: Hazelcast Docker image repository for client provider libraries.
          displayName: Hazelcast Docker image repository
          path: sessioncache.hazelcast.image.repository
        - description: Hazelcast Docker image tag for client provider libraries.
          displayName: Hazelcast Docker image tag
          path: sessioncache.hazelcast.image.tag
        - description: Defaults to 'Always' when the latest tag is specified. Otherwise the default is 'IfNotPresent'.
          displayName: Hazelcast Docker image pull policy
          path: sessioncache.hazelcast.image.pullPolicy
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:label
        # RBAC
        - description: Install RBAC roles and bindings.
          displayName: Install
          path: rbac.install
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      statusDescriptors:
        - description: Current conditions.
          displayName: Conditions
          path: conditions
          x-descriptors:
            - 'urn:alm:descriptor:io.kubernetes.conditions'
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: true
  install:
    strategy: deployment
    spec:
      permissions:
        - serviceAccountName: open-liberty-operator
          rules:
            - apiGroups:
              - ""
              resources:
              - pods
              - services
              - endpoints
              - persistentvolumeclaims
              - events
              - configmaps
              - secrets
              - serviceaccounts
              verbs:
              - '*'
            - apiGroups:
              - "extensions"
              resources:
              - ingresses
              verbs:
              - '*'
            - apiGroups:
              - "autoscaling"
              resources:
              - horizontalpodautoscalers
              verbs:
              - '*'
            - apiGroups:
              - "batch"
              resources:
              - jobs
              verbs:
              - '*' 
            - apiGroups:
              - ""
              resources:
              - namespaces
              verbs:
              - get
            - apiGroups:
              - apps
              resources:
              - deployments
              - daemonsets
              - replicasets
              - statefulsets
              verbs:
              - '*'
            - apiGroups:
              - monitoring.coreos.com
              resources:
              - servicemonitors
              verbs:
              - get
              - create
            - apiGroups:
              - apps
              resourceNames:
              - open-liberty-operator
              resources:
              - deployments/finalizers
              verbs:
              - update
            - apiGroups:
              - openliberty.io
              resources:
              - '*'
              verbs:
              - '*'
            - apiGroups:
              - rbac.authorization.k8s.io
              resources:
              - roles
              - rolebindings
              verbs:
              - '*'
      deployments:
        - name: open-liberty-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: open-liberty-operator
            template:
              metadata:
                labels:
                  name: open-liberty-operator
              spec:
                serviceAccountName: open-liberty-operator
                containers:
                - name: open-liberty-operator
                  image: openliberty/operator:0.0.1
                  imagePullPolicy: Always
                  env:
                  - name: WATCH_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: OPERATOR_NAME
                    value: "open-liberty-operator"
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                          - key: beta.kubernetes.io/arch
                            operator: In
                            values:
                            - amd64
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - weight: 3
                      preference:
                        matchExpressions:
                        - key: beta.kubernetes.io/arch
                          operator: In
                          values:
                          - amd64
