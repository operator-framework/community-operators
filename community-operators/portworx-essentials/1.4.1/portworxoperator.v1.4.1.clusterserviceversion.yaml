apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: portworx-essentials.v1.4.1
  namespace: placeholder
  annotations:
    capabilities: Auto Pilot
    categories: "Storage"
    description: Free forever cloud native storage solution
    containerImage: portworx/px-operator:1.4.1
    repository: https://github.com/libopenstorage/operator
    createdAt: 2020-11-06T08:00:00Z
    support: Portworx, Inc
    certified: "false"
    alm-examples: |-
      [
        {
          "apiVersion": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "name": "portworx",
            "namespace": "test-operator",
            "annotations": {
              "portworx.io/is-openshift": "true"
            }
          }
        },
        {
          "apiVersion": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ]
spec:
  displayName: Portworx Essentials
  version: 1.4.1
  minKubeVersion: "1.12.0"
  maturity: stable
  replaces: portworx-essentials.v1.4.0
  maintainers:
  - name: Portworx
    email: support@portworx.com
  provider:
    name: Portworx
  keywords: ["portworx", "persistent storage", "storage", "cloud native", "open source"]
  labels:
    operated-by: portworx-essentials
  selector:
    matchLabels:
      operated-by: portworx-essentials
  links:
  - name: Product Features
    url: https://portworx.com/products/features
  - name: Documentation
    url: https://docs.portworx.com
  - name: Support
    url: https://docs.portworx.com/support
  - name: Source Code
    url: https://github.com/libopenstorage/operator
  icon:
  - base64data: 
    mediatype: image/png
  description: |

    [Portworx Essentials](https://docs.portworx.com/concepts/portworx-essentials/)
    is a free Portworx license with limited functionality that allows you to
    run small production or proof-of-concept workloads. Essentials limits capacity
    and advanced features, but otherwise functions the same way as the
    fully-featured PX-Enterprise version of Portworx such as

    *  Run containerized stateful applications that are highly-available (HA) across multiple nodes,
      cloud instances, regions, data centers or even clouds
    *  Migrate workflows between multiple clusters running across same or hybrid clouds
    *  Run hyperconverged workloads where the data resides on the same host as the applications
    *  Have programmatic control on your storage resources

    ### Full Features

    * Free forever
    * 5 nodes
    * 500 volumes
    * Cloud Drive provisioning
    * Failures across nodes/racks/AZ

    ### Limited features

    * Application consistent Snapshots (5 per volume)
    * Cloud Snapshots (1 per volume per day)
    * BYOK Encryption (cluster key only)
    * Single user cluster management UI (single user, single cluster)

    To learn more about the platform features, please visit our
    [product features page](https://portworx.com/products/features)

    The Portworx Essentials license requires that your clusters be connected
    to the internet and send usage data to PX-Central. Portworx Essentials
    clusters connect with PX-Central once per hour to renew license leases.
    Lease periods last for 24 hours, ensuring that any temporary interruptions
    to your connectivity do not impact your cluster.

    ### How to install StorageCluster

    To customize your cluster's configuration (specification), use the
    [Spec Generator](https://central.portworx.com/) from PX-Central.

    ### Prerequisite

    * Ensure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.

    * Create the following secret with your [Essential Entitlement ID](https://central.portworx.com/profile)
    ```
    kubectl -n kube-system create secret generic px-essential \
      --from-literal=px-essen-user-id=YOUR_ESSENTIAL_ENTITLEMENT_ID \
      --from-literal=px-osb-endpoint='https://pxessentials.portworx.com/osb/billing/v1/register'
    ```

    ### Tutorials

    * [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)

    * [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)

    * [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)

    * [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)

    * [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)

    * [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)

    * [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)

    * [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)

    * [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)

    ### Uninstall

    Deleting the StorageCluster object for Portworx cluster does not stop Portworx
    service running on the nodes, to avoid application downtime.

    To uninstall Portworx completely without wiping the data, you should add the
    following delete strategy to the StorageCluster spec:
    ```
    spec:
      deleteStrategy:
        type: Uninstall
    ```
    **Caution:** To uninstall Portworx and **wipe all the data**, you should use the following
    delete strategy:
    ```
    spec:
      deleteStrategy:
        type: UninstallAndWipe
    ```

    ### About Portworx

    Portworx is the solution for running stateful containers in production,
    designed with DevOps in mind. With Portworx, users can manage any database
    or stateful service on any infrastructure using any container scheduler,
    including Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves
    the five most common problems DevOps teams encounter when running stateful
    services in production: persistence, high availability, data automation,
    security, and support for multiple data stores and infrastructure.

  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: true
  - type: AllNamespaces
    supported: true
  install:
    spec:
      clusterPermissions:
      - serviceAccountName: portworx-operator
        rules:
        - apiGroups:
          - "*"
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          resourceNames:
          - anyuid
          - privileged
          verbs:
          - use
      deployments:
      - name: portworx-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: portworx-operator
          strategy:
            rollingUpdate:
              maxSurge: 1
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              labels:
                name: portworx-operator
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - key: name
                        operator: In
                        values:
                        - portworx-operator
                    topologyKey: kubernetes.io/hostname
              containers:
              - name: portworx-operator
                image: portworx/px-operator:1.4.1
                imagePullPolicy: Always
                command:
                - /operator
                - --verbose
                - --driver=portworx
                - --leader-elect=true
                env:
                - name: OPERATOR_NAME
                  value: portworx-operator
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: PORTWORX_ESSENTIALS
                  value: "true"
                - name: MARKETPLACE_NAME
                  value: OperatorHub
              serviceAccountName: portworx-operator
    strategy: deployment
  customresourcedefinitions:
    owned:
    - kind: StorageCluster
      name: storageclusters.core.libopenstorage.org
      version: v1
      displayName: Storage Cluster
      description: Storage Cluster installs Portworx in the cluster.
        It has all the necessary configurations to setup and update a Portworx cluster.
      specDescriptors:
      - path: image
        displayName: Image
        description: The docker image name and version of Portworx Enterprise.
        x-descriptors:
        - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: imagePullSecret
        displayName: Private Registry Image Pull Secret
        description: It is a reference to a secret in the same namespace as the
          StorageCluster. This secret is used to pull images from a private
          registry.
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes:Secret'
        - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:image'
      - path: customImageRegistry
        displayName: Custom Image Registry
        description: >-
          CustomImageRegistry is a custom container registry server
          (may include repository) that will be used instead of index.docker.io to
          download Docker images. (Example: myregistry.net:5443 or myregistry.com/myrepository)
        x-descriptors:
        - 'urn:alm:descriptor:com.tectonic.ui:text'
        - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:image'
      - path: autopilot.enable
        displayName: Enable Autopilot
        description: Autopilot automatically expands PVCs and Portworx storage based on
          the current usage.
        x-descriptors:
        - 'urn:alm:descriptor:com.tectonic.ui:advanced'
        - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - description: The secrets provider which will contain secrets that are needed by
          Portworx for features like volume encryption, cloudsnaps, etc.
        displayName: Secrets Provider
        path: secretsProvider
        x-descriptors:
        - 'urn:alm:descriptor:com.tectonic.ui:advanced'
        - 'urn:alm:descriptor:com.tectonic.ui:select:k8s'
        - 'urn:alm:descriptor:com.tectonic.ui:select:vault'
        - 'urn:alm:descriptor:com.tectonic.ui:select:aws-kms'
        - 'urn:alm:descriptor:com.tectonic.ui:select:azure-kv'
        - 'urn:alm:descriptor:com.tectonic.ui:select:ibm-kp'
      - description: This controls the delete strategy of the Portworx cluster.
        displayName: DeleteStrategy
        path: deleteStrategy.type
        x-descriptors:
        - 'urn:alm:descriptor:com.tectonic.ui:advanced'
        - 'urn:alm:descriptor:com.tectonic.ui:select:Uninstall'
        - 'urn:alm:descriptor:com.tectonic.ui:select:UninstallAndWipe'
      - description: It is the pull policy for the image. Accepts one of Always, Never,
          IfNotPresent. Defaults to Always.
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: Expose Portworx metrics to Prometheus.
        displayName: Enable Metrics
        path: monitoring.enableMetrics
      - description: The network interface to be used by Portworx for data traffic.
        displayName: Data Interface
        path: network.dataInterface
      - description: The network interface to be used by Portworx for management
          traffic.
        displayName: Management Interface
        path: network.mgmtInterface
      - description: It is the starting port in the range of ports used by Portworx.
        displayName: Start Port
        path: startPort
      - description: Revision history limit is the number of old histories to retain.
        displayName: Revision History Limit
        path: revisionHistoryLimit
      - description: Version is a read-only field. It contains the current version of
          Portworx.
        displayName: Version
        path: version
      statusDescriptors:
      - path: conditions
        displayName: Cluster Conditions
        description: Conditions describe the current state of the cluster
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes.conditions'
      - path: phase
        displayName: Status
        description: Status of the Portworx cluster.
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes.phase'
      resources:
      - kind: Pod
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: DaemonSet
        name: ""
        version: v1
      - kind: ConfigMap
        name: ""
        version: v1
    - kind: StorageNode
      name: storagenodes.core.libopenstorage.org
      version: v1
      displayName: Storage Node
      description: DO NOT CREATE Storage Node as it is internally created by the operator.
        It represents the status of a Portworx node.
      specDescriptors:
      - path: version
        displayName: Version
        description: Version of Portworx on the node.
      statusDescriptors:
      - path: nodeUid
        displayName: Node UID
        description: Unique identifier for the Portworx node.
      - path: phase
        displayName: Status
        description: Status of the Portworx node.
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes.phase'
      - path: network.dataIP
        displayName: Data IP
        description: IP address used by the storage driver for data traffic
      - path: network.mgmtIP
        displayName: Management IP
        description: IP address used by the storage driver for management traffic
      - path: conditions
        displayName: Node Conditions
        description: Conditions describe the current state of the storage node
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes.conditions'
