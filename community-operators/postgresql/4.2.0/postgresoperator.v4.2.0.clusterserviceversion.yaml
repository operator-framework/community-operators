apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: postgresoperator.v4.2.0
  annotations:
    certified: "false"
    support: crunchydata.com
    categories: Database
    capabilities: Auto Pilot
    description: Enterprise open source PostgreSQL-as-a-Service
    createdAt: 2019-12-31 19:40Z
    containerImage: crunchydata/postgres-operator:centos7-4.2.0
    repository: https://github.com/CrunchyData/postgres-operator
    alm-examples: |-
      [
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgcluster",
          "metadata": {
            "labels": {
              "archive": "false"
            },
            "name": "example"
          },
          "spec": {
            "PrimaryStorage": {
              "accessmode": "ReadWriteOnce",
              "size": "1G",
              "storageclass": "standard",
              "storagetype": "dynamic"
            },
            "ccpimage": "crunchy-postgres-ha",
            "ccpimagetag": "centos7-12.1-4.2.0",
            "clustername": "example",
            "database": "example",
            "exporterport": "9187",
            "name": "example",
            "pgbadgerport": "10000",
            "port": "5432",
            "primarysecretname": "example-primaryuser",
            "rootsecretname": "example-postgresuser",
            "userlabels": {
              "archive": "false"
            },
            "usersecretname": "example-primaryuser"
          }
        },
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgreplica",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgpolicy",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgtask",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgbackup",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        }
      ]
spec:
  displayName: Crunchy PostgreSQL for OpenShift
  provider:
    name: Crunchy Data
  keywords:
  - postgres
  - postgresql
  - database
  - sql
  - operator
  - crunchy data
  description: |-
    Crunchy PostgreSQL for OpenShift lets you run your own production-grade PostgreSQL-as-a-Service on OpenShift!

    Powered by the Crunchy [PostgreSQL Operator](https://github.com/CrunchyData/postgres-operator), Crunchy PostgreSQL
    for OpenShift automates and simplifies deploying and managing open source PostgreSQL clusters on OpenShift by providing the
    essential features you need to keep your PostgreSQL clusters up and running, including:

    - **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],
    while fully customizing your Pods and PostgreSQL configuration!
    - **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].
    Uses [Pod Anti-Affinity][anti-affinity] to help resiliency; you can configure how aggressive this can be!
    Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled
    backups as well and set your backup retention policy
    - **Disaster Recovery**: Backups and restores leverage the open source [pgBackRest][] utility
    and [includes support for full, incremental, and differential backups as well as efficient delta restores][disaster-recovery].
    Set how long you want your backups retained for. Works great with very large databases!
    - **Monitoring**: Track the health of your PostgreSQL clusters using the open source [pgMonitor][] library.
    - **Clone**: Create new clusters from your existing clusters with a simple [`pgo clone`][pgo-clone] command.
    - **Full Customizability**: Crunchy PostgreSQL for OpenShift makes it easy to get your own PostgreSQL-as-a-Service up and running on
    and lets make further enhancements to customize your deployments, including:
      - Selecting different storage classes for your primary, replica, and backup storage
      - Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters!
      - Use your own container image repository, including support `imagePullSecrets` and private repositories
      - Bring your own trusted certificate authority (CA) for use with the Operator API server
      - Override your PostgreSQL configuration for each cluster

    and much more!

    [anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    [disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/disaster-recovery/
    [high-availability]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/
    [pgo-clone]: https://access.crunchydata.com/documentation/postgres-operator/latest/pgo-client/reference/pgo_clone/
    [provisioning]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/provisioning/

    [pgBackRest]: https://www.pgbackrest.org
    [pgMonitor]: https://github.com/CrunchyData/pgmonitor

    ## Before You Begin

    There are several manual steps that the cluster administrator must perform prior to installing the operator. The
    operator must be provided with an initial configuration to run in the cluster, as well as certificates and
    credentials that need to be generated.

    Start by cloning the operator repository locally.

    ```
    git clone -b v4.2.0 https://github.com/CrunchyData/postgres-operator.git
    cd postgres-operator
    ```

    ### PostgreSQL Operator Configuration

    Edit `conf/postgres-operator/pgo.yaml` to configure the operator deployment. Look over all of the options and make any
    changes necessary for your environment.

    #### Image

    Update the `CCPImageTag` tag to configure the PostgreSQL image being used, updating for the version of PostgreSQL as needed.

    ```
    CCPImageTag:  centos7-12.1-4.2.0
    ```

    #### Storage

    Configure the backend storage for the Persistent Volumes used by each PostgreSQL cluster. Depending on the type of persistent
    storage you wish to make available, adjust the `StorageClass` as necessary. For example, to deploy on AWS using `gp2`, you
    would set the following:

    ```
    storageos:
      AccessMode:  ReadWriteOnce
      Size:  1G
      StorageType:  dynamic
      StorageClass:  gp2
      Fsgroup:  26
    ```

    Once the storage backend is defined, enable the new storage option as needed.

    ```
    PrimaryStorage: storageos
    ReplicaStorage: storageos
    BackrestStorage: storageos
    ```

    ### Certificates

    You will need to either generate new TLS certificates or use existing certificates for the operator API.

    You can generate new self-signed certificates using scripts in the operator repository.

    ```
    export PGOROOT=$(pwd)
    cd $PGOROOT/deploy
    $PGOROOT/deploy/gen-api-keys.sh
    $PGOROOT/deploy/gen-sshd-keys.sh
    cd $PGOROOT
    ```

    ### Configuration and Secrets

    Once the configuration changes have been updated and certificates are in place, we can save the information to the cluster.

    Create the pgo namespace if it does not exist already. This single namespace is where the operator should be deployed to. PostgreSQL clusters will also be deployed here.

    ```
    oc create namespace pgo
    ```

    Create the `pgo-backrest-repo-config` Secret that is used by the operator.

    ```
    oc create secret generic -n pgo pgo-backrest-repo-config \
      --from-file=config=$PGOROOT/conf/pgo-backrest-repo/config \
      --from-file=sshd_config=$PGOROOT/conf/pgo-backrest-repo/sshd_config \
      --from-file=aws-s3-credentials.yaml=$PGOROOT/conf/pgo-backrest-repo/aws-s3-credentials.yaml \
      --from-file=aws-s3-ca.crt=$PGOROOT/conf/pgo-backrest-repo/aws-s3-ca.crt
    ```

    Create the `pgo-auth-secret` Secret that is used by the operator.

    ```
    oc create secret generic -n pgo pgo-auth-secret \
      --from-file=server.crt=$PGOROOT/conf/postgres-operator/server.crt \
      --from-file=server.key=$PGOROOT/conf/postgres-operator/server.key
    ```

    Install the bootstrap credentials:

    ```
    $PGOROOT/deploy/install-bootstrap-creds.sh
    ```

    Install the security context constraint for OpenShift:

    ```
    oc create -f $PGOROOT/deploy/pgo-scc.yaml
    ```

    Remove existing credentials for pgo-apiserver TLS REST API, if they exist.

    ```
    oc delete secret -n pgo tls pgo.tls
    ```

    Create credentials for pgo-apiserver TLS REST API
    ```
    oc create secret -n pgo tls pgo.tls \
      --key=$PGOROOT/conf/postgres-operator/server.key \
      --cert=$PGOROOT/conf/postgres-operator/server.crt
    ```

    Create the `pgo-config` ConfigMap that is used by the operator.

    ```
    oc create configmap -n pgo pgo-config \
      --from-file=$PGOROOT/conf/postgres-operator
    ```

    Once these resources are in place, the operator can be installed into the cluster.

    ## After You Install

    Once the operator is installed in the cluster, you will need to perform several steps to enable usage.

    ### Service

    ```
    oc expose deployment -n pgo postgres-operator --type=LoadBalancer
    ```

    For the pgo client to communicate with the operator, it needs to know where to connect.
    Export the service URL as `PGO_APISERVER_URL` in the shell.

    ```
    export PGO_APISERVER_URL=https://<url of exposed service>:8443
    ```

    ### Security

    When postgres operator deploys, it creates a set of certificates the pgo client will need to communicate.

    ### Client Certificates

    Copy the client certificates from the apiserver to the local environment - we use /tmp for this example.

    ```
    oc cp <pgo-namespace>/<postgres-operator-pod>:/tmp/server.key /tmp/server.key -c apiserver
    oc cp <pgo-namespace>/<postgres-operator-pod>:/tmp/server.crt /tmp/server.crt -c apiserver
    ```

    Configure the shell for the pgo command line to use the certificates

    ```
    export PGO_CA_CERT=/tmp/server.crt
    export PGO_CLIENT_CERT=/tmp/server.crt
    export PGO_CLIENT_KEY=/tmp/server.key
    ```
  version: 4.2.0
  links:
  - name: Crunchy Data
    url: https://www.crunchydata.com/
  - name: Documentation
    url: https://access.crunchydata.com/documentation/postgres-operator/
  maintainers:
  - name: Crunchy Data
    email: info@crunchydata.com
  minKubeVersion: 1.11.0
  replaces: postgresoperator.v4.1.0
  maturity: stable
  labels:
    alm-owner-enterprise-app: postgres-operator
    alm-status-descriptors: postgres-operator.v4.2.0
  customresourcedefinitions:
    owned:
    - description: Represents a Postgres primary cluster member
      displayName: Postgres Primary Cluster Member
      kind: Pgcluster
      name: pgclusters.crunchydata.com
      resources:
      - kind: Deployment
        version: v1
      - kind: ReplicaSet
        version: v1
      - kind: Pod
        version: v1
      - kind: Service
        version: v1
      specDescriptors:
      - description: The Crunchy PostgreSQL image to use. Possible values are "crunchy-postgres-ha"
          and "crunchy-postgres-gis-ha"
        displayName: PostgreSQL Image
        path: ccpimage
        value: crunchy-postgres-ha
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The tag of the PostgreSQL image to use. Example is "centos7-12.1-4.2.0"
        displayName: PostgreSQL Image Tag
        path: ccpimagetag
        value: centos7-12.1-4.2.0
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The name that is assigned to this specific PostgreSQL cluster
        displayName: PostgreSQL Cluster name
        path: clustername
        value: hippo
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The name of the initial database to be created inside of the
          PostgreSQL cluster, e.g. "hippo"
        displayName: Initial PostgreSQL database name
        path: database
        value: hippo
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The port to use for the PostgreSQL metrics exporter used for
          cluster monitoring, e.g. "9187"
        displayName: PostgreSQL Monitor Port
        path: exporterport
        value: 9187
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: The name of the CRD entry. Should match the PostgreSQL Cluster
          name
        displayName: PostgreSQL CRD name
        path: name
        value: hippo
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The port to use for the pgBadger PostgreSQL query analysis service,
          e.g. "10000"
        displayName: pgBadger Port
        path: pgbadgerport
        value: 10000
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: The port to use for the PostgreSQL cluster, e.g. "5432"
        displayName: PostgreSQL Port
        path: port
        value: 5432
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: The name of the Secret that contains the PostgreSQL superuser
          credentials
        displayName: PostgreSQL superuser credentials
        path: rootsecretname
        value: hippo-postgres-secret
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The name of the Secret that contains the credentials used for
          managing cluster instance authentication, e.g. connections for replicas
        displayName: PostgreSQL support service credentials
        path: primarysecretname
        value: hippo-primaryuser-secret
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The name of the Secret that contains the PostgreSQL user credentials
          for logging into the PostgreSQL cluster
        displayName: PostgreSQL user credentials
        path: usersecretname
        value: hippo-testuser-secret
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Attributes that help set the primary storage of a PostgreSQL
          cluster
        displayName: PostgreSQL Primary Storage
        path: PrimaryStorage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:com.tectonic.ui:label
      - description: Contains the name of the PostgreSQL cluster to associate with
          this storage. Should match the Cluster name
        displayName: PostgreSQL Primary Storage Name
        path: PrimaryStorage.name
        value: hippo
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Contains the storage class used for the primary PostgreSQL instance
          of the cluster
        displayName: PostgreSQL Primary StorageClass
        path: PrimaryStorage.storageclass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:io.kubernetes:StorageClass
      - description: The access mode for the storage class, e.g. "ReadWriteOnce"
        displayName: PostgreSQL Primary StorageClass Access Mode
        path: PrimaryStorage.accessmode
        value: ReadWriteOnce
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:com.tectonic.ui:select:ReadWriteOnce
        - urn:alm:descriptor:com.tectonic.ui:select:ReadWriteMany
      - description: The size of the PVC that will store the data for the primary
          PostgreSQL instance, e.g. "1G"
        displayName: PostgreSQL Primary Data PVC Size
        path: PrimaryStorage.size
        value: 1G
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: A set of labels that help the PostgreSQL Operator manage a PostgreSQL
          cluster
        displayName: User defined labels
        path: userlabels
        value: '{}'
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      - description: Outputs a human readable message of the status of if the PostgreSQL
          cluster initialization
        displayName: Initialization Message
        path: message
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Outputs the state of if the PostgreSQL cluster was initialized
        displayName: Initialization State
        path: state
        x-descriptors:
        - urn:alm:descriptor:text
      version: v1
    - description: Represents a Postgres replica cluster member
      displayName: Postgres Replica Cluster Member
      kind: Pgreplica
      name: pgreplicas.crunchydata.com
      resources:
      - kind: Deployment
        version: v1
      - kind: ReplicaSet
        version: v1
      - kind: Pod
        version: v1
      - kind: Service
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the deployment.
        displayName: Size
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
    - description: Represents a Postgres sql policy
      displayName: Postgres SQL Policy
      kind: Pgpolicy
      name: pgpolicies.crunchydata.com
      resources:
      - kind: Pgpolicy
        version: v1
      specDescriptors:
      - description: The pgpolicy name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The pgpolicy sql.
        displayName: SQL
        path: sql
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
    - description: Represents a Postgres workflow task
      displayName: Postgres workflow task
      kind: Pgtask
      name: pgtasks.crunchydata.com
      resources:
      - kind: Pgtask
        version: v1
      specDescriptors:
      - description: The pgtask name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The pgtask type.
        displayName: TaskType
        path: tasktype
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
    - description: Represents a Postgres backup task
      displayName: Postgres backup task
      kind: Pgbackup
      name: pgbackups.crunchydata.com
      resources:
      - kind: Pgbackup
        version: v1
      specDescriptors:
      - description: The pgbackup name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The pgbackup status.
        displayName: BackupStatus
        path: backupstatus
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: true
  - type: AllNamespaces
    supported: false
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - serviceAccountName: postgres-operator
        rules:
        - verbs:
          - '*'
          apiGroups:
          - '*'
          resources:
          - namespaces
          - serviceaccounts
          - roles
          - rolebindings
        - verbs:
          - list
          - get
          apiGroups:
          - '*'
          resources:
          - nodes
          - storageclasses
      permissions:
      - serviceAccountName: postgres-operator
        rules:
        - verbs:
          - '*'
          apiGroups:
          - crunchydata.com
          resources:
          - pgclusters
          - pgpolicies
          - pgtasks
          - pgbackups
          - pgreplicas
        - verbs:
          - '*'
          apiGroups:
          - apps
          resources:
          - deployments
        - verbs:
          - '*'
          apiGroups:
          - ""
          resources:
          - secrets
          - pods
          - configmaps
          - pods/exec
          - pods/log
          - services
          - replicasets
          - endpoints
          - persistentvolumeclaims
        - verbs:
          - get
          - list
          apiGroups:
          - ""
          resources:
          - nodes
          - storageclasses
        - verbs:
          - '*'
          apiGroups:
          - batch
          resources:
          - jobs
      deployments:
      - name: postgres-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: postgres-operator
              vendor: crunchydata
          template:
            metadata:
              labels:
                name: postgres-operator
                vendor: crunchydata
            spec:
              serviceAccountName: postgres-operator
              containers:
              - name: apiserver
                image: crunchydata/pgo-apiserver:centos7-4.2.0
                imagePullPolicy: IfNotPresent
                ports:
                - containerPort: 8443
                readinessProbe:
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 15
                  periodSeconds: 5
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 15
                  periodSeconds: 5
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: PGO_INSTALLATION_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CRUNCHY_DEBUG
                  value: "true"
                - name: EVENT_ADDR
                  value: localhost:4150
                - name: PORT
                  value: "8443"
                - name: CCP_IMAGE_PREFIX
                  value: crunchydata
                - name: CCP_IMAGE_TAG
                  value: centos7-12.1-4.2.0
                - name: PGO_IMAGE_PREFIX
                  value: crunchydata
                - name: PGO_IMAGE_TAG
                  value: centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST
                  value: crunchydata/pgo-backrest:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO
                  value: crunchydata/pgo-backrest-repo:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO_SYNC
                  value: crunchydata/pgo-backrest-repo-sync:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST_RESTORE
                  value: crunchydata/pgo-backrest-restore:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_CLIENT
                  value: crunchydata/pgo-client:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_LOAD
                  value: crunchydata/pgo-load:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_RMDATA
                  value: crunchydata/pgo-rmdata:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_SQL_RUNNER
                  value: crunchydata/pgo-sqlrunner:centos7-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_ADMIN
                  value: crunchydata/crunchy-admin:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_BACKREST_RESTORE
                  value: crunchydata/crunchy-backrest-restore:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_COLLECT
                  value: crunchydata/crunchy-collect:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_GRAFANA
                  value: crunchydata/crunchy-grafana:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGBADGER
                  value: crunchydata/crunchy-pgbadger:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGBENCH
                  value: crunchydata/crunchy-pgbench:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGBOUNCER
                  value: crunchydata/crunchy-pgbouncer:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGDUMP
                  value: crunchydata/crunchy-pgdump:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGRESTORE
                  value: crunchydata/crunchy-pgrestore:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_HA
                  value: crunchydata/crunchy-postgres-ha:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_GIS_HA
                  value: crunchydata/crunchy-postgres-gis-ha:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PROMETHEUS
                  value: crunchydata/crunchy-prometheus:centos7-12.1-4.2.0
              - name: operator
                image: crunchydata/postgres-operator:centos7-4.2.0
                imagePullPolicy: IfNotPresent
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: PGO_INSTALLATION_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CRUNCHY_DEBUG
                  value: "true"
                - name: EVENT_ADDR
                  value: localhost:4150
                - name: CCP_IMAGE_PREFIX
                  value: crunchydata
                - name: CCP_IMAGE_TAG
                  value: centos7-12.1-4.2.0
                - name: PGO_IMAGE_PREFIX
                  value: crunchydata
                - name: PGO_IMAGE_TAG
                  value: centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST
                  value: crunchydata/pgo-backrest:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO
                  value: crunchydata/pgo-backrest-repo:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO_SYNC
                  value: crunchydata/pgo-backrest-repo-sync:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_BACKREST_RESTORE
                  value: crunchydata/pgo-backrest-restore:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_CLIENT
                  value: crunchydata/pgo-client:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_LOAD
                  value: crunchydata/pgo-load:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_RMDATA
                  value: crunchydata/pgo-rmdata:centos7-4.2.0
                - name: RELATED_IMAGE_PGO_SQL_RUNNER
                  value: crunchydata/pgo-sqlrunner:centos7-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_ADMIN
                  value: crunchydata/crunchy-admin:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_BACKREST_RESTORE
                  value: crunchydata/crunchy-backrest-restore:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_COLLECT
                  value: crunchydata/crunchy-collect:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_GRAFANA
                  value: crunchydata/crunchy-grafana:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGBADGER
                  value: crunchydata/crunchy-pgbadger:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGBENCH
                  value: crunchydata/crunchy-pgbench:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGBOUNCER
                  value: crunchydata/crunchy-pgbouncer:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGDUMP
                  value: crunchydata/crunchy-pgdump:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PGRESTORE
                  value: crunchydata/crunchy-pgrestore:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_HA
                  value: crunchydata/crunchy-postgres-ha:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_GIS_HA
                  value: crunchydata/crunchy-postgres-gis-ha:centos7-12.1-4.2.0
                - name: RELATED_IMAGE_CRUNCHY_PROMETHEUS
                  value: crunchydata/crunchy-prometheus:centos7-12.1-4.2.0
              - name: scheduler
                image: crunchydata/pgo-scheduler:centos7-4.2.0
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  exec:
                    command:
                    - bash
                    - -c
                    - test -n "$(find /tmp/scheduler.hb -newermt '61 sec ago')"
                    failureThreshold: 2
                    initialDelaySeconds: 60
                    periodSeconds: 60
                env:
                - name: PGO_INSTALLATION_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CRUNCHY_DEBUG
                  value: "true"
                - name: EVENT_ADDR
                  value: localhost:4150
                - name: TIMEOUT
                  value: "3600"
              - name: event
                image: crunchydata/pgo-event:centos7-4.2.0
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /ping
                    port: 4151
                  initialDelaySeconds: 15
                  periodSeconds: 5
                env:
                - name: TIMEOUT
                  value: "3600"
  icon:
  - mediatype: image/png
    base64data: 
