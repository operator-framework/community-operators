apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    capabilities: Full Lifecycle
    categories: Database
    certified: "false"
    repository: https://github.com/CrunchyData/postgres-operator
    containerImage: crunchydata/postgres-operator:centos7-3.5.0
    createdAt: 2019-02-01T11:59:59Z
    description: PostgreSQL is a powerful, open source object-relational database system with over 30 years of active development.
    support: Crunchy Data Solutions, Inc.
  name: postgres-operator.v3.5.0
  namespace: placeholder
spec:
  version: 3.5.0
  maturity: stable
  displayName: Crunchy PostgreSQL Enterprise
  description: |
    The PostgreSQL Operator runs within a Kubernetes cluster and provides a means to deploy and manage PostgreSQL clusters.

    ## Before You Begin

    There are several manual steps that the cluster administrator must perform prior to installing the operator. The
    operator must be provided with an initial configuration to run in the cluster, as well as certificates and
    credentials that need to be generated.

    Start by cloning down the operator repository locally.

    ```
    git clone -b 3.5.0 https://github.com/CrunchyData/postgres-operator.git
    cd postgres-operator
    ```

    ### Operator Configuration

    Edit `conf/postgres-operator/pgo.yaml` to configure the operator deployment. Look over all of the options and make any
    changes necessary for your environment.

    #### Image

    Update the `CCPImageTag` tag to configure the postgres image being used, updating for the version of postgres as needed.

    ```
    CCPImageTag:  centos7-11.2-2.3.1
    ```

    #### Storage

    Configure the backend storage for the Persistent Volumes used by each cluster. Depending on the type of persistent
    storage you wish to make available, adjust the `StorageClass` as necessary. In this case, we are deployed on AWS using `gp2`
    is the default for the cluster.

    ```
    storageos:
      AccessMode:  ReadWriteOnce
      Size:  1G
      StorageType:  dynamic
      StorageClass:  gp2
      Fsgroup:  26
    ```

    Once the storage backend is defined, enable the new storage option as needed.

    ```
    PrimaryStorage: storageos
    XlogStorage: storageos
    BackupStorage: storageos
    ReplicaStorage: storageos
    BackrestStorage: storageos
    ```

    ### Certificates

    You will need to either generate new TLS certificates or use existing certificates for the operator API.

    You can generate new self-signed certificates using scripts in the operator repository.

    ```
    export COROOT=$(pwd)
    cd $COROOT/deploy
    $COROOT/deploy/gen-api-keys.sh
    $COROOT/deploy/gen-sshd-keys.sh
    cd $COROOT
    ```

    ### Configuration and Secrets

    Once the configuration changes have been updated and certificates are in place, we can save the information to the cluster.

    Create the `pgo-backrest-repo-config` Secret that is used by the operator.

    ```
    kubectl create secret generic -n operators pgo-backrest-repo-config \
      --from-file=config=$COROOT/conf/pgo-backrest-repo/config \
      --from-file=ssh_host_rsa_key=$COROOT/conf/pgo-backrest-repo/ssh_host_rsa_key \
      --from-file=authorized_keys=$COROOT/conf/pgo-backrest-repo/authorized_keys \
      --from-file=id_rsa=$COROOT/conf/pgo-backrest-repo/id_rsa \
      --from-file=ssh_host_ecdsa_key=$COROOT/conf/pgo-backrest-repo/ssh_host_ecdsa_key \
      --from-file=ssh_host_ed25519_key=$COROOT/conf/pgo-backrest-repo/ssh_host_ed25519_key \
      --from-file=sshd_config=$COROOT/conf/pgo-backrest-repo/sshd_config
    ```

    Create the `pgo-auth-secret` Secret that is used by the operator.

    ```
    kubectl create secret generic -n operators pgo-auth-secret \
      --from-file=server.crt=$COROOT/conf/postgres-operator/server.crt \
      --from-file=server.key=$COROOT/conf/postgres-operator/server.key \
      --from-file=pgouser=$COROOT/conf/postgres-operator/pgouser \
      --from-file=pgorole=$COROOT/conf/postgres-operator/pgorole
    ```

    Create the `pgo-config` ConfigMap that is used by the operator.

    ```
    kubectl create configmap -n operators pgo-config \
      --from-file=pgo.yaml=$COROOT/conf/postgres-operator/pgo.yaml \
      --from-file=pgo.load-template.json=$COROOT/conf/postgres-operator/pgo.load-template.json \
      --from-file=pgo.lspvc-template.json=$COROOT/conf/postgres-operator/pgo.lspvc-template.json \
      --from-file=container-resources.json=$COROOT/conf/postgres-operator/container-resources.json \
      --from-file=$COROOT/conf/postgres-operator/backup-job.json \
      --from-file=$COROOT/conf/postgres-operator/rmdata-job.json \
      --from-file=$COROOT/conf/postgres-operator/pvc.json \
      --from-file=$COROOT/conf/postgres-operator/pvc-storageclass.json \
      --from-file=$COROOT/conf/postgres-operator/pvc-matchlabels.json \
      --from-file=$COROOT/conf/postgres-operator/backrest-job.json \
      --from-file=$COROOT/conf/postgres-operator/backrest-restore-job.json \
      --from-file=$COROOT/conf/postgres-operator/pgo.sqlrunner-template.json \
      --from-file=$COROOT/conf/postgres-operator/cluster/1
    ```

    Once these resources are in place, the operator can be installed into the cluster.

    ## After You Install

    Once the operator is installed in the cluster, you will need to perform several steps to enable usage.

    ### Service

    ```
    oc expose deployment -n operators postgres-operator
    ```

    ### Client Certificates

    Distribute the certicates stored in the `pgo-auth-secret` Secret to clients for accessing the API.
  icon:
    - base64data: 
      mediatype: image/svg+xml
  keywords: [relational database]
  maintainers:
    - email: info@crunchydata.com
      name: Crunchy Data
  provider:
    name: Crunchy Data
  labels:
    alm-owner-postgres: postgres-operator
    alm-status-descriptors: postgres-operator.v3.5.0
  links:
  - name: Crunchy Data
    url: https://www.crunchydata.com
  - name: Documentation
    url: https://crunchydata.github.io/postgres-operator/3.5.0/
  selector:
    matchLabels:
      alm-owner-postgres: postgres-operator
  customresourcedefinitions:
    owned:
    - name: pgbackups.cr.client-go.k8s.io
      version: v1
      kind: Pgbackup
      displayName: Pgbackup
      description: An instance of Pgbackup.
    - name: pgclusters.cr.client-go.k8s.io
      version: v1
      kind: Pgcluster
      displayName: Pgcluster
      description: An instance of Pgcluster.
    - name: pgpolicies.cr.client-go.k8s.io
      version: v1
      kind: Pgpolicy
      displayName: Pgpolicy
      description: An instance of Pgpolicy.
    - name: pgreplicas.cr.client-go.k8s.io
      version: v1
      kind: Pgreplica
      displayName: Pgreplica
      description: An instance of Pgreplica.
    - name: pgtasks.cr.client-go.k8s.io
      version: v1
      kind: Pgtask
      displayName: Pgtask
      description: An instance of Pgtask.
    - name: pgupgrades.cr.client-go.k8s.io
      version: v1
      kind: Pgupgrade
      displayName: Pgupgrade
      description: An instance of Pgupgrade.
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true
  install:
    strategy: deployment
    spec:
      clusterPermissions:
        - serviceAccountName: postgres-operator
          rules:
          - apiGroups:
            - "*"
            resources:
            - pgclusters
            - pgpolicies
            - pgupgrades
            - pgtasks
            - pgbackups
            - pgreplicas
            verbs:
            - "*"
          - apiGroups:
            - "*"
            resources:
            - nodes
            verbs:
            - get
            - list
      permissions:
        - serviceAccountName: postgres-operator
          rules:
          - apiGroups:
            - ""
            resources:
            - pods
            - services
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
            verbs:
            - "*"
          - apiGroups:
            - apps
            resources:
            - deployments
            - daemonsets
            - replicasets
            - statefulsets
            verbs:
            - "*"
        - serviceAccountName: pgo-backrest
          rules:
          - apiGroups:
            - ""
            resources:
            - pods
            verbs:
            - get
            - list
          - apiGroups:
            - ""
            resources:
            - pods/exec
            verbs:
            - create
      deployments:
        - name: postgres-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: postgres-operator
            strategy:
              type: Recreate
            template:
              metadata:
                labels:
                  name: postgres-operator
              spec:
                serviceAccountName: postgres-operator
                containers:
                - name: apiserver
                  image: crunchydata/pgo-apiserver:centos7-3.5.0
                  imagePullPolicy: IfNotPresent
                  ports:
                  - containerPort: 8443
                  env:
                  - name: CRUNCHY_DEBUG
                    value: "true"
                  - name: PORT
                    value: "8443"
                  - name: NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.annotations['olm.targetNamespaces']
                  - name: TLS_NO_VERIFY
                    value: "false"
                  volumeMounts:
                    - mountPath: /pgo-config
                      name: pgo-config
                      readonly: true
                    - mountPath: /pgo-auth-secret
                      name: pgo-auth-secret
                      readonly: true
                - name: operator
                  image: crunchydata/postgres-operator:centos7-3.5.0
                  imagePullPolicy: IfNotPresent
                  env:
                  - name: CRUNCHY_DEBUG
                    value: "true"
                  - name: NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.annotations['olm.targetNamespaces']
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  volumeMounts:
                    - mountPath: /pgo-config
                      name: pgo-config
                      readonly: true
                - name: scheduler
                  image: crunchydata/pgo-scheduler:centos7-3.5.0
                  imagePullPolicy: IfNotPresent
                  env:
                  - name: NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.annotations['olm.targetNamespaces']
                  - name: TIMEOUT
                    value: "3600"
                  volumeMounts:
                    - mountPath: /pgo-config
                      name: pgo-config
                      readonly: true
                volumes:
                - name: pgo-config
                  configMap:
                    name: pgo-config
                - name: pgo-auth-secret
                  secret:
                    secretName: pgo-auth-secret
                    defaultMode: 511
