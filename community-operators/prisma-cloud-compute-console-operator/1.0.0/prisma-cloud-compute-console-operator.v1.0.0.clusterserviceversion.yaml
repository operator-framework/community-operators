apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    # Setting olm.maxOpenShiftVersion automatically
    # This property was added via an automatic process since it was possible to identify that this distribution uses API(s),
    # which will be removed in the k8s version 1.22 and OpenShift version OCP 4.9. Then, it will prevent OCP users to
    # upgrade their cluster to 4.9 before they have installed in their current clusters a version of your operator that
    # is compatible with it. Please, ensure that your project is no longer using these API(s) and that you start to
    # distribute solutions which is compatible with Openshift 4.9.
    # For further information, check the README of this repository.
    olm.properties: '[{"type": "olm.maxOpenShiftVersion", "value": "4.8"}]'
    alm-examples: |-
      [
        {
          "apiVersion": "charts.helm.k8s.io/v1alpha1",
          "kind": "TwistlockConsole",
          "metadata": {
            "name": "example-twistlockconsole"
          },
          "spec": {
            "COMMUNICATION_PORT": "8084",
            "CONSOLE_CN": "",
            "DATA_FOLDER": "/var/lib/twistlock",
            "DATA_RECOVERY_ENABLED": "true",
            "DATA_RECOVERY_VOLUME": "/var/lib/twistlock-backup",
            "DEFENDER_CN": "",
            "DEFENDER_LISTENER_TYPE": "",
            "DOCKER_SOCKET": "",
            "DOCKER_TWISTLOCK_TAG": "_20_04_169",
            "HIGH_AVAILABILITY_ENABLED": "false",
            "HIGH_AVAILABILITY_PORT": "8086",
            "HIGH_AVAILABILITY_STATE": "PRIMARY",
            "MANAGEMENT_PORT_HTTP": "8081",
            "MANAGEMENT_PORT_HTTPS": "8083",
            "READ_ONLY_FS": "true",
            "RUN_CONSOLE_AS_ROOT": "",
            "SCAP_ENABLED": "",
            "SELINUX_LABEL": "disable",
            "SYSTEMD_ENABLED": "",
            "consoleImageName": "registry-auth.twistlock.com/tw_<REPLACE_TWISTLOCK_TOKEN>/twistlock/console:console_20_04_169",
            "namespace": "twistlock",
            "openshift": false,
            "persistentVolumeDataFolder": "var/lib/twistlock",
            "persistentVolumeDataRecoveryFolder": "var/lib/twistlock-backup",
            "persistentVolumeStorage": "100Gi",
            "privileged": false,
            "secrets": [],
            "selinux-type": "",
            "serviceType": "LoadBalancer",
            "twistlock_cfg": "\"#  _____          _     _   _            _    \\n# |_   _|_      _(_)___| |_| | ___   ___| | __  \\n#   | | \\\\ \\\\ /\\\\ / / / __| __| |/ _ \\\\ / __| |/ /      \\n#   | |  \\\\ V  V /| \\\\__ \\\\ |_| | (_) | (__|   \u003c       \\n#   |_|   \\\\_/\\\\_/ |_|___/\\\\__|_|\\\\___/ \\\\___|_|\\\\_\\\\\\\\     \\n\\n# This configuration file contains the setup parameters for Prisma Cloud Compute (Twistlock)\\n# This file is typically stored in the same directory as the installation script (twistlock.sh)\\n# To reconfigure settings, update this configuration file and re-run twistlock.sh; state and unchanged settings will persist\\n\\n\\n\\n#############################################\\n#     Network configuration\\n#############################################\\n# Each port must be set to a unique value (multiple services cannot share the same port)\\n###### Management console ports #####\\n# Sets the ports that the Twistlock management website listens on\\n# The system that you use to configure Twistlock must be able to connect to the Twistlock Console on these ports\\n# To disable the HTTP listner, leave the value empty (e.g. MANAGEMENT_PORT_HTTP=)\\nMANAGEMENT_PORT_HTTP=${MANAGEMENT_PORT_HTTP-8081}\\nMANAGEMENT_PORT_HTTPS=8083\\n\\n##### Inter-system communication port ##### \\n# Sets the port for communication between the Defender(s) and the Console\\nCOMMUNICATION_PORT=8084\\n\\n##### Certificate common names (optional) #####\\n# Determines how to construct the CN in the Console's certificate\\n# This value should not be modified unless instructed to by Twistlock Support\\nCONSOLE_CN=$(hostname --fqdn 2\u003e/dev/null); if [[ $? == 1 ]]; then CONSOLE_CN=$(hostname); fi\\n# Determines how to construct the CN in the Defenders' certificates\\n# Each Defender authenticates to the Console with this certificate and each cert must have a unique CN\\n# These values should not be modified unless instructed to by Twistlock Support\\nDEFENDER_CN=${DEFENDER_CN:-}\\n\\n#############################################\\n#     Twistlock system configuration\\n#############################################\\n###### Data recovery #####\\n# Data recovery automatically exports the full Twistlock configuration to the specified path every 24 hours\\n# Daily, weekly, and monthly snapshots are retained\\n# The exported configuration can be stored on durable storage or backed up remotely with other tools\\n# Sets data recovery state (enabled or disabled)\\nDATA_RECOVERY_ENABLED=true\\n# Sets the directory to which Twistlock data is exported\\nDATA_RECOVERY_VOLUME=/var/lib/twistlock-backup\\n\\n##### Read only containers #####\\n# Sets Twistlock containers file-system to read-only\\nREAD_ONLY_FS=true\\n\\n##### Storage paths #####\\n# Sets the base directory to store Twistlock local data (db and log files)\\nDATA_FOLDER=/var/lib/twistlock\\n\\n##### Docker socket #####\\n# Sets the location of the Docker socket file\\nDOCKER_SOCKET=${DOCKER_SOCKET:-/var/run/docker.sock}\\n# Sets the type of the docker listener (TCP or NONE)\\nDEFENDER_LISTENER_TYPE=${DEFENDER_LISTENER_TYPE:-NONE}\\n\\n#### SCAP (XCCDF) configuration ####\\n# Sets SCAP state (enabled or disabled)\\nSCAP_ENABLED=${SCAP_ENABLED:-false}\\n\\n#### systemd configuration ####\\n# Installs Twistlock as systemd service\\nSYSTEMD_ENABLED=${SYSTEMD_ENABLED:-false}\\n\\n#### userid configuration ####\\n# Run Twistlock console processes as root (default, twistlock user account)\\nRUN_CONSOLE_AS_ROOT=${RUN_CONSOLE_AS_ROOT:-false}\\n\\n#### selinux configuration ####\\n# If SELINUX is enabled in dockerd, enable running Twistlock console and defender with a dedicated SELINUX label\\n# See https://docs.docker.com/engine/reference/run/#security-configuration\\nSELINUX_LABEL=disable\\n\\n#############################################\\n#      High availability settings\\n#############################################\\n# Only to be used when the Console is deployed outside of a Kubernetes cluster\\n# This native HA capability uses Mongo clustering and requires 3 or more instances\\nHIGH_AVAILABILITY_ENABLED=false\\nHIGH_AVAILABILITY_STATE=PRIMARY\\nHIGH_AVAILABILITY_PORT=8086\\n\\n\\n\\n#############################################\\n#      Twistlock repository configuration\\n#############################################\\n# Sets the version tag of the Twistlock containers\\n# Do not modify unless instructed to by Twistlock Support\\nDOCKER_TWISTLOCK_TAG=_20_03_150\\n\""
          }
        }
      ]
    capabilities: Basic Install
    categories: Security
    certified: 'false'
    containerImage: prismacloud/compute-console-operator:1.0.0
    createdAt: '2019-04-01 00:00:00'
    description: Deploy Prisma Cloud Compute (Twistlock) cloud native security in Kubernetes.
    repository: https://github.com/twistlock/sample-code/tree/master/operators/twistlock-console-helm-operator
    support: Palo Alto Networks
  name: prisma-cloud-compute-console-operator.v1.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - kind: TwistlockConsole
        name: twistlockconsoles.charts.helm.k8s.io
        version: v1alpha1
        displayName: Twistlock
        description: |
          Twistlock Console is installed first and provides policy, API
          endpoints, GUI, and makes install of Defenders on each node easy
          through a daemonset.
        resources:
        - kind: ReplicationController
          name: ''
          version: v1
        - kind: Service
          name: ''
          version: v1
        - kind: PersistentVolumeClaim
          name: ''
          version: v1
        - kind: ConfigMap
          name: ''
          version: v1
        - kind: Secret
          name: ''
          version: v1
        - Kind: ServiceAccount
          name: ''
          version: v1
  displayName: Prisma Cloud Compute (Twistlock) Console Operator
  icon:
    - base64data: >-
        PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzNy44MyA0MC42Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6IzAxMDEwMTt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlByaXNtYS1jbG91ZC1ibGFjazwvdGl0bGU+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjIwLjMgMjcuMDcgMjAuMyA4LjI3IDMwLjEyIDI3LjA3IDIwLjMgMjcuMDciLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iMjAuMyA4LjI3IDEwLjQ4IDI3LjA3IDIwLjMgMjcuMDcgMjAuMyA0MC42IDAgMjAuMyAxMC4zOCA5LjkyIDEyLjAzIDguMjcgMjAuMyAwIDIwLjMgOC4yNyIvPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTM3LjgzLDI3LjA3YTYuMDYsNi4wNiwwLDEsMSwwLTEyLjExdjIuNGEzLjY1LDMuNjUsMCwxLDAsMCw3LjNaIi8+PC9zdmc+
      mediatype: image/svg+xml
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  keywords:
    - twistlock
    - prisma
    - prisma-cloud
    - prisma-cloud-compute
    - paloalto 
    - paloaltonetworks
    - security
    - monitoring
    - scanning
    - runtime-security
    - container security
    - kuberenetes security
    - openshift security
    - container vulnerabilities
    - cloud native application security
    - compute
  links:
    - name: Source Code
      url: https://github.com/twistlock/sample-code/tree/master/operators/twistlock-console-helm-operator
  maturity: beta
  provider:
    name: Palo Alto Networks
  replaces: twistlock-console-operator.v0.0.9
  version: 1.0.0
  install:
    spec:
      deployments:
        - name: prisma-cloud-compute-console-helm-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: prisma-cloud-compute-console-helm-operator
            strategy: {}
            template:
              metadata:
                labels:
                  name: prisma-cloud-compute-console-helm-operator
              spec:
                containers:
                  - env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: prisma-cloud-compute-console-helm-operator
                      - name: RELATED_IMAGE_CONSOLE
                        value: registry-auth.twistlock.com/tw_<REPLACE_TWISTLOCK_TOKEN>/twistlock/console:console_20_04_169
                    image: prismacloud/compute-console-operator:1.0.0
                    imagePullPolicy: Always
                    name: prisma-cloud-compute-console-helm-operator
                    resources: {}
                serviceAccountName: prisma-cloud-compute-console-helm-operator
      clusterPermissions:
      - rules:
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        serviceAccountName: prisma-cloud-compute-console-helm-operator
      permissions:
        - rules:
            - apiGroups:
                - ''
              resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                - serviceaccounts
                - replicationcontrollers
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - prisma-cloud-compute-console-helm-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - charts.helm.k8s.io
              resources:
                - '*'
              verbs:
                - '*'
            - apiGroups:
                - security.openshift.io
              resources:
                - securitycontextconstraints
              resourceNames:
                - hostaccess
              verbs:
                - use
          serviceAccountName: prisma-cloud-compute-console-helm-operator
    strategy: deployment
  maintainers:
    - email: pcc-integrations@paloaltonetworks.com
      name: 'Palo Alto Networks'
  description: |
    This guide walks through using the [Prisma Cloud Compute (Twistlock)](https://docs.paloaltonetworks.com/prisma/prisma-cloud/20-04/prisma-cloud-compute-edition-admin.html) Console operator 

    powered by Helm using tools and libraries provided by the Operator SDK.


    The operator runs as a container that has the Prisma Cloud Compute (Twistlock) Console
    
    helm charts on board and can watch to see if the components are present. If they're not,
    
    the operator will use Helm to install the Twistlock Console correctly without any user interaction!


    All you have to to do is tell your cluster about the new TwistlockConsole custom resource
    
    by applying the included Custom Resource Definition (CRD). Then deploy the operator container

    into the cluster and let it do its thing.


    Let's get down to it. All we need from you is the Twistlock registry/docs token that came with
    
    your license. All of the yaml files you need to deploy are listed below.


    ##  Here's the plan:


    ```sh

    # Let the cluster know about our new custom resource, TwistlockConsole

    kubectl apply -f deploy/0_8_crds/0_charts_v1alpha1_twistlockconsole_crd.yaml

    # Create the 'twistlock' namespace

    kubectl apply -f deploy/1_namespace.yaml

    # Create necessary user and permissions to make things happen

    kubectl apply -f deploy/2_service_account.yaml 

    kubectl apply -f deploy/3_role.yaml

    kubectl apply -f deploy/4_role_binding.yaml

    kubectl apply -f deploy/5_clusterrole.yaml

    kubectl apply -f deploy/6_clusterrole_binding.yaml

    # Deploy the operator container as a pod

    kubectl apply -f deploy/7_operator.yaml

    # Add your token and apply. For more detail, before you apply the CR, read
    the note below

    kubectl apply -f deploy/0_8_crds/8_charts_v1alpha1_twistlockconsole_cr.yaml

    ``` 



    ### Understanding the Twistlock Customer Resource (CR) spec


    Helm uses a concept called [values](https://helm.sh/docs/chart_template_guide/values_files/) to provide customizations

    to a Helm chart's defaults, which are defined in the Helm chart's
    `values.yaml`

    file.


    Overriding these defaults is as simple as setting the desired values in the
    CR

    spec. With a Twistlock token from your license you can replace this
    placeholder 

    `<REPLACE_TWISTLOCK_TOKEN>` with your token.


    ```sh

    consoleImageName:
    registry-auth.twistlock.com/tw_<REPLACE_TWISTLOCK_TOKEN>/twistlock/console:console_20_04_169

    ``` 


    The other option to choose is whether we're on OpenShift, since Kubernetes
    is the default. If on OpenShift, be sure 

    to add these lines to your CR spec as well:


    ```sh

    openshift: true

    serviceType: NodePort

    ```
