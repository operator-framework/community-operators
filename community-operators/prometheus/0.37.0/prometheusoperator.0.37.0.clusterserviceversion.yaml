apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[{"apiVersion":"monitoring.coreos.com/v1","kind":"Prometheus","metadata":{"name":"example","labels":{"prometheus":"k8s"}},"spec":{"replicas":2,"serviceAccountName":"prometheus-k8s","securityContext":
      {}, "serviceMonitorSelector":{},"ruleSelector":{},"alerting":{"alertmanagers":[{"namespace":"monitoring","name":"alertmanager-main","port":"web"}]}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"name":"example","labels":{"k8s-app":"prometheus"}},"spec":{"selector":{"matchLabels":{"k8s-app":"prometheus"}},"endpoints":[{"port":"web","interval":"30s"}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PodMonitor","metadata":{"name":"example","labels":{"k8s-app":"prometheus"}},"spec":{"selector":{"matchLabels":{"k8s-app":"prometheus"}},"podMetricsEndpoints":[{"port":"web","interval":"30s"}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"Alertmanager","metadata":{"name":"alertmanager-main"},"spec":{"replicas":3,
      "securityContext": {}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"creationTimestamp":null,"labels":{"prometheus":"example","role":"alert-rules"},"name":"prometheus-example-rules"},"spec":{"groups":[{"name":"./example.rules","rules":[{"alert":"ExampleAlert","expr":"vector(1)"}]}]}}]'
    capabilities: Deep Insights
    categories: Monitoring
    certified: 'false'
    containerImage: quay.io/coreos/prometheus-operator:v0.37.0
    createdAt: 2019-09-04 12:00:00
    description: Manage the full lifecycle of configuring and managing Prometheus
      and Alertmanager servers.
    repository: https://github.com/coreos/prometheus-operator
    support: Frederic Branczyk
  name: prometheusoperator.0.37.0
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
    - description: A running Prometheus instance
      displayName: Prometheus
      kind: Prometheus
      name: prometheuses.monitoring.coreos.com
      resources:
      - kind: StatefulSet
        version: v1beta2
      - kind: Pod
        version: v1
      - kind: ConfigMap
        version: v1
      - kind: Service
        version: v1
      specDescriptors:
      - description: Desired number of Pods for the cluster
        displayName: Size
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: A selector for the ConfigMaps from which to load rule files
        displayName: Rule Config Map Selector
        path: ruleSelector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap
      - description: ServiceMonitors to be selected for target discovery
        displayName: Service Monitor Selector
        path: serviceMonitorSelector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:monitoring.coreos.com:v1:ServiceMonitor
      - description: The ServiceAccount to use to run the Prometheus pods
        displayName: Service Account
        path: serviceAccountName
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ServiceAccount
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      version: v1
    - description: A Prometheus Rule configures groups of sequentially evaluated recording
        and alerting rules.
      displayName: Prometheus Rule
      kind: PrometheusRule
      name: prometheusrules.monitoring.coreos.com
      version: v1
    - description: Configures prometheus to monitor a particular k8s service
      displayName: Service Monitor
      kind: ServiceMonitor
      name: servicemonitors.monitoring.coreos.com
      resources:
      - kind: Pod
        version: v1
      specDescriptors:
      - description: The label to use to retrieve the job name from
        displayName: Job Label
        path: jobLabel
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:label
      - description: A list of endpoints allowed as part of this ServiceMonitor
        displayName: Endpoints
        path: endpoints
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:endpointList
      version: v1
    - description: Configures prometheus to monitor a particular pod
      displayName: Pod Monitor
      kind: PodMonitor
      name: podmonitors.monitoring.coreos.com
      resources:
      - kind: Pod
        version: v1
      specDescriptors:
      - description: The label to use to retrieve the job name from
        displayName: Job Label
        path: jobLabel
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:label
      - description: A list of endpoints allowed as part of this PodMonitor
        displayName: Pod Metrics Endpoints
        path: podMetricsEndpoints
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:endpointList
      version: v1
    - description: Configures an Alertmanager for the namespace
      displayName: Alertmanager
      kind: Alertmanager
      name: alertmanagers.monitoring.coreos.com
      resources:
      - kind: StatefulSet
        version: v1beta2
      - kind: Pod
        version: v1
      - kind: Service
        version: v1
      specDescriptors:
      - description: Desired number of Pods for the cluster
        displayName: Size
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      version: v1
  description: 'The Prometheus Operator for Kubernetes provides easy monitoring definitions
    for Kubernetes services and deployment and management of Prometheus instances.


    Once installed, the Prometheus Operator provides the following features:


    * **Create/Destroy**: Easily launch a Prometheus instance for your Kubernetes
    namespace, a specific application or team easily using the Operator.


    * **Simple Configuration**: Configure the fundamentals of Prometheus like versions,
    persistence, retention policies, and replicas from a native Kubernetes resource.


    * **Target Services via Labels**: Automatically generate monitoring target configurations
    based on familiar Kubernetes label queries; no need to learn a Prometheus specific
    configuration language.


    ### Other Supported Features


    **High availability**


    Multiple instances are run across failure zones and data is replicated. This keeps
    your monitoring available during an outage, when you need it most.


    **Updates via automated operations**


    New Prometheus versions are deployed using a rolling update with no downtime,
    making it easy to stay up to date.


    **Handles the dynamic nature of containers**


    Alerting rules are attached to groups of containers instead of individual instances,
    which is ideal for the highly dynamic nature of container deployment.

    '
  displayName: Prometheus Operator
  icon:
  - base64data: PHN2ZyB3aWR0aD0iMjQ5MCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+PHBhdGggZD0iTTEyOC4wMDEuNjY3QzU3LjMxMS42NjcgMCA1Ny45NzEgMCAxMjguNjY0YzAgNzAuNjkgNTcuMzExIDEyNy45OTggMTI4LjAwMSAxMjcuOTk4UzI1NiAxOTkuMzU0IDI1NiAxMjguNjY0QzI1NiA1Ny45NyAxOTguNjg5LjY2NyAxMjguMDAxLjY2N3ptMCAyMzkuNTZjLTIwLjExMiAwLTM2LjQxOS0xMy40MzUtMzYuNDE5LTMwLjAwNGg3Mi44MzhjMCAxNi41NjYtMTYuMzA2IDMwLjAwNC0zNi40MTkgMzAuMDA0em02MC4xNTMtMzkuOTRINjcuODQyVjE3OC40N2gxMjAuMzE0djIxLjgxNmgtLjAwMnptLS40MzItMzMuMDQ1SDY4LjE4NWMtLjM5OC0uNDU4LS44MDQtLjkxLTEuMTg4LTEuMzc1LTEyLjMxNS0xNC45NTQtMTUuMjE2LTIyLjc2LTE4LjAzMi0zMC43MTYtLjA0OC0uMjYyIDE0LjkzMyAzLjA2IDI1LjU1NiA1LjQ1IDAgMCA1LjQ2NiAxLjI2NSAxMy40NTggMi43MjItNy42NzMtOC45OTQtMTIuMjMtMjAuNDI4LTEyLjIzLTMyLjExNiAwLTI1LjY1OCAxOS42OC00OC4wNzkgMTIuNTgtNjYuMjAxIDYuOTEuNTYyIDE0LjMgMTQuNTgzIDE0LjggMzYuNTA1IDcuMzQ2LTEwLjE1MiAxMC40Mi0yOC42OSAxMC40Mi00MC4wNTYgMC0xMS43NjkgNy43NTUtMjUuNDQgMTUuNTEyLTI1LjkwNy02LjkxNSAxMS4zOTYgMS43OSAyMS4xNjUgOS41MyA0NS40IDIuOTAyIDkuMTAzIDIuNTMyIDI0LjQyMyA0Ljc3MiAzNC4xMzguNzQ0LTIwLjE3OCA0LjIxMy00OS42MiAxNy4wMTQtNTkuNzg0LTUuNjQ3IDEyLjguODM2IDI4LjgxOCA1LjI3IDM2LjUxOCA3LjE1NCAxMi40MjQgMTEuNDkgMjEuODM2IDExLjQ5IDM5LjYzOCAwIDExLjkzNi00LjQwNyAyMy4xNzMtMTEuODQgMzEuOTU4IDguNDUyLTEuNTg2IDE0LjI4OS0zLjAxNiAxNC4yODktMy4wMTZsMjcuNDUtNS4zNTVjLjAwMi0uMDAyLTMuOTg3IDE2LjQwMS0xOS4zMTQgMzIuMTk3eiIgZmlsbD0iI0RBNEUzMSIvPjwvc3ZnPg==
    mediatype: image/svg+xml
  install:
    spec:
      deployments:
      - name: prometheus-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: prometheus-operator
          template:
            metadata:
              labels:
                k8s-app: prometheus-operator
            spec:
              containers:
              - args:
                - -namespaces=$(NAMESPACES)
                - -manage-crds=false
                - -logtostderr=true
                - --config-reloader-image=quay.io/coreos/configmap-reload@sha256:e2fd60ff0ae4500a75b80ebaa30e0e7deba9ad107833e8ca53f0047c42c5a057
                - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader@sha256:f1e57817dcfdb2c76e8a154b39180c6c8f3f16b990fe9cc41bee34cca0784a64
                env:
                - name: NAMESPACES
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/coreos/prometheus-operator@sha256:51c4b3180aa4cb819ae918da49776dba9a17e11d5a5d1eb22d878e1141aa23c9
                name: prometheus-operator
                ports:
                - containerPort: 8080
                  name: http
                resources:
                  limits:
                    cpu: 200m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 50Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
              nodeSelector:
                beta.kubernetes.io/os: linux
              serviceAccount: prometheus-operator
      permissions:
      - rules:
        - apiGroups:
          - ''
          resources:
          - nodes
          - services
          - endpoints
          - pods
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - get
        serviceAccountName: prometheus-k8s
      - rules:
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - alertmanagers
          - prometheuses
          - prometheuses/finalizers
          - alertmanagers/finalizers
          - servicemonitors
          - podmonitors
          - prometheusrules
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - pods
          verbs:
          - list
          - delete
        - apiGroups:
          - ''
          resources:
          - services
          - services/finalizers
          - endpoints
          verbs:
          - get
          - create
          - update
          - delete
        - apiGroups:
          - ''
          resources:
          - namespaces
          verbs:
          - get
        serviceAccountName: prometheus-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - prometheus
  - monitoring
  - tsdb
  - alerting
  - observability
  labels:
    alm-owner-prometheus: prometheusoperator
    alm-status-descriptors: prometheusoperator.0.37.0
  links:
  - name: Prometheus
    url: https://www.prometheus.io/
  - name: Documentation
    url: https://github.com/coreos/prometheus-operator/tree/master/Documentation
  - name: Prometheus Operator
    url: https://github.com/coreos/prometheus-operator
  maintainers:
  - email: openshift-operators@redhat.com
    name: Red Hat
  maturity: beta
  minKubeVersion: 1.11.0
  provider:
    name: Red Hat
  replaces: prometheusoperator.0.32.0
  selector:
    matchLabels:
      alm-owner-prometheus: prometheusoperator
  version: 0.37.0
