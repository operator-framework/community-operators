apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: pystol.v0.8.17
  namespace: pystol
  annotations:
    categories: Integration & Delivery
    certified: 'false'
    createdAt: '2020-06-11 10:00:00'
    description: The fault injection platform
    containerImage: 'quay.io/pystol/pystol-operator-stable:latest'
    support: pystol.org
    capabilities: Basic Install
    repository: 'https://github.com/pystol/pystol'
    alm-examples: |-
      [
        {
          "apiVersion": "pystol.org/v1alpha1",
          "kind": "PystolAction",
          "metadata": {
            "name": "pystol-action-pystol-actions-pingtest-8nviz"
          },
          "spec": {
            "action_state": "PystolActionCreating",
            "workflow_state": "PystolOperatorWaitingAction",
            "source": "",
            "namespace": "pystol",
            "collection": "actions",
            "role": "pingtest",
            "extra_vars": "{}",
            "action_stderr": "{}",
            "action_stdout": "{}"
          }
        }
      ]
spec:
  displayName: Pystol
  description: |
    **The open source, self-hosted and cloud-native fault injection platform**

    ## Introduction

    Pystol is a fault injection platform represented as a Software Product Line to analyze the effects caused by a wide spectrum of adverse conditions.
    In particular, this software platform is designed for running on top of cloud-native environments without the distinction of its usage in private or public clouds.
    The tool is modular enough to be extended as an Ansible collection enabling users to create their own actions without any dependency with the framework.

    Including fault injection actions in the production infrastructure allows companies to have consistent environments, improve applications dependability against
    unexpected failures, provide better user experience, and an overall improvement of the system's quality.
    Using pystol, we enable cloud-computing technologies together with development teams to rapidly create complex systems and deploy them continuously, at global scale.

    ## Documentation

    Please refer to the [official documentation](https://docs.pystol.org)
    website for any information related to the project.

    ## CI dashboard

    Pystol uses **GitHub actions**
    and **badges** to run all the CI
    tasks, the result of running these
    tasks is represented using badges.

    In particular we embrace the use of
    CI dashboard as information radiators.

    We created the [badgeboad project](https://badgeboard.pystol.org)
    to show the value of any set of badges as a dashboard.

    For more information you can open the
    [CI dashboard](https://badgeboard.pystol.org)
    directly or go to the
    [project page in GitHub](https://github.com/pystol/badgeboard).

    ## Container images

    All pystol official container images are hosted in Quay.io under
    the [Pystol organization](https://quay.io/organization/pystol).

    There you will find two repositories:

    * The Pystol [staging repository](https://quay.io/repository/pystol/pystol-operator-staging).
    Here you will find all the container images from the upstream end-to-end jobs from the GitHub
    Actions jobs.

    * The Pystol [stable repository](https://quay.io/repository/pystol/pystol-operator-stable).
    Here you will find all the container images from the stable branches.

    ## License

    Pystol is open source software
    licensed under the [Apache license](LICENSE).

    ## Requirements

    * When installing Pystol, create and use the **pystol** namespace.

    ## Accessing the native web user interface.
    * If the user wants to access the native Pystol's UI, create a route in the cluster pointing to the Pystol's service.

  maturity: alpha
  version: 0.8.17
  skips: []
  minKubeVersion: 1.12.0
  keywords:
    - Pystol
    - cloud native
    - kubernetes
    - open source
    - chaos engineering
    - fault injection
    - software product line
  maintainers:
    - name: Carlos Camacho
      email: carloscamachoucv@gmail.com
  provider:
    name: Pystol
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Pystol website
      url: https://www.pystol.org
    - name: Pystol GitHub organization
      url: https://github.com/pystol
    - name: Pystol source-code operator
      url: https://github.com/pystol/pystol
    - name: Pystol source-code Ansible galaxy collection
      url: https://github.com/pystol/pystol-galaxy
    - name: Pystol documentation
      url: https://docs.pystol.org
    - name: Pystol source-code documentation
      url: https://github.com/pystol/pystol-docs
    - name: Pystol CI dashboard
      url: https://badgeboard.pystol.org
    - name: Pystol source-code CI dasboard
      url: https://github.com/pystol/badgeboard
  icon:
    - base64data: >-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczpzb2RpcG9kaT0iaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGQiCiAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICB3aWR0aD0iNjUuNjE3OTk2bW0iCiAgIGhlaWdodD0iNDcuOTQ4MDAybW0iCiAgIHZpZXdCb3g9IjAgMCA2NS42MTc5OTYgNDcuOTQ4MDAxIgogICB2ZXJzaW9uPSIxLjEiCiAgIGlkPSJzdmc4IgogICBpbmtzY2FwZTp2ZXJzaW9uPSIwLjkyLjMgKDI0MDU1NDYsIDIwMTgtMDMtMTEpIgogICBzb2RpcG9kaTpkb2NuYW1lPSJpY29uX3B5c3RvbC5zdmciCiAgIGlua3NjYXBlOmV4cG9ydC1maWxlbmFtZT0iQzpcVXNlcnNcc3RyaXhcRHJvcGJveFxsb2dvLWZvci1weXN0b2xccHlzdG9sLnBuZyIKICAgaW5rc2NhcGU6ZXhwb3J0LXhkcGk9IjEwMC4wOTUiCiAgIGlua3NjYXBlOmV4cG9ydC15ZHBpPSIxMDAuMDk1Ij4KICA8ZGVmcwogICAgIGlkPSJkZWZzMiIgLz4KICA8c29kaXBvZGk6bmFtZWR2aWV3CiAgICAgaWQ9ImJhc2UiCiAgICAgcGFnZWNvbG9yPSIjZmZmZmZmIgogICAgIGJvcmRlcmNvbG9yPSIjNjY2NjY2IgogICAgIGJvcmRlcm9wYWNpdHk9IjEuMCIKICAgICBpbmtzY2FwZTpwYWdlb3BhY2l0eT0iMC4wIgogICAgIGlua3NjYXBlOnBhZ2VzaGFkb3c9IjIiCiAgICAgaW5rc2NhcGU6em9vbT0iMS45OTk5OTk5IgogICAgIGlua3NjYXBlOmN4PSI0MTAuNzY2MDYiCiAgICAgaW5rc2NhcGU6Y3k9IjQ0LjM5MTc0NyIKICAgICBpbmtzY2FwZTpkb2N1bWVudC11bml0cz0ibW0iCiAgICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ibGF5ZXIxIgogICAgIHNob3dncmlkPSJmYWxzZSIKICAgICBpbmtzY2FwZTpzbmFwLWJib3g9InRydWUiCiAgICAgaW5rc2NhcGU6YmJveC1wYXRocz0idHJ1ZSIKICAgICBpbmtzY2FwZTpiYm94LW5vZGVzPSJ0cnVlIgogICAgIGlua3NjYXBlOnNuYXAtYmJveC1lZGdlLW1pZHBvaW50cz0idHJ1ZSIKICAgICBpbmtzY2FwZTpzbmFwLWJib3gtbWlkcG9pbnRzPSJ0cnVlIgogICAgIGlua3NjYXBlOnNuYXAtaW50ZXJzZWN0aW9uLXBhdGhzPSJ0cnVlIgogICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMzg0MCIKICAgICBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSIxNTM3IgogICAgIGlua3NjYXBlOndpbmRvdy14PSItOCIKICAgICBpbmtzY2FwZTp3aW5kb3cteT0iLTgiCiAgICAgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMSIKICAgICBpbmtzY2FwZTpzbmFwLWdsb2JhbD0idHJ1ZSIKICAgICB1bml0cz0ibW0iIC8+CiAgPG1ldGFkYXRhCiAgICAgaWQ9Im1ldGFkYXRhNSI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgcmRmOmFib3V0PSIiPgogICAgICAgIDxkYzpmb3JtYXQ+aW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PgogICAgICAgIDxkYzp0eXBlCiAgICAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZSIgLz4KICAgICAgICA8ZGM6dGl0bGU+PC9kYzp0aXRsZT4KICAgICAgPC9jYzpXb3JrPgogICAgPC9yZGY6UkRGPgogIDwvbWV0YWRhdGE+CiAgPGcKICAgICBpbmtzY2FwZTpsYWJlbD0iQ2FwYSAxIgogICAgIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiCiAgICAgaWQ9ImxheWVyMSIKICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLC0yNDkuMDUyMDUpIj4KICAgIDxmbG93Um9vdAogICAgICAgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIKICAgICAgIGlkPSJmbG93Um9vdDE1MjciCiAgICAgICBzdHlsZT0iZm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZTo0MHB4O2xpbmUtaGVpZ2h0OjEuMjU7Zm9udC1mYW1pbHk6c2Fucy1zZXJpZjtsZXR0ZXItc3BhY2luZzowcHg7d29yZC1zcGFjaW5nOjBweDtmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOm5vbmUiCiAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLjg3MDcyMjY4LDAsMCwwLjg3MDcyMjY4LDAuMDQ3MjM1NTEsLTY4MC40NTU0OCkiPjxmbG93UmVnaW9uCiAgICAgICAgIGlkPSJmbG93UmVnaW9uMTUyOSI+PHJlY3QKICAgICAgICAgICBpZD0icmVjdDE1MzEiCiAgICAgICAgICAgd2lkdGg9IjIxNjkuNDAzNiIKICAgICAgICAgICBoZWlnaHQ9IjExODcuOTM5NSIKICAgICAgICAgICB4PSIxMDY2LjMxNyIKICAgICAgICAgICB5PSIyMzc1LjUxMjkiIC8+PC9mbG93UmVnaW9uPjxmbG93UGFyYQogICAgICAgICBpZD0iZmxvd1BhcmExNTMzIiAvPjwvZmxvd1Jvb3Q+ICAgIDxwYXRoCiAgICAgICBzdHlsZT0ib3BhY2l0eToxO3ZlY3Rvci1lZmZlY3Q6bm9uZTtmaWxsOiNjMjVkMDI7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjguNjQwNDI5NTtzdHJva2UtbGluZWNhcDpyb3VuZDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLWRhc2hvZmZzZXQ6MDtzdHJva2Utb3BhY2l0eToxIgogICAgICAgZD0ibSA4LjQwNzU2MDEsMjQ5LjA1MTg0IC01LjI1MzIxNCw5LjA5ODkyIEggMi4yMzU4MjYgTCAxLjE0NzIxM2UtNCwyNTUuOTgzNjcgMS4wNjYyODcsMjU4LjkyMzQ4IDEuMTQ3MjEzZS00LDI2MS44NjM0NyAyLjIzNTM3OCwyNTkuNjk2NCBoIDAuOTE5MTExMSBsIDUuMjUzMDcxLDkuMDk4NzkgSCAxOS44MDY0MyAyNC45MDgwNjggbCAtMTEuMzk4ODc3LDE5Ljc0MzY0IC0zLjI1Njg0Myw1LjY0MDg3IC0xLjYyODM0ODMsMi44MjAzNyBoIDMuMjU2Njk5MyAzLjI1Njk4IDE2LjI4MzkzMyBsIDguMTQyMDM0LC0xNC4xMDI0MyBoIDE2LjI4NDA0OCBsIDkuNzcwNTIsLTE2LjkyMjg4IC05Ljc3MDUyLC0xNi45MjI5MiBIIDQwLjQ2OTc4MiAzNi4zMDY4MDQgMTkuODA2NDMgWiBtIDEuMDU3NzM2NiwzLjY2NjUgaCAyLjExNTMwMDMgbCAxLjA1NzcxMiwxLjgzMTk5IC0xLjA1NzcxMiwxLjgzMTk4IEggOS40NjUyOTY3IGwgLTEuMDU3NzM2NiwtMS44MzE5OCB6IG0gMTEuNjU1NTM1MywxLjk3NDQyIGggMi40NDI2NTUgMi40NDI1MzcgOC4yMzE4MSAxMC45NzUzMzEgNy4zNzc2OCBsIDYuNTEzNTQ3LDExLjI4MiAtNi41MTM1NDcsMTEuMjgxOTYgSCA0MS4zMjAxMDcgMzkuNTYzNjQ2IDM2LjMwNjk0MiBsIC04LjE0MjE3MywxNC4xMDI0MyBIIDE4LjM5NDUyIGwgMTEuMzk4NzQxLC0xOS43NDMxOSAxLjYyODQ5NCwtMi44MjA3NyBoIDEzLjAyNzA4NSAxLjYyODQ5MiAxLjYyODM1IGwgMS42Mjg0OTMsLTIuODIwNDMgLTEuNjI4NDkzLC0yLjgyMDQ5IGggLTEuNjI4MzUgLTAuODY0MTY3IC0xMC45NzUzMzEgLTguMjMxODEgLTIuNDQyNTM3IC0yLjQ0MjY1NSBsIC0yLjQ0MjUzOCwtNC4yMzA3OSB6IG0gLTExLjY1NTUzNTMsNi43NzE5NyBoIDIuMTE1MzAwMyBsIDEuMDU3NzEyLDEuODMxOTMgLTEuMDU3NzEyLDEuODMxODEgSCA5LjQ2NTI5NjcgbCAtMS4wNTc3MzY2LC0xLjgzMTgxIHoiCiAgICAgICBpZD0icGF0aDE4NjUtMC00LTQtMy01IgogICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz4KICA8L2c+Cjwvc3ZnPgo=
      mediatype: image/svg+xml
  customresourcedefinitions:
    owned:
      - name: pystolactions.pystol.org
        displayName: PystolAction
        kind: PystolAction
        version: v1alpha1
        description: Pystol Action
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors:
          - path: namespace
            description: Namespace
            displayName: Namespace
            x-descriptors: []
          - path: collection
            description: Collection
            displayName: Collection
            x-descriptors: []
          - path: role
            description: Role
            displayName: Role
            x-descriptors: []
          - path: source
            description: Source
            displayName: Source
            x-descriptors: []
          - path: extra_vars
            description: Extra Vars
            displayName: Extra Vars
            x-descriptors: []
          - path: action_state
            description: Action State
            displayName: Action State
            x-descriptors: []
          - path: workflow_state
            description: Workflow State
            displayName: Workflow State
            x-descriptors: []
          - path: action_stdout
            description: Action Stdout
            displayName: Action Stdout
            x-descriptors: []
          - path: action_stderr
            description: Action Stderr
            displayName: Action Stderr
            x-descriptors: []
        statusDescriptors: []
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - '*'
          resources:
          - clusterroles
          - clusterrolebindings
          verbs:
          - '*'
        - apiGroups:
          - '*'
          resources:
          - namespaces
          - services
          - serviceaccounts
          - pods
          - deployments
          - daemonsets
          - statefulsets
          - replicasets
          - secrets
          - events
          - endpoints
          - configmaps
          - jobs
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - patch
          - delete
          - deletecollection
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - update
          - patch
          - delete
          - deletecollection
        - apiGroups:
          - pystol.org
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: pystol
      deployments:
        - name: pystol-controller
          spec:
            selector:
              matchLabels:
                name: pystol-controller
                component: pystol-controller
            replicas: 1
            template:
              metadata:
                labels:
                  name: pystol-controller
                  component: pystol-controller
              spec:
                containers:
                  - name: pystol-controller
                    image: 'quay.io/pystol/pystol-operator-stable:latest'
                    imagePullPolicy: Always
                    command:
                      - pystol
                    args:
                      - listen
                serviceAccountName: pystol
        - name: pystol-ui
          spec:
            selector:
              matchLabels:
                name: pystol-ui
                component: pystol-ui
            replicas: 1
            template:
              metadata:
                labels:
                  name: pystol-ui
                  component: pystol-ui
              spec:
                containers:
                  - name: pystol-ui
                    image: 'quay.io/pystol/pystol-operator-stable:latest'
                    ports:
                      - containerPort: 3000
                    command:
                      - flask
                    args:
                      - run
                    imagePullPolicy: Always
                serviceAccountName: pystol
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: false
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: false
