apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "redhatcop.redhat.io/v1alpha1",
          "kind": "ResourceLocker",
          "metadata": {
            "name": "combined"
          },
          "spec": {
            "patches": [
              {
                "id": "patch1",
                "patchTemplate": "metadata:\n  annotations:\n    {{ (index . 0).metadata.name }}: {{ (index . 1).metadata.name }}\n",
                "patchType": "application/strategic-merge-patch+json",
                "sourceObjectRefs": [
                  {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "name": "resource-locker-test"
                  },
                  {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "name": "default",
                    "namespace": "resource-locker-test"
                  }
                ],
                "targetObjectRef": {
                  "apiVersion": "v1",
                  "kind": "ServiceAccount",
                  "name": "test",
                  "namespace": "resource-locker-test"
                }
              },
              {
                "id": "patch2",
                "patchTemplate": "metadata:\n  annotations:\n    {{ (index . 0) }}: {{ (index . 1) }}\n",
                "patchType": "application/strategic-merge-patch+json",
                "sourceObjectRefs": [
                  {
                    "apiVersion": "v1",
                    "fieldPath": "$.metadata.uid",
                    "kind": "Namespace",
                    "name": "resource-locker-test"
                  },
                  {
                    "apiVersion": "v1",
                    "fieldPath": "$.metadata.uid",
                    "kind": "ServiceAccount",
                    "name": "default",
                    "namespace": "resource-locker-test"
                  }
                ],
                "targetObjectRef": {
                  "apiVersion": "v1",
                  "kind": "ServiceAccount",
                  "name": "test",
                  "namespace": "resource-locker-test"
                }
              }
            ],
            "resources": [
              {
                "object": {
                  "apiVersion": "networking.k8s.io/v1",
                  "kind": "NetworkPolicy",
                  "metadata": {
                    "name": "allow-from-same-namespace",
                    "namespace": "resource-locker-test"
                  },
                  "spec": {
                    "ingress": [
                      {
                        "from": [
                          {
                            "podSelector": {}
                          }
                        ]
                      }
                    ],
                    "podSelector": {}
                  }
                }
              },
              {
                "object": {
                  "apiVersion": "networking.k8s.io/v1",
                  "kind": "NetworkPolicy",
                  "metadata": {
                    "name": "allow-from-default-namespace",
                    "namespace": "resource-locker-test"
                  },
                  "spec": {
                    "ingress": [
                      {
                        "from": [
                          {
                            "namespaceSelector": {
                              "matchLabels": {
                                "name": "default"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "podSelector": {}
                  }
                }
              }
            ],
            "serviceAccountRef": {
              "name": "default"
            }
          }
        }
      ]
    capabilities: Deep Insights
    categories: Security
    certified: "false"
    containerImage: quay.io/redhat-cop/resource-locker-operator:latest
    createdAt: 11/14/2019
    description: This operator provides a facility to lock resources and / or patches
      into the state described by its custom resource preventing any drifts.
    repository: https://github.com/redhat-cop/resource-locker-operator
    support: Best Effort
  name: resource-locker-operator.v0.1.4
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ResourceLocker is the Schema for the resourcelockers API
      kind: ResourceLocker
      name: resourcelockers.redhatcop.redhat.io
      version: v1alpha1
  description: |
    The resource locker operator allows you to specify a set of configurations that the operator will "keep in place" (lock) preventing any drifts.
    Two types of configurations may be specified:

    * Resources. This will instruct the operator to create and enforce the specified resource. In this case the operator "owns" the created resources.
    * Patches to resources. This will instruct the operator to patch- and enforce the change on- a pre-existing resource. In this case the operator does not "own" the resource.

    Locked resources are defined with the `ResourceLocker` CRD. Here is the high-level structure of this CRD:

    ```yaml
    apiVersion: redhatcop.redhat.io/v1alpha1
    kind: ResourceLocker
    metadata:
      name: test-simple-resource
    spec:
      resources:
      - object:
          apiVersion: v1
      ...
      patches:
      - targetObjectRef:
        ...
        patchTemplate: |
          metadata:
            annotations:
              ciao: hello
      ...
      serviceAccountRef:
        name: default
    ```

    It contains:

    * `resources`: representing an array of resources
    * `patches`: representing an array of patches
    * `serviceAccountRef`: a reference to a service account defined in the same namespace as the ResourceLocker CR, that will be used to create the resources and apply the patches. If not specified the service account will be defaulted to: `default`

    For each ResourceLocker a manager is dynamically allocated. For each resource and patch a controller with the needed watches is created and associated with the previously created manager.

    **Note**: creating a `ResourceLocker` CR will not work without due preparation (of the service account in particular). Follow these [instructions](https://github.com/redhat-cop/resource-locker-operator/blob/master/EXAMPLES.md) for a step by step walkthrough of the needed prerequisites to make this operator work.
  displayName: Resource Locker Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - redhatcop.redhat.io
          resources:
          - resourcelockers
          - resourcelockers/status
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          - secrets
          verbs:
          - get
          - list
          - watch
        serviceAccountName: resource-locker-operator
      deployments:
      - name: resource-locker-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: resource-locker-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: resource-locker-operator
            spec:
              containers:
              - command:
                - resource-locker-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: OPERATOR_NAME
                  value: resource-locker-operator
                image: quay.io/redhat-cop/resource-locker-operator:v0.1.4
                imagePullPolicy: Always
                name: resource-locker-operator
                resources: {}
              serviceAccountName: resource-locker-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - pods
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - services
          - services/finalizers
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
          - list
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - resource-locker-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        serviceAccountName: resource-locker-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - resource_management
  - enforcing
  - patches
  links:
  - name: repository
    url: https://github.com/redhat-cop/resource-locker-operator
  - name: conatinerImage
    url: https://quay.io/redhat-cop/resource-locker-operator:latest
  maintainers:
  - email: rspazzol@redhat.com
    name: Raffaele Spazzoli
  maturity: alpha
  provider:
    name: Red Hat Community of Practice
  replaces: resource-locker-operator.v0.1.3
  version: 0.1.4
