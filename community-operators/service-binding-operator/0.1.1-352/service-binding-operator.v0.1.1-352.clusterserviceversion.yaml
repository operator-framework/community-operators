apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "apps.openshift.io/v1alpha1",
          "kind": "ServiceBindingRequest",
          "metadata": {
            "name": "example-servicebindingrequest"
          },
          "spec": {
            "applicationSelector": {
              "group": "apps",
              "resource": "deployments",
              "resourceRef": "nodejs-rest-http-crud",
              "version": "v1"
            },
            "backingServiceSelector": {
              "group": "postgresql.example.dev",
              "kind": "Database",
              "resourceRef": "pg-instance",
              "version": "v1alpha1"
            },
            "mountPathPrefix": "/var/credentials"
          }
        }
      ]
    capabilities: Basic Install
    categories: Developer Tools, OpenShift Optional, Integration & Delivery
    containerImage: quay.io/redhat-developer/app-binding-operator:2421e40
    createdAt: 2020-07-15T13:23:46Z
    description: An operator to support binding capabilities between imported apps
      and operator backed services
    repository: https://github.com/redhat-developer/service-binding-operator
    support: Red Hat, Inc
  name: service-binding-operator.v0.1.1-352
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ServiceBindingRequest expresses intent to bind an operator-backed
        service with an application workload.
      displayName: Service Binding Request
      kind: ServiceBindingRequest
      name: servicebindingrequests.apps.openshift.io
      version: v1alpha1
  description: " The Service Binding Operator enables application developers to more
    easily bind applications together with operator managed backing services such
    as databases, without having to perform manual configuration of secrets, configmaps,
    etc. The Service Binding Operator accomplishes this through automatically collecting
    binding information and sharing with an application to bind it with operator managed
    backing services. The binding is performed through a new custom resource called
    a ServiceBindingRequest.\n### Example\nA set of examples, each of which illustrates
    a usage scenario for the Service Binding Operator, is being developed in parallel
    with the Operator. Each example includes documentation and can be run either through
    the OpenShift web console or command line client. The examples are available [here](https://github.com/redhat-developer/service-binding-operator/blob/master/README.md#example-scenarios)\n###
    Documentation\nRefer to the [documentation](https://github.com/redhat-developer/service-binding-operator/blob/master/README.md)\n###
    \ Help\nRaise a ticket for bugs, features and enhancement [here](https://github.com/redhat-developer/service-binding-operator/)\n###
    Licence\nService Binding Operator is licensed under [Apache License 2.0](https://github.com/redhat-developer/service-binding-operator/blob/master/LICENSE) "
  displayName: Service Binding Operator
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      deployments:
      - name: service-binding-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: service-binding-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: service-binding-operator
            spec:
              containers:
              - command:
                - service-binding-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: service-binding-operator
                image: quay.io/redhat-developer/app-binding-operator:2421e40
                imagePullPolicy: Always
                name: service-binding-operator
                resources: {}
              serviceAccountName: service-binding-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - service-binding-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - apps.openshift.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - serving.knative.dev
          resources:
          - services
          verbs:
          - '*'
        serviceAccountName: service-binding-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - ""
  links:
  - name: Blog post
    url: https://developers.redhat.com/blog/2019/12/19/introducing-the-service-binding-operator
  maintainers:
  - email: service-binding-support@redhat.com
    name: Openshift Application Services
  maturity: alpha
  provider:
    name: Red Hat, Inc.
  version: 0.1.1-352
  replaces: service-binding-operator.v0.1.1-282
