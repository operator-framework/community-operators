---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: snapscheduler.v1.1.1
  namespace: placeholder
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "snapscheduler.backube/v1",
          "kind": "SnapshotSchedule",
          "metadata": {
            "name": "daily"
          },
          "spec": {
            "retention": {
              "maxCount": 7
            },
            "schedule": "0 0 * * *"
          }
        }
      ]
    categories: Storage
    certified: 'false'
    createdAt: 'Fri Apr 24, 2020'
    description: >-
      The SnapScheduler operator takes snapshots of Kubernetes CSI-based
      persistent volumes according to user-supplied schedules.
    containerImage: 'quay.io/backube/snapscheduler:1.1.1'
    support: 'https://gitter.im/backube/snapscheduler'
    capabilities: Full Lifecycle
    repository: 'https://github.com/backube/snapscheduler'
spec:
  displayName: SnapScheduler
  description: |-
    ## About this operator

    The SnapScheduler operator takes snapshots of CSI-based PersistentVolumes
    according to a configurable
    [Cron-like](https://en.wikipedia.org/wiki/Cron#Overview) schedule. The
    schedules include configurable retention policies for snapshots as well as
    selectors to limit the volumes that are snapshotted. An example schedule
    could be:

    > *Snapshot **all volumes** in a namespace **daily at midnight**, retaining
    > the most recent **7** snapshots for each volume.*

    Multiple schedules can be combined to provide more elaborate protection
    schemes. For example, a given volume (or collection of volumes) could be
    protected with:

    - 6 hourly snapshots
    - 7 daily snapshots
    - 4 weekly snapshots
    - 12 monthly snapshots

    ### How it works

    The operator watches for `SnapshotSchedule` CRs in each namespace. When the
    current time matches the schedule's cronspec, the operator creates a
    `VolumeSnapshot` object for each `PersistentVolumeClaim` in the namespace
    (or subset thereof if a label selector is provided). The `VolumeSnapshot`
    objects are named according to the template:
    `<pvcname>-<schedulename>-<timestamp>`. After creating the new snapshots,
    the oldest snapshots are removed if necessary, according to the retention
    policy of the schedule.

    Please see the [full
    documentation](https://backube.github.io/snapscheduler/) for more
    information.

    ## Requirements

    - OpenShift >= 4.4 (Kubernetes >= 1.17)
    - CSI-based storage driver that supports snapshots (i.e. has the
      `CREATE_DELETE_SNAPSHOT` capability)

    ## Examples

    The schedule for snapshotting is controlled by the
    `snapshotschedules.snapscheduler.backube` Custom Resource. This is a
    namespaced resource that applies only to the PersistentVolumeClaims in its
    namespace.

    Below is a simple example that keeps 7 daily (taken at midnight) snapshots
    of all PVCs in a given namespace:

    ```yaml
    ---
    apiVersion: snapscheduler.backube/v1
    kind: SnapshotSchedule
    metadata:
      name: daily
    spec:
      retention:
        maxCount: 7
      schedule: "0 0 * * *"
    ```

    See the [usage
    documentation](https://backube.github.io/snapscheduler/usage.html) for full
    details, including how to:

    - add label selectors to restrict which PVCs this schedule applies to
    - set the VolumeSnapshotClass used by the schedule
    - apply custom labels to the automatically created VolumeSnapshot objects
  maturity: stable
  version: 1.1.1
  # replaces: snapscheduler.v0.0.0
  minKubeVersion: 1.17.0
  keywords:
    - csi
    - snapshot
    - storage
    - scheduler
  maintainers:
    - name: John Strunk
      email: jstrunk@redhat.com
  provider:
    name: Backube
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Documentation
      url: 'https://backube.github.io/snapscheduler/'
    - name: Source
      url: 'https://github.com/backube/snapscheduler'
    - name: Blog
      url: 'https://backube.github.io/'
    - name: Support/discussion on gitter.im
      url: 'https://gitter.im/backube/snapscheduler'
  icon:
    - base64data: 
      mediatype: image/svg+xml
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - name: snapshotschedules.snapscheduler.backube
        displayName: SnapshotSchedule
        group: snapscheduler.backube
        kind: SnapshotSchedule
        version: v1
        description: >-
          A SnapshotSchedule defines a frequency, retention policy, and PVC
          selection criteria for automated volume snapshots.
        specDescriptors:
          # https://github.com/openshift/console/blob/master/frontend/packages/operator-lifecycle-manager/src/components/descriptors/reference/reference.md
          - displayName: Schedule
            description: Cronspec representing the schedule for snapshots
            path: schedule
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - displayName: Maximum snapshots
            description: The maximum number of snapshots to retain per PVC
            path: retention.maxCount
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:number'
          - displayName: PVC Selector
            description: >-
              A filter to select the PVCs to snapshot with this schedule
            path: claimSelector
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:selector:core:v1:PersistentVolumeClaim'
          - displayName: VolumeSnapshotClass name
            description: The name of the VolumeSnapshotClass to use
            path: snapshotTemplate.snapshotClassName
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:SnapshotTemplate'
              - 'urn:alm:descriptor:com.tectonic.ui:text'
        statusDescriptors:
          - displayName: Next Snapshot
            description: The time of the next scheduled snapshot
            path: nextSnapshotTime
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - displayName: Last Snapshot
            description: The time of the last scheduled snapshot
            path: lastSnapshotTime
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - displayName: Conditions
            description: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - services
                - services/finalizers
                - configmaps
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - snapscheduler
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - replicasets
                - deployments
              verbs:
                - get
            - apiGroups:
                - snapscheduler.backube
              resources:
                - '*'
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - snapshot.storage.k8s.io
              resources:
                - volumesnapshots
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - persistentvolumeclaims
              verbs:
                - get
                - list
                - watch
          serviceAccountName: snapscheduler
      deployments:
        - name: snapscheduler
          spec:
            replicas: 2
            selector:
              matchLabels:
                name: snapscheduler
            strategy: {}
            template:
              metadata:
                labels:
                  name: snapscheduler
              spec:
                containers:
                  - command:
                      - snapscheduler
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: snapscheduler
                    image: quay.io/backube/snapscheduler:1.1.1
                    imagePullPolicy: IfNotPresent
                    name: snapscheduler
                    resources:
                      requests:
                        cpu: 10m
                        memory: 100Mi
                nodeSelector:
                  kubernetes.io/arch: amd64
                  kubernetes.io/os: linux
                serviceAccountName: snapscheduler
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
