apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.helm.k8s.io/v1alpha1",
          "kind": "SpinnakerOperator",
          "metadata": {
            "name": "example-spinnakeroperator"
          },
          "spec": {
            "azs": {
              "enabled": false
            },
            "dockerRegistries": [
              {
                "address": "index.docker.io",
                "name": "dockerhub",
                "repositories": [
                  "library/alpine",
                  "library/ubuntu",
                  "library/centos",
                  "library/nginx"
                ]
              }
            ],
            "gcs": {
              "bucket": "\u003cGCS-BUCKET-NAME\u003e",
              "enabled": false,
              "jsonKey": "\u003cINSERT CLOUD STORAGE JSON HERE\u003e",
              "project": "my-project-name",
              "secretName": null
            },
            "halyard": {
              "additionalConfigMaps": {
                "create": false,
                "data": {}
              },
              "additionalInstallParameters": [],
              "additionalProfileConfigMaps": {
                "data": {}
              },
              "additionalScripts": {
                "configMapKey": "config.sh",
                "configMapName": "my-halyard-config",
                "create": false,
                "data": {},
                "enabled": false
              },
              "additionalSecrets": {
                "create": false,
                "data": {}
              },
              "additionalServiceSettings": {
                "clouddriver.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-clouddriver:6.10.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "deck.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-deck:3.2.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "echo.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-echo:2.13.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "fiat.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-fiat:1.12.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "front50.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-front50:0.24.0",
                  "env": {
                    "AWS_ACCESS_KEY": "spinnakeradmin",
                    "AWS_SECRET_ACCESS_KEY": "spinnakeradmin"
                  },
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "gate.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-gate:1.17.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "igor.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-igor:1.11.1",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "kayenta.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-kayenta:0.16.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "minio.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-minio:RELEASE.2019-09-18T21-55-05Z",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "orca.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-orca:2.15.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "redis.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-redis:4.0.14",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                },
                "rosco.yml": {
                  "artifactId": "docker.io/devopsmx/ubi8-oes-rosco:0.20.0",
                  "kubernetes": {
                    "podAnnotations": {
                      "iam.amazonaws.com/role": "\u003crole_arn\u003e"
                    }
                  }
                }
              },
              "bom": null,
              "customCerts": {
                "enabled": false,
                "secretName": "custom-cacerts"
              },
              "image": {
                "pullSecrets": [],
                "repository": "docker.io/devopsmx/ubi8-oes-operator-halyard",
                "tag": "1.21.2"
              },
              "persistence": {
                "enabled": true
              },
              "resources": {},
              "serviceConfigs": {},
              "spinnakerVersion": "1.21.2"
            },
            "ingress": {
              "enabled": false
            },
            "ingressGate": {
              "enabled": false
            },
            "kubeConfig": {
              "checkPermissionsOnStartup": true,
              "contexts": [
                "default"
              ],
              "deploymentContext": "default",
              "enabled": false,
              "liveManifestCalls": false,
              "omittedNameSpaces": [
                "kube-system",
                "kube-public"
              ],
              "onlySpinnakerManaged": {
                "enabled": false
              }
            },
            "minio": {
              "accessKey": "spinnakeradmin",
              "defaultBucket": {
                "enabled": true,
                "name": "spinnaker"
              },
              "enabled": true,
              "image": {
                "tag": "RELEASE.2019-09-18T21-55-05Z"
              },
              "nodeSelector": {},
              "secretKey": "spinnakeradmin",
              "service": {
                "type": "ClusterIP"
              }
            },
            "nodeSelector": {},
            "rbac": {
              "create": true,
              "pspEnabled": false
            },
            "redis": {
              "cluster": {
                "enabled": false
              },
              "enabled": true,
              "external": {
                "host": "\u003cEXTERNAL-REDIS-HOST-NAME\u003e",
                "port": 6379
              },
              "nodeSelector": {},
              "password": "password"
            },
            "s3": {
              "bucket": "\u003cS3-BUCKET-NAME\u003e",
              "enabled": false,
              "extraArgs": []
            },
            "securityContext": {
              "fsGroup": null,
              "runAsUser": null
            },
            "serviceAccount": {
              "create": true,
              "halyardName": null,
              "serviceAccountAnnotations": {},
              "spinnakerName": null
            },
            "spinnakerFeatureFlags": [
              "artifacts"
            ],
            "tolerations": []
          }
        }
      ]
    capabilities: Basic Install
    categories: Integration & Delivery
    certified: 'false'
    containerImage: docker.io/devopsmx/spinnaker-operator:1.21.2
    createdAt: 2020-09-14 19:49:35
    description: Spinnaker is an Open Source, multi-cloud Continuous delivery platform
      to perform software releases with high velocity and confidence...
    support: OpsMx
  name: spinnaker-operator.v1.21.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: SpinnakerOperator
      displayName: spinnakeroperator
      kind: SpinnakerOperator
      name: spinnakeroperators.charts.helm.k8s.io
      version: v1alpha1
  description: "## Spinnaker as an Operator\nSpinnaker Operator allows users to spin\
    \ up Spinnaker to manage continuous deployments. With the help of Spinnaker Operator,\
    \ users will have the convenience and confidence of simple but powerful approach\
    \ to execute CI/CD process with high velocity while managing risk and improving\
    \ quality of deployments to multiple cloud environments. \n## What is Spinnaker?\n\
    * Spinnaker is an Open Source, multi-cloud Continuous delivery platform to perform\
    \ software releases with high velocity and confidence.\n* Spinnaker helps user\
    \ to create deployment pipelines that run integration and system tests, spin up\
    \ and down server groups, and monitor your rollouts.\n### List of Features\n*\
    \ Multi-Cloud Deployment - Deploy your VM or Containers or functions across most\
    \ public and private cloud including AWS EC2, ECS, EKS, Lambda, Kubernetes, Google\
    \ Compute Engine, Google Kubernetes Engine, Google App Engine, Microsoft Azure,\
    \ OpenStack, with Oracle Bare Metal and DC/OS.\n* Automated Releases with Pipelines\
    \ - Create deployment pipelines that run integration and system tests, spin up\
    \ and down server groups, and monitor your rollouts. Trigger pipelines via git\
    \ events, Jenkins, Travis CI, Docker, CRON, or other Spinnaker pipelines\n* Pipeline-as-code\
    \ - Manage the pipeline as code (JSON) or interact with pipeline using API or\
    \ UI.\n* Safe Deployment Strategies - Deploy using Canary or Red/Black (Blue/Green)\
    \ or Rolling update and enable automated Canary analysis to ensure safety of the\
    \ new updates before full-rollout to production\n* 1-click Rollback - Rolling\
    \ back new deployments is never been easier with a 1-click rollback of images/configurations.\n\
    * See more spinnaker.io or docs.opsmx.com\n"
  displayName: Operator for Spinnaker
  icon:
  - base64data: "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"
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - spinnaker-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - helm.operator-sdk
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - charts.helm.k8s.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        serviceAccountName: spinnaker-operator
      deployments:
      - name: spinnaker-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: spinnaker-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: spinnaker-operator
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: spinnaker-operator
                image: docker.io/devopsmx/spinnaker-operator:1.21.2
                imagePullPolicy: Always
                name: spinnaker-operator
                resources: {}
              serviceAccountName: spinnaker-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Spinnaker
  links:
  - name: Spinnaker
    url: https://www.spinnaker.io/
  - name: OpsMx
    url: http://opsmx.com/
  - name: Documentation
    url: http://docs.opsmx.com/
  - name: Blog
    url: http://blog.opsmx.com/
  maintainers:
  - email: info@opsmx.com
    name: OpsMx
  maturity: alpha
  provider:
    name: OpsMx
  replaces: spinnaker-operator.v1.20.3
  version: 1.21.2
