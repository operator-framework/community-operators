apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n  \
      \    \"kind\":\"Kafka\",\n      \"metadata\":{\n        \"name\":\"my-cluster\"\
      \n      },\n      \"spec\":{\n        \"kafka\":{\n            \"version\":\"\
      2.3.0\",\n            \"replicas\":3,\n            \"listeners\":{\n       \
      \       \"plain\":{\n               },\n              \"tls\":{\n          \
      \     }\n            },\n            \"config\":{\n              \"offsets.topic.replication.factor\"\
      :3,\n              \"transaction.state.log.replication.factor\":3,\n       \
      \       \"transaction.state.log.min.isr\":2,\n              \"log.message.format.version\"\
      :\"2.3\"\n            },\n            \"storage\":{\n              \"type\"\
      :\"ephemeral\"\n            }\n        },\n        \"zookeeper\":{\n       \
      \     \"replicas\":3,\n            \"storage\":{\n              \"type\":\"\
      ephemeral\"\n            }\n        },\n        \"entityOperator\":{\n     \
      \       \"topicOperator\":{\n             },\n            \"userOperator\":{\n\
      \             }\n        }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\"\
      ,\n      \"kind\":\"KafkaConnect\",\n      \"metadata\":{\n        \"name\"\
      :\"my-connect-cluster\"\n      },\n      \"spec\":{\n        \"version\":\"\
      2.3.0\",\n        \"replicas\":1,\n        \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\"\
      ,\n        \"tls\":{\n            \"trustedCertificates\":[\n              {\n\
      \                  \"secretName\":\"my-cluster-cluster-ca-cert\",\n        \
      \          \"certificate\":\"ca.crt\"\n              }\n            ]\n    \
      \    }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\"\
      ,\n      \"kind\":\"KafkaConnectS2I\",\n      \"metadata\":{\n        \"name\"\
      :\"my-connect-cluster\"\n      },\n      \"spec\":{\n        \"version\":\"\
      2.3.0\",\n        \"replicas\":1,\n        \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\"\
      ,\n        \"tls\":{\n            \"trustedCertificates\":[\n              {\n\
      \                  \"secretName\":\"my-cluster-cluster-ca-cert\",\n        \
      \          \"certificate\":\"ca.crt\"\n              }\n            ]\n    \
      \    }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\"\
      ,\n      \"kind\":\"KafkaMirrorMaker\",\n      \"metadata\":{\n        \"name\"\
      :\"my-mirror-maker\"\n      },\n      \"spec\":{\n        \"version\":\"2.3.0\"\
      ,\n        \"replicas\":1,\n        \"consumer\":{\n            \"bootstrapServers\"\
      :\"my-source-cluster-kafka-bootstrap:9092\",\n            \"groupId\":\"my-source-group-id\"\
      \n        },\n        \"producer\":{\n            \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\
      \n        },\n        \"whitelist\":\".*\"\n      }\n  },\n  {\n      \"apiVersion\"\
      :\"kafka.strimzi.io/v1alpha1\",\n      \"kind\":\"KafkaBridge\",\n      \"metadata\"\
      :{\n        \"name\":\"my-bridge\"\n      },\n      \"spec\":{\n        \"replicas\"\
      :1,\n        \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n   \
      \     \"http\":{\n            \"port\":8080\n        }\n      }\n  },\n  {\n\
      \      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"KafkaTopic\"\
      ,\n      \"metadata\":{\n        \"name\":\"my-topic\",\n        \"labels\"\
      :{\n            \"strimzi.io/cluster\":\"my-cluster\"\n        }\n      },\n\
      \      \"spec\":{\n        \"partitions\":10,\n        \"replicas\":3,\n   \
      \     \"config\":{\n            \"retention.ms\":604800000,\n            \"\
      segment.bytes\":1073741824\n        }\n      }\n  },\n  {\n      \"apiVersion\"\
      :\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"KafkaUser\",\n      \"metadata\"\
      :{\n        \"name\":\"my-user\",\n        \"labels\":{\n            \"strimzi.io/cluster\"\
      :\"my-cluster\"\n        }\n      },\n      \"spec\":{\n        \"authentication\"\
      :{\n            \"type\":\"tls\"\n        },\n        \"authorization\":{\n\
      \            \"type\":\"simple\",\n            \"acls\":[\n              {\n\
      \                  \"resource\":{\n                    \"type\":\"topic\",\n\
      \                    \"name\":\"my-topic\",\n                    \"patternType\"\
      :\"literal\"\n                  },\n                  \"operation\":\"Read\"\
      ,\n                  \"host\":\"*\"\n              },\n              {\n   \
      \               \"resource\":{\n                    \"type\":\"topic\",\n  \
      \                  \"name\":\"my-topic\",\n                    \"patternType\"\
      :\"literal\"\n                  },\n                  \"operation\":\"Describe\"\
      ,\n                  \"host\":\"*\"\n              },\n              {\n   \
      \               \"resource\":{\n                    \"type\":\"group\",\n  \
      \                  \"name\":\"my-group\",\n                    \"patternType\"\
      :\"literal\"\n                  },\n                  \"operation\":\"Read\"\
      ,\n                  \"host\":\"*\"\n              },\n              {\n   \
      \               \"resource\":{\n                    \"type\":\"topic\",\n  \
      \                  \"name\":\"my-topic\",\n                    \"patternType\"\
      :\"literal\"\n                  },\n                  \"operation\":\"Write\"\
      ,\n                  \"host\":\"*\"\n              },\n              {\n   \
      \               \"resource\":{\n                    \"type\":\"topic\",\n  \
      \                  \"name\":\"my-topic\",\n                    \"patternType\"\
      :\"literal\"\n                  },\n                  \"operation\":\"Create\"\
      ,\n                  \"host\":\"*\"\n              },\n              {\n   \
      \               \"resource\":{\n                    \"type\":\"topic\",\n  \
      \                  \"name\":\"my-topic\",\n                    \"patternType\"\
      :\"literal\"\n                  },\n                  \"operation\":\"Describe\"\
      ,\n                  \"host\":\"*\"\n              }\n            ]\n      \
      \  }\n      }\n  }\n]"
    capabilities: Deep Insights
    categories: Streaming & Messaging
    certified: 'false'
    containerImage: docker.io/strimzi/operator:0.14.0
    createdAt: 2019-10-08 11:00:00
    description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
      or OpenShift in various deployment configurations.
    repository: https://github.com/strimzi/strimzi-kafka-operator
    support: Strimzi
  name: strimzi-cluster-operator.v0.14.0
  namespace: placeholder
spec:
  MinKubeVersion: 1.11.0
  customresourcedefinitions:
    owned:
    - description: Represents a Kafka cluster
      displayName: Kafka
      kind: Kafka
      name: kafkas.kafka.strimzi.io
      resources:
      - kind: Route
        name: ''
        version: route.openshift.io/v1
      - kind: Service
        name: ''
        version: v1
      - kind: StatefulSet
        name: ''
        version: v1
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: Secret
        name: ''
        version: v1
      specDescriptors:
      - description: Kafka version
        displayName: Version
        path: kafka.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The desired number of Kafka brokers.
        displayName: Kafka Brokers
        path: kafka.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The type of storage used by Kafka brokers
        displayName: Kafka storage
        path: kafka.storage.type
        x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Kafka Resource Requirements
        path: kafka.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: The desired number of Zookeeper nodes.
        displayName: Zookeeper Nodes
        path: zookeeper.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The type of storage used by Zookeeper nodes
        displayName: Zookeeper storage
        path: zookeeper.storage.type
        x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Zookeeper Resource Requirements
        path: zookeeper.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka cluster conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
    - description: Represents a Kafka Connect cluster
      displayName: Kafka Connect
      kind: KafkaConnect
      name: kafkaconnects.kafka.strimzi.io
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      specDescriptors:
      - description: The desired number of Kafka Connect nodes.
        displayName: Connect nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Kafka Connect version
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The address of the bootstrap server
        displayName: Bootstrap server
        path: bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka Connect conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
    - description: Represents a Kafka Connect cluster with Source 2 Image support
      displayName: Kafka Connect Source to Image
      kind: KafkaConnectS2I
      name: kafkaconnects2is.kafka.strimzi.io
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: DeploymentConfig
        name: ''
        version: apps.openshift.io/v1
      - kind: ReplicationController
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: BuildConfig
        name: ''
        version: build.openshift.io/v1
      - kind: ImageStream
        name: ''
        version: image.openshift.io/v1
      specDescriptors:
      - description: The desired number of Kafka Connect nodes.
        displayName: Connect nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Kafka Connect version
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The address of the bootstrap server
        displayName: Bootstrap server
        path: bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka Connect conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
    - description: Represents a Kafka MirrorMaker cluster
      displayName: Kafka Mirror Maker
      kind: KafkaMirrorMaker
      name: kafkamirrormakers.kafka.strimzi.io
      resources:
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      specDescriptors:
      - description: The desired number of Kafka MirrorMaker nodes.
        displayName: MirrorMaker nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Kafka Mirror Maker version
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The bootstrap address of the Source cluster
        displayName: Source cluster
        path: consumer.bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The bootstrap address of the Target cluster
        displayName: Target cluster
        path: producer.bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Expression specifying the topics which should be mirrored
        displayName: Mirrored topics
        path: whitelist
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka MirrorMaker conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
    - description: Represents a Kafka Bridge cluster
      displayName: Kafka Bridge
      kind: KafkaBridge
      name: kafkabridges.kafka.strimzi.io
      resources:
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: Service
        name: ''
        version: v1
      specDescriptors:
      - description: The desired number of Kafka Bridge nodes.
        displayName: Bridge nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The bootstrap address of the Kafka cluster
        displayName: Kafka cluster
        path: bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The port where the HTTP Bridge is listening
        displayName: HTTP port
        path: http.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka Bridge conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
    - description: Represents a topic inside a Kafka cluster
      displayName: Kafka Topic
      kind: KafkaTopic
      name: kafkatopics.kafka.strimzi.io
      specDescriptors:
      - description: The number of partitions
        displayName: Partitions
        path: partitions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The number of replicas
        displayName: Replication factor
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: Kafka topic conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
    - description: Represents a user inside a Kafka cluster
      displayName: Kafka User
      kind: KafkaUser
      name: kafkausers.kafka.strimzi.io
      resources:
      - kind: Secret
        name: ''
        version: v1
      specDescriptors:
      - description: Authentication type
        displayName: Authentication type
        path: authentication.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:tls
        - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
      - description: Authorization type
        displayName: Authorization type
        path: authorization.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:simple
      statusDescriptors:
      - description: Kafka user conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
  description: "Strimzi provides a way to run an [Apache Kafka\xC2\xAE](https://kafka.apache.org)\
    \ cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/)\
    \ in various deployment configurations. See our [website](https://strimzi.io)\
    \ for more details about the project.\n### Supported Features\n* **Manages the\
    \ Kafka Cluster** - Deploys and manages all of the components of this complex\
    \ application, including dependencies like Apache ZooKeeper\xC2\xAE that are traditionally\
    \ hard to administer.\n* **Includes Kafka Connect** - Allows for configuration\
    \ of common data sources and sinks to move data into and out of the Kafka cluster.\n\
    * **Topic Management** - Creates and manages Kafka Topics within the cluster.\n\
    * **User Management** - Creates and manages Kafka Users within the cluster.\n\
    * **Includes Kafka Mirror Maker** - Allows for morroring data between different\
    \ Apache Kafka\xC2\xAE clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients\
    \ to send and receive messages through an Apache Kafka\xC2\xAE cluster via HTTP\
    \ protocol.\n### Upgrading your Clusters\nThe Strimzi Operator understands how\
    \ to run and upgrade between a set of Kafka versions. When specifying a new version\
    \ in your config, check to make sure you aren't using any features that may have\
    \ been removed. See [the upgrade guide](https://strimzi.io/docs/latest/#assembly-upgrading-kafka-versions-str)\
    \ for more information.\n### Storage\nAn efficient data storage infrastructure\
    \ is essential to the optimal performance of Apache Kafka\xC2\xAE. Apache Kafka\xC2\
    \xAE deployed via Strimzi requires block storage. The use of file storage (for\
    \ example, NFS) is not recommended.\nThe Strimzi Operator supports three types\
    \ of data storage:\n* Ephemeral (Recommended for development only)\n* Persistent\n\
    * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\n\
    Strimzi also supports advanced operations such as adding or removing disks in\
    \ Apache Kafka\xC2\xAE brokers or resizing the persistent volumes (where supported\
    \ by the infrastructure).\n### Documentation\nDocumentation to the current _master_\
    \ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).\n\
    ### Getting help\nIf you encounter any issues while using Strimzi, you can get\
    \ help using:\n* [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n\
    * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n\
    ### Contributing\nYou can contribute by:\n* Raising any issues you find using\
    \ Strimzi\n* Fixing issues by opening Pull Requests\n* Improving documentation\n\
    * Talking about Strimzi\n\nAll bugs, tasks or enhancements are tracked as [GitHub\
    \ issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which\
    \  might be a good start for new contributors are marked with [\"good-start\"\
    ](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.\n\
    \nThe [Hacking guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/HACKING.md)\
    \ describes how to build Strimzi and how to  test your changes before submitting\
    \ a patch or opening a PR.\n\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/)\
    \ describes how to contribute to Strimzi documentation.\n\nIf you want to get\
    \ in touch with us first before contributing, you can use:\n* [Strimzi mailing\
    \ list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi\
    \ Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n\
    ### License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).\n"
  displayName: Strimzi Apache Kafka Operator
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTk1IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTk1OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6IzE5MkM0Nzt9Cgkuc3Qxe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQoJLnN0MntmaWxsOnVybCgjU1ZHSURfMl8pO30KCS5zdDN7ZmlsbDp1cmwoI1NWR0lEXzNfKTt9Cgkuc3Q0e2ZpbGw6dXJsKCNTVkdJRF80Xyk7fQoJLnN0NXtmaWxsOnVybCgjU1ZHSURfNV8pO30KCS5zdDZ7ZmlsbDp1cmwoI1NWR0lEXzZfKTt9Cjwvc3R5bGU+CjxnPgoJPHBvbHlnb24gY2xhc3M9InN0MCIgcG9pbnRzPSIyNTYsNSAxLDE1Mi4yIDEsNDQ2LjcgMjU2LDU5My45IDUxMSw0NDYuNyA1MTEsMTUyLjIgMjU2LDUgCSIvPgoJPGxpbmVhckdyYWRpZW50IGlkPSJTVkdJRF8xXyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIHgxPSIxMDkuNDk5NiIgeTE9Ijg0Ljk2MjIiIHgyPSI0NDAuOTUxNyIgeTI9Ijc5My44MTAyIj4KCQk8c3RvcCAgb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojRkZGRkZGIi8+CgkJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzU0QkFEOCIvPgoJPC9saW5lYXJHcmFkaWVudD4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNTYsNTYxbDIyNi41LTEzMC44di0yNi4zYy0zNy42LTcuMy04NC45LTE0LjMtMTQzLjUtMTkuM2MtMTk5LjItMTcuMi0xNC44LTU2LjYsNjguOS0xMjcuMQoJCVMxMzAsMTY1LjcsMTMwLDE2NS43czE0Ny42LDMxLDEzMi44LDUwYy0xMC41LDEzLjUtMTM0LjMsNDMuNS0yMzMuMyw4OC4xdjEyNi41TDI1Niw1NjF6Ii8+CjwvZz4KPC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      permissions:
      - rules:
        - apiGroups:
          - ''
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkas
          - kafkas/status
          - kafkaconnects
          - kafkaconnects/status
          - kafkaconnects2is
          - kafkaconnects2is/status
          - kafkamirrormakers
          - kafkamirrormakers/status
          - kafkabridges
          - kafkabridges/status
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ''
          resources:
          - services
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - extensions
          resources:
          - deployments
          - deployments/scale
          - replicasets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/scale
          - deployments/status
          - statefulsets
          - replicasets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - extensions
          resources:
          - replicationcontrollers
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          - deploymentconfigs/scale
          - deploymentconfigs/status
          - deploymentconfigs/finalizers
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - build.openshift.io
          resources:
          - buildconfigs
          - builds
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
          - update
        - apiGroups:
          - image.openshift.io
          resources:
          - imagestreams
          - imagestreams/status
          verbs:
          - create
          - delete
          - get
          - list
          - watch
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - replicationcontrollers
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - secrets
          verbs:
          - get
          - list
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - extensions
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - get
          - list
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkatopics
          - kafkatopics/status
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
        - apiGroups:
          - ''
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkausers
          - kafkausers/status
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
        serviceAccountName: strimzi-cluster-operator
      clusterPermissions:
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - get
          - create
          - delete
          - patch
          - update
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
        - apiGroups:
          - ''
          resources:
          - nodes
          verbs:
          - get
        serviceAccountName: strimzi-cluster-operator
      deployments:
      - name: strimzi-cluster-operator-v0.14.0
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: strimzi-cluster-operator
              strimzi.io/kind: cluster-operator
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                name: strimzi-cluster-operator
                strimzi.io/kind: cluster-operator
            spec:
              containers:
              - args:
                - /opt/strimzi/bin/cluster_operator_run.sh
                env:
                - name: STRIMZI_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
                  value: '120000'
                - name: STRIMZI_OPERATION_TIMEOUT_MS
                  value: '300000'
                - name: STRIMZI_DEFAULT_ZOOKEEPER_IMAGE
                  value: strimzi/kafka:0.14.0-kafka-2.3.0
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
                  value: strimzi/kafka:0.14.0-kafka-2.3.0
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_KAFKA_IMAGE
                  value: strimzi/kafka:0.14.0-kafka-2.3.0
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_ZOOKEEPER_IMAGE
                  value: strimzi/kafka:0.14.0-kafka-2.3.0
                - name: STRIMZI_KAFKA_IMAGES
                  value: '2.1.0=strimzi/kafka:0.14.0-kafka-2.1.0

                    2.1.1=strimzi/kafka:0.14.0-kafka-2.1.1

                    2.2.0=strimzi/kafka:0.14.0-kafka-2.2.0

                    2.2.1=strimzi/kafka:0.14.0-kafka-2.2.1

                    2.3.0=strimzi/kafka:0.14.0-kafka-2.3.0

                    '
                - name: STRIMZI_KAFKA_CONNECT_IMAGES
                  value: '2.1.0=strimzi/kafka:0.14.0-kafka-2.1.0

                    2.1.1=strimzi/kafka:0.14.0-kafka-2.1.1

                    2.2.0=strimzi/kafka:0.14.0-kafka-2.2.0

                    2.2.1=strimzi/kafka:0.14.0-kafka-2.2.1

                    2.3.0=strimzi/kafka:0.14.0-kafka-2.3.0

                    '
                - name: STRIMZI_KAFKA_CONNECT_S2I_IMAGES
                  value: '2.1.0=strimzi/kafka:0.14.0-kafka-2.1.0

                    2.1.1=strimzi/kafka:0.14.0-kafka-2.1.1

                    2.2.0=strimzi/kafka:0.14.0-kafka-2.2.0

                    2.2.1=strimzi/kafka:0.14.0-kafka-2.2.1

                    2.3.0=strimzi/kafka:0.14.0-kafka-2.3.0

                    '
                - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
                  value: '2.1.0=strimzi/kafka:0.14.0-kafka-2.1.0

                    2.1.1=strimzi/kafka:0.14.0-kafka-2.1.1

                    2.2.0=strimzi/kafka:0.14.0-kafka-2.2.0

                    2.2.1=strimzi/kafka:0.14.0-kafka-2.2.1

                    2.3.0=strimzi/kafka:0.14.0-kafka-2.3.0

                    '
                - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
                  value: strimzi/operator:0.14.0
                - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
                  value: strimzi/operator:0.14.0
                - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
                  value: strimzi/operator:0.14.0
                - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
                  value: strimzi/kafka-bridge:0.14.0
                - name: STRIMZI_CREATE_CLUSTER_ROLES
                  value: 'FALSE'
                - name: STRIMZI_LOG_LEVEL
                  value: INFO
                image: strimzi/operator:0.14.0
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthy
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 30
                name: strimzi-cluster-operator
                readinessProbe:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 30
                resources:
                  limits:
                    cpu: 1000m
                    memory: 256Mi
                  requests:
                    cpu: 200m
                    memory: 256Mi
              serviceAccountName: strimzi-cluster-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - kafka
  - messaging
  - kafka-connect
  - kafka-streams
  - data-streaming
  - data-streams
  - streaming
  - streams
  labels:
    name: strimzi-cluster-operator
  links:
  - name: Website
    url: https://strimzi.io/
  - name: Documentation
    url: https://strimzi.io/docs/0.14.0/full.html
  - name: Mailing list
    url: https://lists.cncf.io/g/cncf-strimzi-users/topics
  - name: Slack
    url: https://cloud-native.slack.com/messages/strimzi
  - name: GitHub
    url: https://github.com/strimzi/strimzi-kafka-operator
  maintainers:
  - email: strimzi@redhat.com
    name: Strimzi
  maturity: stable
  provider:
    name: Red Hat
  replaces: strimzi-cluster-operator.v0.13.0
  selector:
    matchLabels:
      name: strimzi-cluster-operator
  version: 0.14.0
