apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: strimzi-cluster-operator.v0.12.2
  namespace: placeholder
  annotations:
    alm-examples: |-
      [
        {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.2.1",
                  "replicas":3,
                  "listeners":{
                    "plain":{
                     },
                    "tls":{
                     }
                  },
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.2"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                   },
                  "userOperator":{
                   }
              }
            }
        },
        {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.2.1",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
        },
        {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnectS2I",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.2.1",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
        },
        {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.2.1",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "whitelist":".*"
            }
        },
        {
            "apiVersion":"kafka.strimzi.io/v1alpha1",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
        },
        {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
        },
        {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
        }
      ]
    categories: "Streaming & Messaging"
    certified: "false"
    description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes or OpenShift in various deployment configurations.
    containerImage: docker.io/strimzi/operator:0.12.2
    repository: https://github.com/strimzi/strimzi-kafka-operator
    createdAt: 2019-07-18T16:00:00Z
    capabilities: Full Lifecycle
    support: Strimzi
spec:
  displayName: Strimzi Apache Kafka Operator
  description: >
    Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on 
    [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations.
    See our [website](https://strimzi.io) for more details about the project.

    ### Supported Features

    * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.

    * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.

    * **Topic Management** - Creates and manages Kafka Topics within the cluster.

    * **User Management** - Creates and manages Kafka Users within the cluster.

    * **Includes Kafka Mirror Maker** - Allows for morroring data between different Apache Kafka® clusters.

    * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.

    ### Upgrading your Clusters
    
    The Strimzi Operator understands how to run and upgrade between a set of Kafka versions.
    When specifying a new version in your config, check to make sure you aren't using any features that may have been removed.
    See [the upgrade guide](https://strimzi.io/docs/latest/#assembly-upgrading-kafka-versions-str) for more information.

    ### Storage

    An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®.
    Apache Kafka® deployed via Strimzi requires block storage.
    The use of file storage (for example, NFS) is not recommended.
    
    The Strimzi Operator supports three types of data storage:
    
    * Ephemeral (Recommended for development only)
    
    * Persistent
    
    * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
    
    Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).

    ### Documentation

    Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).

    ### Getting help

    If you encounter any issues while using Strimzi, you can get help using:

    * [Strimzi mailing list](https://www.redhat.com/mailman/listinfo/strimzi)

    * [Strimzi Slack workspace](https://join.slack.com/t/strimzi/shared_invite/enQtMzU2Mjk3NTgxMzE5LTYyMTUwMGNlMDQwMzBhOGI4YmY4MjhiMDgyNjA5OTk2MTFiYjc4M2Q3NGU1YTFjOWRiMzM2NGMwNDUwMjBlNDY)

    ### Contributing

    You can contribute by:

    * Raising any issues you find using Strimzi

    * Fixing issues by opening Pull Requests

    * Improving documentation

    * Talking about Strimzi


    All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which 
    might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
    label.


    The [Hacking guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/HACKING.md) describes how to build Strimzi and how to 
    test your changes before submitting a patch or opening a PR.


    The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.


    If you want to get in touch with us first before contributing, you can use:

    * [Strimzi mailing list](https://www.redhat.com/mailman/listinfo/strimzi)

    * [Strimzi Slack workspace](https://join.slack.com/t/strimzi/shared_invite/enQtMzU2Mjk3NTgxMzE5LTYyMTUwMGNlMDQwMzBhOGI4YmY4MjhiMDgyNjA5OTk2MTFiYjc4M2Q3NGU1YTFjOWRiMzM2NGMwNDUwMjBlNDY)

    ### License
    
    Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
  keywords: ['kafka', 'messaging', 'kafka-connect', 'kafka-streams', 'data-streaming', 'data-streams', 'streaming', 'streams']
  icon:
    - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTk1IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTk1OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6IzE5MkM0Nzt9Cgkuc3Qxe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQoJLnN0MntmaWxsOnVybCgjU1ZHSURfMl8pO30KCS5zdDN7ZmlsbDp1cmwoI1NWR0lEXzNfKTt9Cgkuc3Q0e2ZpbGw6dXJsKCNTVkdJRF80Xyk7fQoJLnN0NXtmaWxsOnVybCgjU1ZHSURfNV8pO30KCS5zdDZ7ZmlsbDp1cmwoI1NWR0lEXzZfKTt9Cjwvc3R5bGU+CjxnPgoJPHBvbHlnb24gY2xhc3M9InN0MCIgcG9pbnRzPSIyNTYsNSAxLDE1Mi4yIDEsNDQ2LjcgMjU2LDU5My45IDUxMSw0NDYuNyA1MTEsMTUyLjIgMjU2LDUgCSIvPgoJPGxpbmVhckdyYWRpZW50IGlkPSJTVkdJRF8xXyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIHgxPSIxMDkuNDk5NiIgeTE9Ijg0Ljk2MjIiIHgyPSI0NDAuOTUxNyIgeTI9Ijc5My44MTAyIj4KCQk8c3RvcCAgb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojRkZGRkZGIi8+CgkJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzU0QkFEOCIvPgoJPC9saW5lYXJHcmFkaWVudD4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNTYsNTYxbDIyNi41LTEzMC44di0yNi4zYy0zNy42LTcuMy04NC45LTE0LjMtMTQzLjUtMTkuM2MtMTk5LjItMTcuMi0xNC44LTU2LjYsNjguOS0xMjcuMQoJCVMxMzAsMTY1LjcsMTMwLDE2NS43czE0Ny42LDMxLDEzMi44LDUwYy0xMC41LDEzLjUtMTM0LjMsNDMuNS0yMzMuMyw4OC4xdjEyNi41TDI1Niw1NjF6Ii8+CjwvZz4KPC9zdmc+Cg==
      mediatype: image/svg+xml
  version: 0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
  MinKubeVersion: 1.11.0
  maturity: stable
  maintainers:
  - name: Strimzi
    email: strimzi@redhat.com
  provider:
    name: Red Hat
  labels:
    name: strimzi-cluster-operator
  selector:
    matchLabels:
      name: strimzi-cluster-operator
  links:
  - name: Website
    url: https://strimzi.io/
  - name: Documentation
    url: https://strimzi.io/docs/0.12.2/full.html
  - name: Mailing list
    url: https://www.redhat.com/mailman/listinfo/strimzi
  - name: Slack
    url: https://join.slack.com/t/strimzi/shared_invite/enQtMzU2Mjk3NTgxMzE5LTYyMTUwMGNlMDQwMzBhOGI4YmY4MjhiMDgyNjA5OTk2MTFiYjc4M2Q3NGU1YTFjOWRiMzM2NGMwNDUwMjBlNDY
  - name: GitHub
    url: https://github.com/strimzi/strimzi-kafka-operator
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: true
  - type: AllNamespaces
    supported: true
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - serviceAccountName: strimzi-cluster-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkas
          - kafkas/status
          - kafkaconnects
          - kafkaconnects2is
          - kafkamirrormakers
          - kafkabridges
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - extensions
          resources:
          - deployments
          - deployments/scale
          - replicasets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/scale
          - deployments/status
          - statefulsets
          - replicasets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - extensions
          resources:
          - replicationcontrollers
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          - deploymentconfigs/scale
          - deploymentconfigs/status
          - deploymentconfigs/finalizers
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - build.openshift.io
          resources:
          - buildconfigs
          - builds
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
          - update
        - apiGroups:
          - image.openshift.io
          resources:
          - imagestreams
          - imagestreams/status
          verbs:
          - create
          - delete
          - get
          - list
          - watch
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - replicationcontrollers
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - extensions
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - get
          - list
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - get
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkatopics
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkausers
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - get
          - create
          - delete
          - patch
          - update
      deployments:
      - name: strimzi-cluster-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: strimzi-cluster-operator
          template:
            metadata:
              labels:
                name: strimzi-cluster-operator
                strimzi.io/kind: cluster-operator
            spec:
              serviceAccountName: strimzi-cluster-operator
              containers:
              - name: strimzi-cluster-operator
                image: strimzi/operator:0.12.2
                imagePullPolicy: IfNotPresent
                args:
                - /opt/strimzi/bin/cluster_operator_run.sh
                env:
                - name: STRIMZI_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
                  value: "120000"
                - name: STRIMZI_OPERATION_TIMEOUT_MS
                  value: "300000"
                - name: STRIMZI_DEFAULT_ZOOKEEPER_IMAGE
                  value: strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_KAFKA_IMAGES
                  value: |
                    2.1.0=strimzi/kafka:0.12.2-kafka-2.1.0
                    2.1.1=strimzi/kafka:0.12.2-kafka-2.1.1
                    2.2.0=strimzi/kafka:0.12.2-kafka-2.2.0
                    2.2.1=strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_KAFKA_CONNECT_IMAGES
                  value: |
                    2.1.0=strimzi/kafka:0.12.2-kafka-2.1.0
                    2.1.1=strimzi/kafka:0.12.2-kafka-2.1.1
                    2.2.0=strimzi/kafka:0.12.2-kafka-2.2.0
                    2.2.1=strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_KAFKA_CONNECT_S2I_IMAGES
                  value: |
                    2.1.0=strimzi/kafka:0.12.2-kafka-2.1.0
                    2.1.1=strimzi/kafka:0.12.2-kafka-2.1.1
                    2.2.0=strimzi/kafka:0.12.2-kafka-2.2.0
                    2.2.1=strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
                  value: |
                    2.1.0=strimzi/kafka:0.12.2-kafka-2.1.0
                    2.1.1=strimzi/kafka:0.12.2-kafka-2.1.1
                    2.2.0=strimzi/kafka:0.12.2-kafka-2.2.0
                    2.2.1=strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
                  value: strimzi/operator:0.12.2
                - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
                  value: strimzi/operator:0.12.2
                - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
                  value: strimzi/operator:0.12.2
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_ZOOKEEPER_IMAGE
                  value: strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_KAFKA_IMAGE
                  value: strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
                  value: strimzi/kafka:0.12.2-kafka-2.2.1
                - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
                  value: strimzi/kafka-bridge:0.12.2
                - name: STRIMZI_CREATE_CLUSTER_ROLES
                  value: "TRUE"
                - name: STRIMZI_LOG_LEVEL
                  value: INFO
                livenessProbe:
                  httpGet:
                    path: /healthy
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 30
                readinessProbe:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 30
                resources:
                  limits:
                    cpu: 1000m
                    memory: 256Mi
                  requests:
                    cpu: 200m
                    memory: 256Mi
          strategy:
            type: Recreate
  customresourcedefinitions:
    owned:
    - name: kafkas.kafka.strimzi.io
      version: v1beta1
      kind: Kafka
      displayName: Kafka
      description: Represents a Kafka cluster
      resources:
      - kind: Route
        name: ''
        version: route.openshift.io/v1
      - kind: Service
        name: ''
        version: v1
      - kind: StatefulSet
        name: ''
        version: v1
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: Secret
        name: ''
        version: v1
      specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: Limits describes the minimum/maximum amount of compute resources required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: Limits describes the minimum/maximum amount of compute resources required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
      statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
           - 'urn:alm:descriptor:io.kubernetes.conditions'
    - name: kafkaconnects.kafka.strimzi.io
      version: v1beta1
      kind: KafkaConnect
      displayName: Kafka Connect
      description: Represents a Kafka Connect cluster
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: Limits describes the minimum/maximum amount of compute resources required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
    - name: kafkaconnects2is.kafka.strimzi.io
      version: v1beta1
      kind: KafkaConnectS2I
      displayName: Kafka Connect Source to Image
      description: Represents a Kafka Connect cluster with Source 2 Image support
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: DeploymentConfig
        name: ''
        version: apps.openshift.io/v1
      - kind: ReplicationController
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: BuildConfig
        name: ''
        version: build.openshift.io/v1
      - kind: ImageStream
        name: ''
        version: image.openshift.io/v1
      specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: Limits describes the minimum/maximum amount of compute resources required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
    - name: kafkamirrormakers.kafka.strimzi.io
      version: v1beta1
      kind: KafkaMirrorMaker
      displayName: Kafka Mirror Maker
      description: Represents a Kafka MirrorMaker cluster
      resources:
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: whitelist
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: Limits describes the minimum/maximum amount of compute resources required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
    - name: kafkabridges.kafka.strimzi.io
      version: v1alpha1
      kind: KafkaBridge
      displayName: Kafka Bridge
      description: Represents a Kafka Bridge cluster
      resources:
        - kind: Deployment
          name: ''
          version: v1
        - kind: ReplicaSet
          name: ''
          version: v1
        - kind: Pod
          name: ''
          version: v1
        - kind: Service
          name: ''
          version: v1
      specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: The HTTP configuration
          displayName: HTTP configuration
          path: http
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
    - name: kafkatopics.kafka.strimzi.io
      version: v1beta1
      kind: KafkaTopic
      displayName: Kafka Topic
      description: Represents a topic inside a Kafka cluster
      specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
    - name: kafkausers.kafka.strimzi.io
      version: v1beta1
      kind: KafkaUser
      displayName: Kafka User
      description: Represents a user inside a Kafka cluster
      resources:
      - kind: Secret
        name: ''
        version: v1
      specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:label'
