apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: syndesisoperator.1.7.0
  namespace: placeholder
  annotations:
    capabilities: Deep Insights
    categories: "Integration & Delivery"
    certified: "false"
    createdAt: 2019-05-08T16:12:00Z
    containerImage: syndesis/syndesis-operator
    support: Syndesis
    description: Manages the installation of Syndesis, a flexible and customizable open source platform that provides core integration capabilities as a service.
    repository: https://github.com/syndesisio/syndesis/
    alm-examples: |
      [{
          "apiVersion": "syndesis.io/v1alpha1",
          "kind": "Syndesis",
          "metadata": {
          	"name": "app"
          },
          "spec": {
          	"integration": {
          		"limit": 0
          	}
          }
      }]
spec:
  displayName: Syndesis Operator
  description: |
    Syndesis is a flexible and customizable, open source platform that provides core integration capabilities as a service.

    This operator installs as well as configures the following syndesis components:
    - syndesis-server
    - syndesis-meta
    - syndesis-ui
    - syndesis-db
    - syndesis-prometheus
    - syndesis-proxy
    - syndesis-oauthproxy

    ### How to install
    When the operator is installed (you have created a subscription and the operator is running in the selected namespace) create a new CR of Kind Syndesis (click the Create New button). The CR spec contains all defaults (see below).

    ### CR Defaults
    The CR definition is pretty simple and an empy CR will trigger a base installation
  keywords: ['camel', 'integration', 'syndesis', 'fuse', 'online']
  version: 1.7.0
  maturity: alpha
  maintainers:
  - name: Syndesis team
    email: syndesis@googlegroups.com
  provider:
    name: Syndesis team
  labels:
    name: syndesis-operator
  selector:
    matchLabels:
      name: syndesis-operator
  icon:
  - base64data: 
    mediatype: image/png
  links:
  - name: Syndesis
    url: https://syndesis.io
  - name: Syndesis Operator
    url: https://github.com/syndesisio/syndesis/tree/master/install/operator
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: false
  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: syndesis-operator
        rules:
        - apiGroups:
          - syndesis.io
          resources:
          - "*"
          - "*/finalizers"
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - configmaps
          - secrets
          - serviceaccounts
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - ""
          resources:
          - pods/log
          verbs: [ get ]
        - apiGroups:
          - ""
          resources:
          - replicationcontrollers
          - replicationcontrollers/scale
          - replicationcontrollers/status
          verbs: [ get, list, create, update, delete, deletecollection, watch ]
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - builds
          - buildconfigs
          - builds/details
          - buildconfigs/webhooks
          - buildconfigs/instantiatebinary
          - builds/log
          verbs: [ get, list, create, update, delete, deletecollection, watch ]
        - apiGroups:
          - ""
          - apps.openshift.io
          resources:
          - deploymentconfigs
          - deploymentconfigs/scale
          verbs: [ get, list, create, update, delete, deletecollection, watch, patch ]
        - apiGroups:
          - ""
          - apps.openshift.io
          resources:
          - deploymentconfigrollbacks
          - deploymentconfigs/instantiate
          - deploymentconfigs/rollback
          verbs: [ create ]
        - apiGroups:
          - ""
          - apps.openshift.io
          resources:
          - deploymentconfigs/log
          - deploymentconfigs/status
          verbs: [ get, list, watch ]
        - apiGroups:
          - ""
          - image.openshift.io
          resources:
          - imagestreams
          - imagestreamimages
          - imagestreammappings
          - imagestreams/secrets
          - imagestreamtags
          verbs: [ get, list, create, update, delete, deletecollection, watch, patch ]
        - apiGroups:
          - ""
          - image.openshift.io
          resources:
          - imagestreams/status
          - imagestreamimports
          verbs: [ get, list, watch ]
        - apiGroups:
          - ""
          resources:
          - events
          verbs: [ get, list ]
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - ""
          - template.openshift.io
          resources:
          - processedtemplates
          - templateconfigs
          - templateinstances
          - templates
          verbs: [ get, list, create, update, delete, deletecollection, watch, patch ]
        - apiGroups:
          - authorization.openshift.io
          resources:
          - rolebindings
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - camel.apache.org
          resources:
          - "*"
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - alertmanagers
          - prometheuses
          - servicemonitors
          - prometheusrules
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - integreatly.org
          resources:
          - grafanadashboards
          verbs: [ get, list, create, update, delete, deletecollection, watch]
        - apiGroups:
          - serving.knative.dev
          resources:
          - services
          verbs: [ get, list, watch]
        - apiGroups:
          - eventing.knative.dev
          resources:
          - channels
          verbs: [ get, list, watch]
      deployments:
      - name: syndesis-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: syndesis-operator
              syndesis.io/app: syndesis
              syndesis.io/type: operator
              syndesis.io/component: syndesis-operator
          template:
            metadata:
              labels:
                name: syndesis-operator
                syndesis.io/app: syndesis
                syndesis.io/type: operator
                syndesis.io/component: syndesis-operator
            spec:
              serviceAccountName: syndesis-operator
              containers:
                - name: syndesis-operator
                  image: syndesis/syndesis-operator:1.7.1-20190617
                  imagePullPolicy: Always
                  ports:
                    - containerPort: 60000
                      name: metrics
                  env:
                    - name: WATCH_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_NAME
                      value: "syndesis-operator"
  customresourcedefinitions:
    owned:
    - name: syndesises.syndesis.io
      version: v1alpha1
      kind: Syndesis
      displayName: Syndesis CRD
      description: Syndesis CRD
