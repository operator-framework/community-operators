apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "teiid.io/v1alpha1",
          "kind": "VirtualDatabase",
          "metadata": {
            "name": "hello-world"
          },
          "spec": {
            "build": {
              "source": {
                "ddl": "CREATE DATABASE dispatch OPTIONS (ANNOTATION 'Dispatch VDB');\nUSE DATABASE dispatch;\nCREATE FOREIGN DATA WRAPPER h2;\n\nCREATE SERVER sampledb FOREIGN DATA WRAPPER h2;\n\nCREATE SCHEMA dispatch SERVER sampledb;\n\n-- H2 converts the schema name to capital case\nIMPORT FOREIGN SCHEMA \"PUBLIC\" FROM SERVER sampledb INTO dispatch;\n",
                "dependencies": [
                  "com.h2database:h2:1.4.199"
                ]
              }
            },
            "datasources": [
              {
                "name": "sampledb",
                "properties": [
                  {
                    "name": "username",
                    "value": "sa"
                  },
                  {
                    "name": "password",
                    "value": "sa"
                  },
                  {
                    "name": "jdbc-url",
                    "value": "jdbc:h2:mem:sampledb;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;INIT=create table note(id integer primary key, msg varchar(80))\\;INSERT INTO note VALUES(1, 'First note')\\;INSERT INTO note VALUES(2, 'Second note');"
                  },
                  {
                    "name": "driver-class-name",
                    "value": "org.h2.Driver"
                  }
                ],
                "type": "h2"
              }
            ],
            "replicas": 1
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Database, Integration & Delivery
    certified: "false"
    containerImage: quay.io/teiid/teiid-operator:0.4.0
    createdAt: "2020-08-18T00:00:00Z"
    description: Teiid Operator for deployment and management of Data Virtualization
      services in Kubernetes/OpenShift cloud.
    repository: https://github.com/teiid/teiid-operator
    support: https://teiid.io
    tectonic-visibility: ocs
  name: teiid.v0.4.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: A simple self contained VirtualDatabase application
      displayName: Virtual Database Application
      kind: VirtualDatabase
      name: virtualdatabases.teiid.io
      specDescriptors:
      - description: S2I Build configuration
        displayName: VDB Build
        path: build
      - description: Environment properties set build purpose
        displayName: Environment properties for s2i
        path: build.env
      - description: VDB Source details
        displayName: S2I based Source information
        path: build.source
      - description: DDL based VDB
        displayName: DDL Of the VDB
        path: build.source.ddl
      - description: List of maven dependencies for the build in GAV format
        displayName: Maven Dependencies for VDB
        path: build.source.dependencies
      - description: A VDB defined in GAV format
        displayName: Maven Coordinates for VDB
        path: build.source.maven
      - description: Custom maven repositories that need to be used for the S2I build
        displayName: Custom Maven Repositories
        path: build.source.mavenRepositories
      - description: Open API contract that is exposed by the VDB
        displayName: OpenAPI of exposed
        path: build.source.openapi
      - description: Deployed vdb version. For embedded DDL version this will be implicitly
          provided when ignored, for maven based vdb the maven version is always
        displayName: Version Of the VDB
        path: build.source.version
      - description: DataSources configuration for this Virtual Database
        displayName: Datasources Configuration
        path: datasources
      - description: Name of the Data Source
        displayName: Properties
        path: datasources[0].name
      - description: Properties required for Data Source connection
        displayName: Properties
        path: datasources[0].properties
      - description: 'Type of Data Source. ex: Oracle, PostgreSQL, MySQL, Salesforce
          etc.'
        displayName: Properties
        path: datasources[0].type
      - description: Environment properties required for deployment
        displayName: Properties
        path: env
      - description: Defines the services (LoadBalancer, NodePort, 3scale) to expose
        displayName: Services Created
        path: expose
      - description: Jaeger instance to use to push the tracing information
        displayName: Jaeger Name
        path: jaeger
      - description: Number Of deployment units required
        displayName: Replicas
        path: replicas
      - description: memory, disk cpu requirements
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Deployed vdb version.
        displayName: CacheStore In use
        path: cachestore
      - description: ConfigDigest value of the vdb
        displayName: SHA Of the Configuration
        path: configdigest
      - description: Digest value of the vdb
        displayName: SHA Of the VDB
        path: digest
      - description: Failure message if deployment ended in failure
        displayName: Failure Message
        path: failure
      - description: The current phase of the build the operator deployment is running
        displayName: Phase
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Route information that is exposed for clients
        displayName: Route Exposed for OData
        path: route
      - description: Deployed vdb version.
        displayName: Version Of the VDB deployed
        path: version
      version: v1alpha1
  description: "Teiid is a Data Virtualization system that allows applications to
  federate data from multiple, heterogeneous data stores. Through its abstraction
  and federation, data is accessed and integrated in real-time across distributed
  data sources without copying or otherwise moving data from its system of record.
  \n\nFor example, you can access your all data in Oracle, Postgres, MongoDB and/or
  Rest API (many more) with a single request. Teiid gives you all the tools required
  to build logical/abstraction layer that can exposed as Virtual Database by essentially
  making all sources underneath as a black box to the consuming user. Since this
  integration of data happens in real time there is no ETL process to run and data
  is always fresh. For the end user the Virtual Database exactly looks like a relational
  database like Postgres, that can be accessed using JDBC, ODBC, OData V4 and Postgres
  protocols, i.e. can be accessed from any language that you have your application
  written in.\n\nTeiid, out of box also exposes the OData v4 REST API without any
  further coding, with this you can expose you single or multiple databases as rest
  services without any coding. Alternatively if you want expose a Open API directly
  over your data that is also possible with Teiid.\n\nIn Monolith to Microservices
  migration scenarios, this tool is very valuable in terms of providing boundaries
  around the monolith data access, schema versioning, domain model support using
  its logical/abstraction layers."
  displayName: Teiid
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - console.openshift.io
          resources:
          - consoleyamlsamples
          - consolelinks
          verbs:
          - create
          - delete
          - get
        serviceAccountName: teiid-operator
      deployments:
      - name: teiid-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: teiid-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: teiid-operator
            spec:
              containers:
              - command:
                - teiid-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.labels['name']
                image: quay.io/teiid/teiid-operator:0.4.0
                imagePullPolicy: Always
                name: teiid-operator
                resources: {}
              serviceAccountName: teiid-operator
      permissions:
      - rules:
        - apiGroups:
          - teiid.io
          resources:
          - '*'
          - '*/finalizers'
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
        - apiGroups:
          - ""
          resources:
          - replicationcontrollers
          - replicationcontrollers/scale
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - deployments/scale
          - replicasets
          - replicasets/scale
          - statefulsets
          - statefulsets/scale
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - extensions
          resources:
          - daemonsets
          - deployments
          - deployments/scale
          - ingresses
          - networkpolicies
          - replicasets
          - replicasets/scale
          - replicationcontrollers/scale
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - ""
          resources:
          - bindings
          - events
          - limitranges
          - namespaces/status
          - pods/log
          - pods/status
          - replicationcontrollers/status
          - resourcequotas
          - resourcequotas/status
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - buildconfigs
          - buildconfigs/webhooks
          - builds
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - buildconfigs/instantiate
          - buildconfigs/instantiatebinary
          - builds/clone
          verbs:
          - create
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - builds/details
          verbs:
          - update
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - builds/log
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          - apps.openshift.io
          resources:
          - deploymentconfigs
          - deploymentconfigs/scale
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - ""
          - apps.openshift.io
          resources:
          - deploymentconfigrollbacks
          - deploymentconfigs/instantiate
          - deploymentconfigs/rollback
          verbs:
          - create
        - apiGroups:
          - ""
          - apps.openshift.io
          resources:
          - deploymentconfigs/log
          - deploymentconfigs/status
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          - image.openshift.io
          resources:
          - imagestreams
          - imagestreamimages
          - imagestreammappings
          - imagestreams/secrets
          - imagestreamtags
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - ""
          - image.openshift.io
          resources:
          - imagestreamimports
          verbs:
          - create
        - apiGroups:
          - ""
          - image.openshift.io
          resources:
          - imagestreams/status
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - get
          - list
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
        - apiGroups:
          - ""
          - template.openshift.io
          resources:
          - processedtemplates
          - templateconfigs
          - templateinstances
          - templates
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - buildlogs
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - authorization.openshift.io
          resources:
          - rolebindings
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
          - patch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - alertmanagers
          - prometheuses
          - servicemonitors
          - prometheusrules
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
        - apiGroups:
          - jaegertracing.io
          resources:
          - jaegers
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - infinispan.org
          resources:
          - infinispans
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - watch
        - apiGroups:
          - apps
          resourceNames:
          - teiid-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        serviceAccountName: teiid-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
    - teiid
    - cloud
    - vdb
    - operator
    - springboot
  labels:
    alm-owner-teiid: teiid-operator
    operated-by: teiid.v0.4.0
  links:
    - name: Product Page
      url: http://teiid.io/
  maintainers:
    - email: teiid-dev@lists.jboss.org
      name: https://teiid.io
  maturity: beta
  replaces: teiid.v0.3.0
  provider:
    name: https://teiid.io
  version: 0.4.0
