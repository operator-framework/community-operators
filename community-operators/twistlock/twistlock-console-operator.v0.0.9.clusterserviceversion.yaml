apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: twistlock-console-operator.v0.0.9
  namespace: placeholder
  annotations:
    support: Twistlock
    containerImage: docker.io/twistlock/console-operator:0.0.9
    createdAt: 2019-04-01T00:00:00Z
    repository: https://github.com/twistlock/sample-code/tree/master/operators/twistlock-console-helm-operator
    categories: Security
    certified: "false"
    description: |-
      Deploy Twistlock cloud native security in Kubernetes.
    alm-examples: '[{"apiVersion":"charts.helm.k8s.io/v1alpha1","kind":"TwistlockConsole","metadata":{"name":"example-twistlockconsole"},"spec":{"COMMUNICATION_PORT":"8084","CONSOLE_CN":"","DATA_FOLDER":"/var/lib/twistlock","DATA_RECOVERY_ENABLED":"true","DATA_RECOVERY_VOLUME":"/var/lib/twistlock-backup","DEFENDER_CN":"","DEFENDER_LISTENER_TYPE":"","DOCKER_SOCKET":"","DOCKER_TWISTLOCK_TAG":"_19_03_317","HIGH_AVAILABILITY_ENABLED":"false","HIGH_AVAILABILITY_PORT":"8086","HIGH_AVAILABILITY_STATE":"PRIMARY","MANAGEMENT_PORT_HTTP":"8081","MANAGEMENT_PORT_HTTPS":"8083","READ_ONLY_FS":"true","RUN_CONSOLE_AS_ROOT":"","SCAP_ENABLED":"","SELINUX_LABEL":"disable","SYSTEMD_ENABLED":"","consoleImageName":"registry-auth.twistlock.com/tw_<REPLACE_TWISTLOCK_TOKEN>/twistlock/console:console_19_03_317","namespace":"twistlock","openshift":false,"persistentVolumeDataFolder":"var/lib/twistlock","persistentVolumeDataRecoveryFolder":"var/lib/twistlock-backup","persistentVolumeStorage":"100Gi","privileged":false,"secrets":[],"selinux-type":"","serviceType":"LoadBalancer","twistlock_cfg":"\"#  _____          _     _   _            _    \\n#
      |_   _|_      _(_)___| |_| | ___   ___| | __  \\n#   | | \\\\ \\\\ /\\\\ / /
      / __| __| |/ _ \\\\ / __| |/ /      \\n#   | |  \\\\ V  V /| \\\\__ \\\\ |_|
      | (_) | (__|   \u003c       \\n#   |_|   \\\\_/\\\\_/ |_|___/\\\\__|_|\\\\___/
      \\\\___|_|\\\\_\\\\\\\\     \\n\\n# This configuration file contains the setup
      parameters for Twistlock\\n# This file is typically stored in the same directory
      as the installation script (twistlock.sh)\\n# To reconfigure settings, update
      this configuration file and re-run twistlock.sh; state and unchanged settings
      will persist\\n\\n\\n\\n#############################################\\n#     Network
      configuration\\n#############################################\\n# Each port
      must be set to a unique value (multiple services cannot share the same port)\\n######
      Management console ports #####\\n# Sets the ports that the Twistlock management
      website listens on\\n# The system that you use to configure Twistlock must be
      able to connect to the Twistlock Console on these ports\\n# To disable the HTTP
      listner, leave the value empty (e.g. MANAGEMENT_PORT_HTTP=)\\nMANAGEMENT_PORT_HTTP=${MANAGEMENT_PORT_HTTP-8081}\\nMANAGEMENT_PORT_HTTPS=8083\\n\\n#####
      Inter-system communication port ##### \\n# Sets the port for communication between
      the Defender(s) and the Console\\nCOMMUNICATION_PORT=8084\\n\\n##### Certificate
      common names (optional) #####\\n# Determines how to construct the CN in the
      Console''s certificate\\n# This value should not be modified unless instructed
      to by Twistlock Support\\nCONSOLE_CN=$(hostname --fqdn 2\u003e/dev/null); if
      [[ $? == 1 ]]; then CONSOLE_CN=$(hostname); fi\\n# Determines how to construct
      the CN in the Defenders'' certificates\\n# Each Defender authenticates to the
      Console with this certificate and each cert must have a unique CN\\n# These
      values should not be modified unless instructed to by Twistlock Support\\nDEFENDER_CN=${DEFENDER_CN:-}\\n\\n#############################################\\n#     Twistlock
      system configuration\\n#############################################\\n######
      Data recovery #####\\n# Data recovery automatically exports the full Twistlock
      configuration to the specified path every 24 hours\\n# Daily, weekly, and monthly
      snapshots are retained\\n# The exported configuration can be stored on durable
      storage or backed up remotely with other tools\\n# Sets data recovery state
      (enabled or disabled)\\nDATA_RECOVERY_ENABLED=true\\n# Sets the directory to
      which Twistlock data is exported\\nDATA_RECOVERY_VOLUME=/var/lib/twistlock-backup\\n\\n#####
      Read only containers #####\\n# Sets Twistlock containers file-system to read-only\\nREAD_ONLY_FS=true\\n\\n#####
      Storage paths #####\\n# Sets the base directory to store Twistlock local data
      (db and log files)\\nDATA_FOLDER=/var/lib/twistlock\\n\\n##### Docker socket
      #####\\n# Sets the location of the Docker socket file\\nDOCKER_SOCKET=${DOCKER_SOCKET:-/var/run/docker.sock}\\n#
      Sets the type of the docker listener (TCP or NONE)\\nDEFENDER_LISTENER_TYPE=${DEFENDER_LISTENER_TYPE:-NONE}\\n\\n####
      SCAP (XCCDF) configuration ####\\n# Sets SCAP state (enabled or disabled)\\nSCAP_ENABLED=${SCAP_ENABLED:-false}\\n\\n####
      systemd configuration ####\\n# Installs Twistlock as systemd service\\nSYSTEMD_ENABLED=${SYSTEMD_ENABLED:-false}\\n\\n####
      userid configuration ####\\n# Run Twistlock console processes as root (default,
      twistlock user account)\\nRUN_CONSOLE_AS_ROOT=${RUN_CONSOLE_AS_ROOT:-false}\\n\\n####
      selinux configuration ####\\n# If SELINUX is enabled in dockerd, enable running
      Twistlock console and defender with a dedicated SELINUX label\\n# See https://docs.docker.com/engine/reference/run/#security-configuration\\nSELINUX_LABEL=disable\\n\\n#############################################\\n#      High
      availability settings\\n#############################################\\n# Only
      to be used when the Console is deployed outside of a Kubernetes cluster\\n#
      This native HA capability uses Mongo clustering and requires 3 or more instances\\nHIGH_AVAILABILITY_ENABLED=false\\nHIGH_AVAILABILITY_STATE=PRIMARY\\nHIGH_AVAILABILITY_PORT=8086\\n\\n\\n\\n#############################################\\n#      Twistlock
      repository configuration\\n#############################################\\n#
      Sets the version tag of the Twistlock containers\\n# Do not modify unless instructed
      to by Twistlock Support\\nDOCKER_TWISTLOCK_TAG=_19_03_317\\n\""}}]'
    capabilities: Basic Install
spec:
  keywords: ['twistlock', 'security', 'monitoring', 'scanning', 'runtime-security']
  maintainers:
  - email: jeremy@twistlock.com
    name: Jeremy Adams, Twistlock
  provider: 
    name: Twistlock
  maturity: alpha
  links:
  - name: Source Code
    url: https://github.com/twistlock/sample-code/tree/master/operators/twistlock-console-helm-operator
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: TwistlockConsole
      name: twistlockconsoles.charts.helm.k8s.io
      displayName: Twistlock Console
      description: |-
        Twistlock Console is installed first and provides policy, API endpoints, GUI, and makes install of Defenders on each node easy through a daemonset.
      version: v1alpha1
  description: |-
    This guide walks through using the Twistlock Console operator 
    powered by Helm using tools and libraries provided by the Operator SDK.
    
    The operator runs as a container that has the Twistlock Console helm charts on board
    and can watch to see if the components are present. If they're not, the
    operator will use Helm to install the Twistlock Console correctly without
    any user interaction!
    
    All you have to to do is tell your cluster about the new TwistlockConsole custom resource by
    applying the included Custom Resource Definition (CRD). Then deploy the operator
    container into the cluster and let it do its thing.
    
    Let's get down to it. All we need from you is the Twistlock registry/docs token
    that came with your license. All of the yaml files you need to deploy are listed below.
    
    ##  Here's the plan:
    
    ```sh
    # Let the cluster know about our new custom resource, TwistlockConsole
    kubectl apply -f deploy/crds/charts_v1alpha1_twistlockconsole_crd.yaml
    # Create the 'twistlock' namespace
    kubectl apply -f deploy/namespace.yaml
    # Create necessary user and permissions to make things happen
    kubectl apply -f deploy/service_account.yaml 
    kubectl apply -f deploy/role.yaml
    kubectl apply -f deploy/role_binding.yaml
    # Deploy the operator container as a pod
    kubectl apply -f deploy/operator.yaml
    # Add your token and apply. For more detail, before you apply the CR, read the note below
    kubectl apply -f deploy/crds/charts_v1alpha1_twistlockconsole_cr.yaml
    ``` 
    
    
    ### Understanding the Twistlock Customer Resource (CR) spec
    
    Helm uses a concept called [values][helm_values] to provide customizations
    to a Helm chart's defaults, which are defined in the Helm chart's `values.yaml`
    file.
    
    Overriding these defaults is as simple as setting the desired values in the CR
    spec. With a Twistlock token from your license you can replace this placeholder 
    `<REPLACE_TWISTLOCK_TOKEN>` with your token.
    
    ```sh
    consoleImageName: registry-auth.twistlock.com/tw_<REPLACE_TWISTLOCK_TOKEN>/twistlock/console:console_19_03_317
    ``` 

    The other option to choose is whether we're on OpenShift, since Kubernetes is the default. If on OpenShift, be sure 
    to add these lines to your CR spec as well:

    ```sh
    openshift: true
    serviceType: NodePort
    ```

  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDQuNzYgMTIwLjQyIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6IzYxMThmZjt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPmNvbG9yLWxvZ29tYXJrPC90aXRsZT48ZyBpZD0iTGF5ZXJfMiIgZGF0YS1uYW1lPSJMYXllciAyIj48ZyBpZD0iTGF5ZXJfMS0yIiBkYXRhLW5hbWU9IkxheWVyIDEiPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSIxMDQuNzYgNDkuNjMgMTA0Ljc2IDMxLjQgODkuMDMgNDAuNDggODkuMDMgNTguNzEgMTA0Ljc2IDQ5LjYzIi8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9Ijg5LjAzIDYyLjI1IDg5LjAzIDc5LjIxIDEwMy43MSA3MC43MyA4OS4wMyA2Mi4yNSIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSI4Ny4wMiA0MS42NyA3MS4yMyA1MC43OSA3MS4yMyA5MS44OCA1My40NCAxMDIuMTYgNTMuNDQgMTIwLjM2IDEwNC43NiA5MC43MiAxMDQuNzYgNzIuNDQgODcuMDIgODIuNjggODcuMDIgNDEuNjciLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iMzUuNTEgMjcuOTggNTAuMyAxOS40MyAzNS41MSAxMC44OSAzNS41MSAyNy45OCIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSIzNC41OSA0OS4wNSA3MC4xNyAyOC41MSA4Ny45NyAzOC43OCAxMDMuNzYgMjkuNjYgNTIuMzggMCAzNi41MiA5LjE2IDU0LjMxIDE5LjQzIDE4LjggMzkuOTQgMzQuNTkgNDkuMDUiLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iMTcuODcgOTkuOCAzMi41OSA5MS4zIDE3Ljg3IDgyLjgxIDE3Ljg3IDk5LjgiLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iNTEuMzggODEuNjEgMTUuNzkgNjEuMDYgMTUuNzkgNDAuNTIgMTQuNzkgMzkuOTQgMTQuNzkgMzkuOTQgMCAzMS40IDAgOTAuNzIgMTUuODcgOTkuODkgMTUuODcgNzkuMzQgNTEuMzggOTkuODQgNTEuMzggODEuNjEiLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iNTEuNDQgMTAyLjE5IDM1LjU5IDkzLjA0IDM1LjU5IDExMS4yNyA1MS40NCAxMjAuNDIgNTEuNDQgMTAyLjE5Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjE3LjggNTkuOSAzMy41OCA2OS4wMiAzMy41OCA1MC43OSAxNy44IDQxLjY3IDE3LjggNTkuOSIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSIxIDI5LjY2IDE2LjggMzguNzggMzIuNjYgMjkuNjIgMTYuODcgMjAuNSAxIDI5LjY2Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjY4LjIzIDcwLjczIDUyLjQ5IDYxLjY0IDM2LjY1IDcwLjc5IDUyLjM4IDc5Ljg3IDY4LjIzIDcwLjczIi8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjUxLjM4IDU5Ljk3IDUxLjM4IDQxLjY3IDM1LjU5IDUwLjc5IDM1LjU5IDY5LjA5IDUxLjM4IDU5Ljk3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9Ijg2IDM5Ljk1IDcwLjE3IDMwLjgyIDU0LjQxIDM5LjkyIDcwLjIzIDQ5LjA1IDg2IDM5Ljk1Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjUzLjM4IDU5Ljg0IDY5LjIzIDY4Ljk5IDY5LjIzIDUwLjc5IDUzLjM4IDQxLjY0IDUzLjM4IDU5Ljg0Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjUzLjM4IDgxLjYxIDUzLjM4IDk5Ljg4IDY5LjIzIDkwLjczIDY5LjIzIDcyLjQ2IDUzLjM4IDgxLjYxIi8+PC9nPjwvZz48L3N2Zz4=
    mediatype: image/svg+xml
  displayName: Twistlock Console Operator
  install:
    spec:
      deployments:
      - name: twistlock-console-helm-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: twistlock-console-helm-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: twistlock-console-helm-operator
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: twistlock-console-helm-operator
                image: twistlock/console-operator:0.0.9
                imagePullPolicy: Always
                name: twistlock-console-helm-operator
                resources: {}
              serviceAccountName: twistlock-console-helm-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - twistlock-console-helm-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - charts.helm.k8s.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: twistlock-console-helm-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  version: 0.0.9
