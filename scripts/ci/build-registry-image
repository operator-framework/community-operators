#!/usr/bin/env bash


# This script transforms an operator dir structured in the style of
# community-operators into one expected by operator-registry, inserts the
# scorecard proxy container, and proxy kubeconfig secret, volume, and mount
# into a CSV, creates CR's from CSV metadata, deploys the operator with the
# OLM in a local cluster, and runs the SDK scorecard against the operator.

set -e

. ./scripts/ci/env

# Create catalog manifests and Dockerfile to create a registry image.

>&2 echo "creating subscription files"
create_subscription_file "$SUBSCRIPTION_FILE" "$PKG_NAME" "$PKG_NAME" "$CHANNEL_NAME" "$CSV_NAME" "$NAMESPACE"
>&2 echo "creating operator group file"
create_operator_group_file "$OPERATOR_GROUP_FILE" "$PKG_NAME" "$CSV_FILE" "$NAMESPACE"
>&2 echo "creating CR file"
create_cr_files_from_metadata "$CSV_FILE" "$CR_DIR" "$NAMESPACE"
>&2 echo "creating kubeconfig secret file"
create_kubeconfig_secret_file "$SECRET_FILE" "$NAMESPACE"
>&2 echo "creating kubeconfig volume file"
insert_kubeconfig_volume "$CSV_FILE"
>&2 echo "creating kubeconfig secret mount"
insert_kubeconfig_secret_mount "$CSV_FILE"

insert_proxy_container "$CSV_FILE" "$SC_PROXY_IMAGE"

>&2 echo "creating config map registry"
python3 /scripts/lib-python/files/configmap-registry.py  -o "$PKG_NAME" -d "${DEPLOY_DIR}/${PKG_NAME}" -n "$NAMESPACE" -v "$OP_VER" -c "$CATALOGSOURCE_FILE"