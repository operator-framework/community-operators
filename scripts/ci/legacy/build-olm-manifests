#!/usr/bin/env bash


# This script transforms an operator dir structured in the style of
# community-operators into one expected by operator-registry, inserts the
# scorecard proxy container, and proxy kubeconfig secret, volume, and mount
# into a CSV, creates CR's from CSV metadata, deploys the operator with the
# OLM in a local cluster, and runs the SDK scorecard against the operator.

set -e
cd /
. /scripts/ci/legacy/env
export_color

CATALOG_IMAGE=$([ "$NO_KIND" == "0" ] && echo "operatorhubio-catalog:temp" || echo "$CATALOG_IMAGE" )

if [ -z "${CATALOG_IMAGE}" ]; then
    echo "CATALOG_IMAGE not set but NO_KIND is to ${NO_KIND}"
    exit 1
fi

printf "    creating catalogsource file %s\t[ ${OK} OK ${NC} ]\n" | expand  -t 50 >&2
create_catalogsource_file "$CATALOGSOURCE_FILE" "$PKG_NAME" "$CATALOG_IMAGE" "$NAMESPACE"

# Create catalog manifests and Dockerfile to create a registry image.
printf "    creating subscription file %s\t[ ${OK} OK ${NC} ]\n" | expand  -t 50 >&2
create_subscription_file "$SUBSCRIPTION_FILE" "$PKG_NAME" "$PKG_NAME" "$CHANNEL_NAME" "$CSV_NAME" "$NAMESPACE"

printf "    creating operator group file %s\t[ ${OK} OK ${NC} ]\n" | expand  -t 50 >&2
python3 /scripts/lib-python/files/create_operator_group_file.py -g "$OPERATOR_GROUP_FILE" -o "$PKG_NAME" -v "$CSV_FILE" -n "$NAMESPACE" -i "$INSTALL_MODE"