#!/usr/bin/env bash
cd /
. /scripts/ci/legacy/env
export_color
KUBECONFIG=~/.kube/config

set -e

declare -A OBJECTS
OBJECTS=(
  ["catalogsource"]="$(yq r "$CATALOGSOURCE_FILE" "metadata.name")"
  ["subscription"]="$(yq r "$SUBSCRIPTION_FILE" "metadata.name")"
  ["csv"]="$CSV_NAME"
  ["deployment"]="$DEP_NAME"
)

if [[ -f "$OPERATOR_GROUP_FILE" ]]; then
    OBJECTS+=(["operatorgroup"]="$(yq r "$OPERATOR_GROUP_FILE" "metadata.name")")
fi


# Run scorecard tests on the operator.
# TODO: run against multiple CR's. Right now the scorecard only works with one
# CR.

printf "Running scorecard trough all supplied CRs %s\t[ ${WARN} Processing ${NC} ]\n" | expand  -t 50 >&2

for config_file in $(find "/tmp/scorecard-bundles" -name "*.bundle.yaml" -print); do

  /scripts/ci/legacy/run-script "operator-sdk scorecard -o text --config $config_file --kubeconfig $KUBECONFIG --verbose --selector='test in (checkspectest,writingintocrshaseffecttest)'" "    Running required tests"

  sleep 10

  /scripts/ci/legacy/run-script "operator-sdk scorecard -o text --config $config_file --kubeconfig $KUBECONFIG --verbose --selector='test in (checkstatustest)'" "    Running recommended tests" false

  # If non-fatal scorecard errors occured, print out operator logs
  if [[ $? != 0 ]]; then
    >&2 echo "\nWARNING: Some recommended tests failed. Printing operator state:"
    LOG_FILE="${TMP}/info.log"
    log_operator_state $LOG_FILE OBJECTS $NAMESPACE
    >&2 cat $LOG_FILE

    >&2 echo "Printing operator logs"; get_operator_logs "$CSV_NAME" "$NAMESPACE"
  fi
done

printf "Running scorecard trough all supplied CRs %s\t[ ${OK} OK ${NC} ]\n" | expand  -t 50 >&2

if [[ "$CLEAN_MODE" == "NORMAL" || "$CLEAN_MODE" == "FORCE" ]]; then
  /scripts/ci/legacy/run-script "delete_objects_incluster $DEPLOY_DIR $NAMESPACE" "Cleaning up Operator resources"
  /scripts/ci/legacy/run-script "delete_objects_incluster $ABS_BUNDLE_PATH $NAMESPACE" "Cleaning up Operator definition"
fi

if [[ "$CLEAN_MODE" == "NORMAL" ]]; then
  /scripts/ci/legacy/run-script "delete_namespace $NAMESPACE $CLEAN_MODE" "Cleaning up namespace"
fi