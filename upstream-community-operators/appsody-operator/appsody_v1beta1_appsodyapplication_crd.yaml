apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: appsodyapplications.appsody.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.applicationImage
    description: Absolute name of the deployed image containing registry and tag
    name: Image
    type: string
  - JSONPath: .spec.expose
    description: Specifies whether deployment is exposed externally via default Route
    name: Exposed
    type: boolean
  - JSONPath: .status.conditions[?(@.type=='Reconciled')].status
    description: Status of the reconcile condition
    name: Reconciled
    type: string
  - JSONPath: .status.conditions[?(@.type=='Reconciled')].reason
    description: Reason for the failure of reconcile condition
    name: Reason
    priority: 1
    type: string
  - JSONPath: .status.conditions[?(@.type=='Reconciled')].message
    description: Failure message from reconcile condition
    name: Message
    priority: 1
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: Age of the resource
    name: Age
    type: date
  group: appsody.dev
  names:
    kind: AppsodyApplication
    listKind: AppsodyApplicationList
    plural: appsodyapplications
    singular: appsodyapplication
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            applicationImage:
              type: string
            architecture:
              items:
                type: string
              type: array
            autoscaling:
              properties:
                maxReplicas:
                  format: int32
                  minimum: 1
                  type: integer
                minReplicas:
                  format: int32
                  type: integer
                targetCPUUtilizationPercentage:
                  format: int32
                  type: integer
              type: object
            createAppDefinition:
              type: boolean
            createKnativeService:
              type: boolean
            env:
              items:
                type: object
              type: array
            envFrom:
              items:
                type: object
              type: array
            expose:
              type: boolean
            livenessProbe:
              type: object
            monitoring:
              properties:
                endpoints:
                  items:
                    properties:
                      basicAuth:
                        description: 'BasicAuth allow an endpoint to authenticate
                          over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                        properties:
                          password:
                            description: The secret that contains the password for
                              authenticate
                            type: object
                          username:
                            description: The secret that contains the username for
                              authenticate
                            type: object
                        type: object
                      bearerTokenFile:
                        description: File to read bearer token for scraping targets.
                        type: string
                      honorLabels:
                        description: HonorLabels chooses the metric's labels on collisions
                          with target labels.
                        type: boolean
                      interval:
                        description: Interval at which metrics should be scraped
                        type: string
                      metricRelabelings:
                        description: MetricRelabelConfigs to apply to samples before
                          ingestion.
                        items:
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. defailt is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      params:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: Optional HTTP URL parameters
                        type: object
                      path:
                        description: HTTP path to scrape for metrics.
                        type: string
                      port:
                        description: Name of the service port this endpoint refers
                          to. Mutually exclusive with targetPort.
                        type: string
                      proxyUrl:
                        description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                          to proxy through this endpoint.
                        type: string
                      relabelings:
                        description: 'RelabelConfigs to apply to samples before ingestion.
                          More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        items:
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. defailt is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      scheme:
                        description: HTTP scheme to use for scraping.
                        type: string
                      scrapeTimeout:
                        description: Timeout after which the scrape is ended
                        type: string
                      targetPort:
                        anyOf:
                        - type: string
                        - type: integer
                        description: Name or number of the target port of the endpoint.
                          Mutually exclusive with port.
                      tlsConfig:
                        description: TLS configuration to use when scraping the endpoint
                        properties:
                          caFile:
                            description: The CA cert to use for the targets.
                            type: string
                          certFile:
                            description: The client cert file for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: The client key file for the targets.
                            type: string
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    type: object
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  type: object
              type: object
            pullPolicy:
              type: string
            pullSecret:
              type: string
            readinessProbe:
              type: object
            replicas:
              format: int32
              type: integer
            resourceConstraints:
              type: object
            service:
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                port:
                  format: int32
                  maximum: 65536
                  minimum: 1
                  type: integer
                type:
                  type: string
              type: object
            serviceAccountName:
              type: string
            stack:
              type: string
            storage:
              properties:
                mountPath:
                  type: string
                size:
                  pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                  type: string
                volumeClaimTemplate:
                  type: object
              type: object
            version:
              type: string
            volumeMounts:
              items:
                type: object
              type: array
            volumes:
              items:
                type: object
              type: array
          required:
          - applicationImage
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                type: object
              type: array
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
