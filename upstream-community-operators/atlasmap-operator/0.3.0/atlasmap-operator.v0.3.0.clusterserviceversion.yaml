apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "atlasmap.io/v1alpha1",
          "kind": "AtlasMap",
          "metadata": {
            "name": "example-atlasmap"
          },
          "spec": {
            "replicas": 1
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Integration & Delivery
    certified: "false"
    containerImage: docker.io/atlasmap/atlasmap-operator
    createdAt: "2019-06-10T06:42:43Z"
    description: AtlasMap is a data mapping solution with an interactive web based
      user interface, that simplifies configuring integrations between Java, XML,
      and JSON data sources
    repository: https://github.com/atlasmap/atlasmap-operator
    support: AtlasMap
  name: atlasmap-operator.v0.3.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: AtlasMap is the Schema for the atlasmaps API
      kind: AtlasMap
      name: atlasmaps.atlasmap.io
      displayName: AtlasMap
      version: v1alpha1
      specDescriptors:
        - description: Desired number of AtlasMap Pods for the cluster
          displayName: Size
          path: replicas
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:Replicas'
            - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        - description: Override the default AtlasMap image tag version
          displayName: Version
          path: version
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:Version'
            - 'urn:alm:descriptor:com.tectonic.ui:text'
        - description: The amount of CPU to limit
          displayName: Limit CPU
          path: limitCPU
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:LimitCPU'
            - 'urn:alm:descriptor:com.tectonic.ui:text'
        - description: The amount of memory to limit
          displayName: Limit Memory
          path: limitMemory
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:LimitMemory'
            - 'urn:alm:descriptor:com.tectonic.ui:text'
        - description:  The amount of CPU to request
          displayName: Request CPU
          path: requestCPU
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:RequestCPU'
            - 'urn:alm:descriptor:com.tectonic.ui:text'
        - description: The amount of memory to request
          displayName: Request Memory
          path: requestMemory
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:RequestMemory'
            - 'urn:alm:descriptor:com.tectonic.ui:text'
        - description: The host name to use for the OpenShift route or Kubernetes Ingress. If not specified, this is generated automatically
          displayName: Route Host Name
          path: routeHostName
          x-descriptors:
            - 'urn:alm:descriptor:com.tectonic.ui:RouteHostName'
            - 'urn:alm:descriptor:com.tectonic.ui:text'
      statusDescriptors:
        - description: URL of the AtlasMap instance
          displayName: URL
          path: URL
        - description: Image used for the AtlasMap containers
          displayName: Image
          path: image
        - description: The current phase that the AtlasMap resource is in
          displayName: Phase
          path: phase
  description: |
    AtlasMap is a data mapping solution with an interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources.

    The AtlasMap operator simplifies the deployment of AtlasMap on OpenShift / Kubernetes clusters.

    For further information about AtlasMap and the operator, visit the documentation.

    * [AtlasMap documentation](https://www.atlasmap.io/)
    * [AtlasMap operator documentation](https://github.com/atlasmap/atlasmap-operator)
  displayName: AtlasMap Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      deployments:
      - name: atlasmap-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: atlasmap-operator
          strategy: {}
          template:
            metadata:
              labels:
                app: atlasmap
                atlasmap.io/component: operator
                name: atlasmap-operator
            spec:
              containers:
              - command:
                - atlasmap-operator
                - --atlasmap-image-version=2.0.5
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: atlasmap-operator
                image: docker.io/atlasmap/atlasmap-operator:0.3.0
                imagePullPolicy: IfNotPresent
                name: atlasmap-operator
                ports:
                - containerPort: 8383
                  name: metrics
                resources: {}
              serviceAccountName: atlasmap-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resourceNames:
          - atlasmap-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - atlasmap.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: atlasmap-operator
      clusterPermissions:
      - rules:
        - apiGroups:
          - config.openshift.io
          resources:
          - clusterversions
          verbs:
          - get
        - apiGroups:
          - console.openshift.io
          resources:
          - consolelinks
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: atlasmap-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - atlasmap
  - data mapping
  - data transformation
  labels:
    name: atlasmap-operator
  links:
  - name: AtlasMap website
    url: https://www.atlasmap.io/
  maintainers:
  - email: fuse-online@redhat.com
    name: Red Hat Fuse Online
  maturity: alpha
  provider:
    name: AtlasMap
  replaces: atlasmap-operator.v0.2.0
  selector:
    matchLabels:
      name: atlasmap-operator
  version: 0.3.0
