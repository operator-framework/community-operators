---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zookeeper
  namespace: "{{ meta.namespace }}"
  labels:
    app: zookeeper
    release: confluent
    operator: ansible
data:
{% if zookeeper.client_port is defined %}
  ZOOKEEPER_CLIENT_PORT: '{{ zookeeper.client_port }}'
{% endif %}
{% if zookeeper.tick_time is defined %}
  ZOOKEEPER_TICK_TIME: '{{ zookeeper.tick_time }}'
{% endif %}
{% if zookeeper.init_limit %}
  ZOOKEEPER_INIT_LIMIT: '{{ zookeeper.init_limit }}'
{% endif %}
{% if zookeeper.sync_limit is defined %}
  ZOOKEEPER_SYNC_LIMIT: '{{ zookeeper.sync_limit }}'
{% endif %}
{% if zookeeper.autopurge_snap_retain_count is defined %}
  ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: '{{ zookeeper.autopurge_snap_retain_count }}'
{% endif %}
{% if zookeeper.autopurge_purge_interval is defined %}
  ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '{{ zookeeper.autopurge_purge_interval }}'
{% endif %}
{% if zookeeper.max_client_cnxns is defined %}
  ZOOKEEPER_MAX_CLIENT_CNXNS: '{{ zookeeper.max_client_cnxns }}'
{% endif %}
{% if zookeeper.log_root_loglevel is defined %}
  ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: "{{ zookeeper.log_root_loglevel }}"
{% endif %}
{% if zookeeper.log_loggers is defined %}
  ZOOKEEPER_LOG4J_LOGGERS: "{{ zookeeper.log_loggers }}"
{% endif %}
{% if zookeeper.kafka_opts is defined %}
  KAFKA_OPTS: "{{ zookeeper.kafka_opts }}"
{% endif %}
---
