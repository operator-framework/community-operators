apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: credstash-operator.v1.13.0
  namespace: placeholder
  annotations:
    alm-examples: >-
      [
        {
        "apiVersion": "credstash.ouzi.tech/v1alpha1",
        "kind": "CredstashSecret",
        "metadata": {
          "name": "very-secret",
          "namespace": "test"
        },
        "spec": {
          "name": "example",
          "secrets": [
            {
              "key": "test-secret",
              "name": "renamed-test-secret",
              "table": "credential-store",
              "version": "1",
              "context": {
                "key1": "value1",
                "key2": "value2"
              }
            }
          ],
          "type": "Opaque"
        }
      }
      ]
    categories: 'Security'
    certified: 'false'
    createdAt: '2020-07-20 01:01:01'
    description: >-
      An operator that creates and manages Kubernetes secrets from Credstash secrets
    containerImage: 'quay.io/ouzi/credstash-operator:v1.13.0'
    support: 'Ouzi Team'
    capabilities: Seamless Upgrades
    repository: 'https://github.com/ouzi-dev/credstash-operator'
spec:
  displayName: credstash-operator
  description:  |
    ### Overview
    [Credstash Operator](https://github.com/ouzi-dev/credstash-operator) is a Kubernetes Controller that allows you to compose Kubernetes Secretes from Credstash Secrets.
    ### Prerequisites
    The controller requires AWS credentials to be set before deploying it. This is accomplished by creating a secret with name aws-credentials in the controller namespace with the following keys;
    ```
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    AWS_REGION
    ```
    For example running the following will create an appropriate secret in the credstash namespace;
    `kubectl create secret generic aws-credentials --from-literal=AWS_ACCESS_KEY_ID=access_key --from-literal=AWS_SECRET_ACCESS_KEY=secret_access_key --from-literal=AWS_REGION=us-west-2 --namespace=placeholder`
    ### Example Credstash Secrets
    #### Opaque
    ```
    apiVersion: credstash.ouzi.tech/v1alpha1
    kind: CredstashSecret
    metadata:
      name: very-secret
      namespace: test
    spec:
      # Name of the target secret (Optional. Defaults to the CR name)
      name: example
      # List of secrets from credstash to add to the body of the secret
      secrets:
          # key: the key in credstash to fetch. (Required)
        - key: test-secret
          # name: the name of the resulting data element in the k8s secret (Optional. Defaults to the credstash key)
          name: renamed-test-secret
          # table: the dynamoDB table that contains the credstash secrets (Optional. Defaults to credential-store)
          table: credential-store
          # version: the version of the secret in credstash for the provided key (Optional. Defaults to the latest version)
          version: 1
          # context: key value pairs to the encryption context (Optional)
          context:
            key1: value1
            key2: value2
      # type: the type of the resulting kubernetes secret (Optional. Defaults to Opaque)
      type: Opaque
    ```
    #### Docker Config
    ```
    apiVersion: credstash.ouzi.tech/v1alpha1
    kind: CredstashSecret
    metadata:
      name: dockerconfigjson
      namespace: test
    spec:
      # Name of the target secret (Optional. Defaults to the CR name)
      name: dockerconfigjson
      # List of secrets from credstash to add to the body of the secret
      secrets:
          # key: the key in credstash to fetch. (Required)
        - key: docker_secret
          # name: the name of the resulting data element in the k8s secret (Optional. Defaults to the credstash key)
          name: .dockerconfigjson
          # table: the dynamoDB table that contains the credstash secrets (Optional. Defaults to credential-store)
          table: credential-store
          # context: key value pairs to the encryption context (Optional)
          context:
            key1: value1
            key2: value2
      # type: the type of the resulting kubernetes secret (Optional. Defaults to Opaque)
      type: kubernetes.io/dockerconfigjson
    ```
    ### Documentation
    For further Documentation, visit the [credstash-operator repo in github](https://github.com/ouzi-dev/credstash-operator)

  maturity: alpha
  version: 1.13.0
  minKubeVersion: 1.14.0
  keywords:
    - k8s
    - credstash
    - secret
  maintainers:
    - name: Ouzi Team
      email: team@ouzi.dev
  provider:
    name: Ouzi
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Operator Source Code
      url: 'https://github.com/ouzi-dev/credstash-operator'
    - name: https://ouzi.io
      url: 'https://ouzi.io'
  icon:
    - base64data: ''
      mediatype: 'image/png'
  customresourcedefinitions:
    owned:
      - description: CredstashSecret is the Schema for the credstashsecrets API
        kind: CredstashSecret
        name: credstashsecrets.credstash.ouzi.tech
        version: v1alpha1
        specDescriptors: []
        statusDescriptors: []
        resources:
          - version: v1
            kind: Secret
        displayName: CredstashSecret
    required: []
  install:
    strategy: deployment
    spec:
      permissions: []
      clusterPermissions:
        - rules:
            - apiGroups:
                - ''
              resources:
                - pods
                - services
                - services/finalizers
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - deployments
                - replicasets
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - credstash-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - credstash.ouzi.tech
              resources:
                - '*'
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
          serviceAccountName: credstash-operator
      deployments:
        - name: credstash-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: credstash-operator
            strategy: {}
            template:
              metadata:
                labels:
                  name: credstash-operator
              spec:
                containers:
                  - command:
                      - credstash-operator
                    args:
                      - --aws-config-secret
                      - aws-credentials
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: SERVICE_MONITOR_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: OPERATOR_NAME
                        value: credstash-operator
                    image: 'quay.io/ouzi/credstash-operator:v1.13.0'
                    imagePullPolicy: Always
                    name: credstash-operator
                    resources: {}
                serviceAccountName: credstash-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: true
  apiservicedefinitions: {}
