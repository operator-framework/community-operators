apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ibmapplicationgateways.ibm.com
spec:
  group: ibm.com
  names:
    kind: IBMApplicationGateway
    listKind: IBMApplicationGatewayList
    plural: ibmapplicationgateways
    singular: ibmapplicationgateway
  scope: Namespaced
  subresources:
    status: {}
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
      labelSelectorPath: .status.labelSelector
  validation:
    openAPIV3Schema:
      description: IAG is the Schema for the iags API
      properties:
        apiVersion:
          description: >-
            APIVersion defines the versioned schema of this representation of an
            object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: >-
            Kind is a string value representing the REST resource this object
            represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: IAGSpec defines the desired state of IAG.
          type: object
          properties:
            replicas:
              type: integer
              description: The number of IBM Application Gateway replicas to create.
            deployment:
              type: object
              description: Defines the IBM Application Gateway deployment properties.
              properties:
                image:
                  description: >-
                    The name, tag and location of the IBM Application Gateway
                    docker image.
                  type: string
                imagePullPolicy:
                  description: >-
                    The policy used to decide when to pull the IBM Application
                    Gateway docker image from a remote server. Default value is
                    IfNotPresent.
                  type: string
                  enum:
                    - Never
                    - Always
                    - IfNotPresent
                imagePullSecrets:
                  type: array
                  description: >-
                    A list of Kubernetes secrets that will be set on the IBM
                    Application Gateway deployment.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          The name of the Kubernetes secret that defines the
                          required remote server authentication credentials.
                    required:
                      - name
                serviceAccountName:
                  description: >-
                    The Kubernetes service account that will run the IBM
                    Application Gateway applications.
                  type: string
                lang:
                  description: >-
                    The language for the IBM Application Gateway application.
                    Default value is English (en).
                  type: string
                readinessProbe:
                  type: object
                  description: The settings for the readiness probe.
                  properties:
                    initialDelaySeconds:
                      description: >-
                        The initial delay (in seconds) before starting the IBM
                        Application Gateway application readiness poll. Default
                        value is 0. Minimum value is 0.
                      type: integer
                      minimum: 0
                    periodSeconds:
                      description: >-
                        The wait period (in seconds) between IBM Application
                        Gateway application readiness polling. Default value is
                        10. Minimum value is 1.
                      type: integer
                      minimum: 1
                    failureThreshold:
                      description: >-
                        The number of times the probe will be tried before
                        failing. Failure will result in the Pod will be marked
                        Unready. Default value is 3. Minimum value is 1.
                      type: integer
                      minimum: 1
                    successThreshold:
                      description: >-
                        The number of consecutive successes for the probe to be
                        considered successful after having failed. Default value
                        is 1. Minimum value is 1.
                      type: integer
                      minimum: 1
                    timeoutSeconds:
                      description: >-
                        The number of seconds after which the probe times out.
                        Default value is 1. Minimum value is 1.
                      type: integer
                      minimum: 1
                livenessProbe:
                  type: object
                  description: The settings for the liveness probe.
                  properties:
                    initialDelaySeconds:
                      description: >-
                        The initial delay (in seconds) before starting the IBM
                        Application Gateway application liveness poll. Default
                        value is 0. Minimum value is 0.
                      type: integer
                      minimum: 0
                    periodSeconds:
                      description: >-
                        The wait period (in seconds) between IBM Application
                        Gateway application liveness polling. Default value is
                        10. Minimum value is 1.
                      type: integer
                      minimum: 1
                    failureThreshold:
                      description: >-
                        The number of times the probe will be tried before
                        failing. Failure will result in the container being
                        restarted. Default value is 3. Minimum value is 1.
                      type: integer
                      minimum: 1
                    timeoutSeconds:
                      description: >-
                        The number of seconds after which the probe times out.
                        Default value is 1. Minimum value is 1.
                      type: integer
                      minimum: 1
              required:
                - image
            configuration:
              type: array
              description: Defines the IBM Application Gateway configuration properties.
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - configmap
                      - literal
                      - web
                      - oidc_registration
                  name:
                    type: string
                    description: >-
                      The name of the config map that contains the IBM
                      Application Gateway configuration. Required for configmap
                      type.
                  dataKey:
                    type: string
                    description: >-
                      The config map YAML entry that contains the IBM
                      Application Gateway configuration. Required for configmap
                      type.
                  value:
                    type: string
                    description: >-
                      The IBM Application Gateway configuration YAML text.
                      Required for literal type.
                  url:
                    type: string
                    description: >-
                      The URL location of the remote IBM Application Gateway
                      configuration. Required for web type.
                  discoveryEndpoint:
                    type: string
                    description: >-
                      The discovery endpoint used to retrieve the OIDC OP
                      registration endpoint to dynamically register a new
                      client. Required for oidc_registration type.
                  postData:
                    type: array
                    description: >-
                      A list of keys and values that will be added to the
                      registration request as POST data. This must include the
                      mandatory redirect_uris value. Required for
                      oidc_registration type.
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: >-
                            The key name of the data value to add to the
                            request.
                        value:
                          type: string
                          description: >-
                            A single data value to add to the request. If this
                            property is specified the values property will be
                            ignored. Required if the values property has not
                            been specified.
                        values:
                          type: array
                          description: >-
                            A list of data values to add to the request as an
                            array. If the value property has been specified this
                            property will be ignored. Required if the value
                            property has not been specified.
                          items:
                            type: string
                      required:
                        - name
                  secret:
                    type: string
                    description: >-
                      The name of a Kubernetes secret that contains any
                      authorization data required for the OIDC client
                      registration. The resulting client_id and secret will also
                      be added to this secret. Required for oidc_registration
                      type.
                  headers:
                    type: array
                    description: >-
                      A list of headers to add to the HTTP request to retrieve
                      the configuration source.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          description: >-
                            The value type. A literal type will add the value
                            directly to the new header. A secret type will
                            lookup a Kubernetes secret to retrieve the value.
                          enum:
                            - literal
                            - secret
                        name:
                          type: string
                          description: >-
                            The name of the header that will be added to the
                            HTTP request.
                        value:
                          type: string
                          description: >-
                            The value of the header that will be added to the
                            HTTP request. If the type is set as secret this will
                            be the name of the Kubernetes secret.
                        secretKey:
                          type: string
                          description: >-
                            The key name to retrieve the header value from the
                            specified Kubernetes secret. Required if the type is
                            set as secret.
                      required:
                        - type
                        - name
                        - value
                required:
                  - type
        status:
          description: IAGStatus defines the observed state of IAG
          type: object
      type: object
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
