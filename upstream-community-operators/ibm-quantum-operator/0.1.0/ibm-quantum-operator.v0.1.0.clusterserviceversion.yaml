apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "singhp11.io/v1",
          "kind": "Ibmq",
          "metadata": {
            "name": "example-ibmq"
          }
        }
      ]
    capabilities: Basic Install
    categories: Application Runtime
    certified: "false"
    createdAt: 2020-008-28 22:25:53
    containerImage: quay.io/application/husky_parul/ibm-quantum-operator
    support: https://github.com/redhat-et/ibm-quantum-operator/issues
    repository: https://github.com/redhat-et/ibm-quantum-operator
    description: |-
      Operator to run quantum circuits build using Qiskit on IBM quantum systems

  name: ibm-quantum-operator.v0.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Operator to run quantum circuits build using Qiskit on IBM quantum systems
        kind: Ibmq
        name: ibmqs.singhp11.io
        version: v1
  displayName: Ibm Quantum Operator
  description: |-

    #### Introduction
    IBM quantum operator creates a flexible serving system for quantum circuits implemented in Qiskit. 

    Here are some key features:
    #### Flexible REST endpoints for running quantum workloads in a Kubernetes cluster

    You can submit quantum workloads implemented in Qiskit which are executed on IBM Quantum Experience. Workloads are executed as pods, orchestrated and managed by Kube APIs  


    #### Environment Configuration & Scheduling 
    The operator authenticated the caller and mount the equivalent secrets on the quantum workloads pods. The default scheduler picks the least busy backend thats satisfies number of qubits requested for the workload. 

    #### High Availability via Horizontal Pod Autoscaling
    Run multiple instances of the server system for high availability. Either specify
    a static number of replicas or easily configure horizontal auto scaling to create (and delete)
    instances based on resource consumption.

    #### IBM Quantum Experience

    IBM Quantum Experience is quantum on the cloud. With IBM Quantum Experience you can

    Put quantum to work - Run experiments on IBM Q systems and simulators available to the public and IBM Q Network.
    Develop and deploy - Explore quantum applications in areas such as chemistry, optimization, finance, and AI.
    Quantum innovation - Stay informed and contribute to the future of quantum. Be part of the largest quantum community.

    Qiskit is an open-source framework for working with quantum computers at the level of circuits, pulses, and algorithms. A central goal of Qiskit is
    to build a software stack that makes it easy for anyone to use quantum computers. 



    ### Documentation
    For detailed installation guide [follow](https://github.com/redhat-et/ibm-quantum-operator/blob/master/README.md)

    ###Note

    The user needs to ensure that the secret exists in their Kuberenetes namespace/project where the operator will be installed. 
    Any api could be changed any time without any notice. That said, your feedback is very important and appreciated to make this project more stable and useful.

    ### Contributing
    You can contribute by
      * Raising any [issues](https://github.com/redhat-et/ibm-quantum-operator/issues) you find using ibm-quantum-operator community operator
      * Fixing issues by opening [Pull Requests](https://github.com/redhat-et/ibm-quantum-operator/pulls)
      * Talking about ibm-quantum-operator
      
    ### License
    ibm-quantum-operator is licensed under the [Apache 2.0 license](https://github.com/redhat-et/ibm-quantum-operator/blob/master/LICENSE)
  keywords: ["open source", "qiskit", "quantum", "IBM Quantum Experience"]
  provider:
    name: IBM Quantum
  maintainers:
    - name: Ismael Faro
      email: ismael.faro1@ibm.com
  links:
    - name: GitHub
      url: https://github.com/redhat-et/ibm-quantum-operator
  icon:
    - base64data: >-
        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
      mediatype: image/png
  install:
    spec:
      deployments:
        - name: ibm-quantum-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: ibm-quantum-operator
            strategy: {}
            template:
              metadata:
                labels:
                  name: ibm-quantum-operator
              spec:
                containers:
                  - command:
                      - ibm-quantum-operator
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: ibm-quantum-operator
                    image: quay.io/husky_parul/ibm-q:v0.1.0
                    imagePullPolicy: Always
                    name: ibm-quantum-operator
                    resources: {}
                serviceAccountName: ibm-quantum-operator
      permissions:
        - rules:
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - pods
                - services
                - services/finalizers
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - ibm-quantum-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - replicasets
                - deployments
              verbs:
                - get
            - apiGroups:
                - singhp11.io
              resources:
                - "*"
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
          serviceAccountName: ibm-quantum-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  maturity: alpha
  version: 0.1.0
