apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n    {\n        \"apiVersion\": \"instana.io/v1beta1\",\n   \
      \     \"kind\": \"InstanaAgent\",\n        \"metadata\": {\n            \"name\"\
      : \"instana-agent\",\n            \"namespace\": \"instana-agent\"\n       \
      \ },\n        \"spec\": {\n            \"agent.zone.name\": \"my-zone\",\n \
      \           \"agent.key\": \"replace-me\",\n            \"agent.endpoint.host\"\
      : \"ingress-red-saas.instana.io\",\n            \"agent.endpoint.port\": 443,\n\
      \            \"agent.env\": {\n                \"INSTANA_AGENT_TAGS\": \"example\"\
      \n            },\n            \"cluster.name\": \"replace-me\",\n          \
      \  \"config.files\": {\n                \"configuration.yaml\": \"# You can\
      \ leave this empty, or use this to configure your instana agent.\\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\\\
      n\"\n            }\n        }\n    }\n]"
    capabilities: Basic Install
    categories: Monitoring,OpenShift Optional
    certified: 'false'
    containerImage: instana/instana-agent-operator:0.3.8
    createdAt: '2020-11-06T20:47:17Z'
    description: Fully automated Application Performance Monitoring (APM) for microservices.
    repository: https://github.com/instana/instana-agent-operator
    support: Instana
  name: instana-agent-operator.v0.3.8
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Instana Agent
      displayName: Instana Agent
      kind: InstanaAgent
      name: agents.instana.io
      specDescriptors:
      - description: Name of the Kubernetes Cluster
        displayName: zone
        path: agent.zone.name
      - description: Your Instana API key
        displayName: key
        path: agent.key
      - description: Endpoint hostname the Instana agent should connect to. Might
          be adjusted depending on your deployment type (SaaS or On-Premises) and
          region.
        displayName: endpoint.host
        path: agent.endpoint.host
      - description: Endpoint port the Instana agent should connect to. Might be adjusted
          depending on your deployment type (SaaS or On-Premises) and region.
        displayName: endpoint.port
        path: agent.endpoint.port
      - description: configuration.yaml file that will be copied into the Instana
          agent instances.
        displayName: configuration.yaml
        path: config.files.configuration.yaml
      version: v1beta1
  description: "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/)\
    \ built for microservices that enables IT Ops to build applications faster and\
    \ deliver higher quality services by automating monitoring, tracing and root cause\
    \ analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/)\
    \ and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\
    \n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing\
    \ the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\
    \nBefore the agent will be able to run in OpenShift, you need to perform a couple\
    \ of extra configuration steps.\n\nYou need to set up a project for the Instana\
    \ Agent and configure it's permissions.\n\nThe project you create here needs to\
    \ be the namespace where you create the Instana Agent custom resource that the\
    \ operator will use to deploy the agent.\n\nFor example, create the `instana-agent`\
    \ project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent`\
    \ service account is in the privileged security context:\n\n    oc adm policy\
    \ add-scc-to-user privileged -z instana-agent\n\nThis service account will be\
    \ created by the operator.\n\nNow you can proceed with installing the operator\
    \ for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install\
    \ this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container\
    \ Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond,\
    \ create the target namespace where the Instana agent should be installed. The\
    \ agent does not need to run in the same namespace as the operator. Most users\
    \ create a new namespace `instana-agent` for running the agents.\n\nThird, create\
    \ a custom resource with the agent configuration in the target namespace. The\
    \ operator will pick up the custom resource and install the Instana agent accordingly.\n\
    \nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion:\
    \ instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n \
    \ namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name\
    \ of the zone of the host\n  agent.key: replace-me # replace with your Instana\
    \ agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring\
    \ ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint\
    \ port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name:\
    \ replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n\
    \    configuration.yaml: |\n      # You can leave this empty, or use this to configure\
    \ your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n\
    ```\n\nSave the template in a file `instana-agent.yaml` and edit the following\
    \ values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:`\
    \ accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint`\
    \ must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io`\
    \ or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the\
    \ monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name`\
    \ should be set with the name of the Kubernetes cluster that is be displayed in\
    \ Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml`\
    \ file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\
    \nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After\
    \ some time, you should see `instana-agent` Pods being created on each node of\
    \ your cluster, and your cluster should show on the infrastructure map on your\
    \ Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana\
    \ agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\
    \n## Source Code\n\nThe Instana agent operator is an open source project hosted\
    \ on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n"
  displayName: Instana Agent Operator
  icon:
  - base64data: 
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ''
          - extensions
          - apps
          - rbac.authorization.k8s.io
          resources:
          - serviceaccounts
          - clusterroles
          - clusterrolebindings
          - secrets
          - configmaps
          - daemonsets
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - ''
          - apiextensions.k8s.io
          resources:
          - pods
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ''
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - instana.io
          resources:
          - agents
          verbs:
          - get
          - update
          - list
          - watch
        - apiGroups:
          - ''
          resources:
          - componentstatuses
          - endpoints
          - events
          - namespaces
          - nodes
          - pods
          - replicationcontrollers
          - resourcequotas
          - services
          - persistentvolumes
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ''
          resources:
          - endpoints
          verbs:
          - create
          - update
          - patch
        - apiGroups:
          - apps
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          - cronjobs
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - extensions
          resources:
          - deployments
          - ingresses
          - replicasets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          verbs:
          - get
          - list
          - watch
        serviceAccountName: instana-agent-operator
      deployments:
      - name: instana-agent-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: instana-agent-operator
          template:
            metadata:
              labels:
                app.kubernetes.io/name: instana-agent-operator
                app.kubernetes.io/version: 0.3.8
            spec:
              containers:
              - env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: TARGET_NAMESPACES
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: instana/instana-agent-operator:0.3.8
                imagePullPolicy: Always
                name: instana-agent-operator
                ports:
                - containerPort: 8080
              serviceAccountName: instana-agent-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - monitoring
  - APM
  - Instana
  links:
  - name: GitHub Repository
    url: https://github.com/instana/instana-agent-operator
  maintainers:
  - email: support@instana.com
    name: Instana
  maturity: beta
  minKubeVersion: 1.11.0
  provider:
    name: Instana
  replaces: instana-agent-operator.v0.3.7
  version: 0.3.8
