# vim: nowrap
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [{
       "apiVersion": "instana.io/v1alpha1",
       "kind": "InstanaAgent",
       "metadata": {
          "name": "instana-agent",
          "namespace": "instana-agent"
       },
       "spec": {
          "agent.zone.name": "my-k8s-cluster",
          "agent.key": "_PUT_YOUR_AGENT_KEY_HERE_",
          "agent.endpoint.host": "saas-us-west-2.instana.io",
          "agent.endpoint.port": 443,
          "config.files": {
            "configuration.yaml": "# See https://docs.instana.io/quick_start/agent_setup/container/kubernetes/"
          }
       }
      }]
    categories: "Monitoring,OpenShift Optional"
    certified: "false"
    containerImage: instana/instana-agent-operator:0.0.2
    createdAt: 2019-04-23T14:17:43Z
    description: Instana APM Agent
    support: Instana
    repository: https://github.com/instana/instana-agent-operator
    capabilities: Basic Install
  name: instana-agent-operator.v0.0.2
  namespace: placeholder
spec:
  displayName: "Instana Agent Operator"
  description: |-
    # Kubernetes Operator for the Instana APM Agent
    
    This is an experimental alpha version of the upcoming Kubernetes Operator for the [Instana APM Agent](https://www.instana.com).
    
    This operator is intended to run in the `instana-agent` namespace. Before creating the subscription, please create the following resources:
    
    * `instana-agent` namespace
    * `instana-agent` operator group
    
    See [https://github.com/instana/instana-agent-operator/blob/master/docs/install-via-olm.md](https://github.com/instana/instana-agent-operator/blob/master/docs/install-via-olm.md) for documentation.
  icon:
   - base64data: 
     mediatype: image/svg+xml
  version: 0.0.2
  minKubeVersion: 1.11.0
  provider:
    name: Instana
  links:
    - name: GitHub Repository
      url: https://github.com/instana/instana-agent-operator
  keywords: ['monitoring', 'APM', 'Instana']
  maintainers:
    - email: support@instana.com
      name: Instana
  maturity: alpha
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Instana Agent
        displayName: Instana Agent
        kind: InstanaAgent
        name: agents.instana.io
        version: v1alpha1
        statusDescriptors:
          - description: Name of the Kubernetes Cluster
            displayName: zone
            path: agent.zone.name
          - description: Your Instana API key
            displayName: key
            path: agent.key
          - description: Endpoint hostname the Instana agent should connect to. Might be adjusted depending on your deployment type (SaaS or On-Premises) and region.
            displayName: endpoint.host
            path: agent.endpoint.host
          - description: Endpoint port the Instana agent should connect to. Might be adjusted depending on your deployment type (SaaS or On-Premises) and region.
            displayName: endpoint.port
            path: agent.endpoint.port
          - description: configuration.yaml file that will be copied into the Instana agent instances.
            displayName: configuration.yaml
            path: config.files.configuration.yaml
  install:
    strategy: deployment
    spec:
      clusterPermissions:
        - serviceAccountName: instana-agent-operator
          rules:
          # TODO: This is an experimental alpha version. We didn't clean up the permissions yet,
          # so these are probably more rights than needed for running the operator.
          # This will be cleaned up before promoting the operator to beta.
          - apiGroups: ["", "apps", "extensions", "rbac.authorization.k8s.io"] # "" indicates the core API group
            resources:
            - pods
            - pods/exec
            - services
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
            - replicasets
            - deployments
            - daemonsets
            - clusterroles
            - clusterrolebindings
            - serviceaccounts
            verbs:
            - '*'
          - apiGroups: ["apiextensions.k8s.io", "customresourcedefinitions.apiextensions.k8s.io"]
            resources:
            - customresourcedefinitions
            verbs:
            - list
          - apiGroups: ["instana.io"]
            resources:
            - agents
            verbs:
            - watch
            - list
            - get
            - update
      deployments:
        - name: instana-agent-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                k8s-app: instana-agent-operator
            template:
              metadata:
                labels:
                  k8s-app: instana-agent-operator
              spec:
                serviceAccount: instana-agent-operator
                containers:
                - image: instana/instana-agent-operator:0.0.2
                  name: instana-agent-operator
                  imagePullPolicy: IfNotPresent
                  env:
                  - name: POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  ports:
                  - containerPort: 8080 # health
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: true
    - type: AllNamespaces
      supported: true
