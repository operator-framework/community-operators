apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "deviceplugin.intel.com/v1",
          "kind": "FpgaDevicePlugin",
          "metadata": {
            "name": "fpgadeviceplugin-sample"
          },
          "spec": {
            "image": "intel/intel-fpga-plugin:0.19.0"
          }
        },
        {
          "apiVersion": "deviceplugin.intel.com/v1",
          "kind": "GpuDevicePlugin",
          "metadata": {
            "name": "gpudeviceplugin-sample"
          },
          "spec": {
            "image": "intel/intel-gpu-plugin:0.18.0"
          }
        },
        {
          "apiVersion": "deviceplugin.intel.com/v1",
          "kind": "QatDevicePlugin",
          "metadata": {
            "name": "qatdeviceplugin-sample"
          },
          "spec": {
            "image": "intel/intel-qat-plugin:0.18.0"
          }
        },
        {
          "apiVersion": "deviceplugin.intel.com/v1",
          "kind": "SgxDevicePlugin",
          "metadata": {
            "name": "sgxdeviceplugin-sample"
          },
          "spec": {
            "enclaveLimit": 110,
            "image": "intel/intel-sgx-plugin:0.19.0",
            "initImage": "intel/intel-sgx-initcontainer:0.19.0",
            "provisionLimit": 110
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.0-nlb0-orchestrated"
          },
          "spec": {
            "afuId": "d8424dc4a4a3c413f89e433683f9040b",
            "interfaceId": "ce48969398f05f33946d560708be108a",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.0-nlb3-orchestrated"
          },
          "spec": {
            "afuId": "f7df405cbd7acf7222f144b0b93acd18",
            "interfaceId": "ce48969398f05f33946d560708be108a",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.1-nlb0-orchestrated"
          },
          "spec": {
            "afuId": "d8424dc4a4a3c413f89e433683f9040b",
            "interfaceId": "9926ab6d6c925a68aabca7d84c545738",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.1-nlb3-orchestrated"
          },
          "spec": {
            "afuId": "f7df405cbd7acf7222f144b0b93acd18",
            "interfaceId": "9926ab6d6c925a68aabca7d84c545738",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.2-nlb0-orchestrated"
          },
          "spec": {
            "afuId": "d8424dc4a4a3c413f89e433683f9040b",
            "interfaceId": "69528db6eb31577a8c3668f9faa081f6",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.2-nlb0-preprogrammed"
          },
          "spec": {
            "afuId": "d8424dc4a4a3c413f89e433683f9040b",
            "interfaceId": "69528db6eb31577a8c3668f9faa081f6",
            "mode": "af"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.2-nlb3-orchestrated"
          },
          "spec": {
            "afuId": "f7df405cbd7acf7222f144b0b93acd18",
            "interfaceId": "69528db6eb31577a8c3668f9faa081f6",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "arria10.dcp1.2-nlb3-preprogrammed"
          },
          "spec": {
            "afuId": "f7df405cbd7acf7222f144b0b93acd18",
            "interfaceId": "69528db6eb31577a8c3668f9faa081f6",
            "mode": "af"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "d5005-matrix-mult-orchestrated"
          },
          "spec": {
            "afuId": "40007c0623210742000ebc58df6f5343e668b03a",
            "interfaceId": "bfac4d851ee856fe8c95865ce1bbaa2d",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "d5005-nlb0-orchestrated"
          },
          "spec": {
            "afuId": "d8424dc4a4a3c413f89e433683f9040b",
            "interfaceId": "bfac4d851ee856fe8c95865ce1bbaa2d",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "d5005-nlb3-orchestrated"
          },
          "spec": {
            "afuId": "f7df405cbd7acf7222f144b0b93acd18",
            "interfaceId": "bfac4d851ee856fe8c95865ce1bbaa2d",
            "mode": "region"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "AcceleratorFunction",
          "metadata": {
            "name": "d5005-nlb3-preprogrammed"
          },
          "spec": {
            "afuId": "f7df405cbd7acf7222f144b0b93acd18",
            "interfaceId": "bfac4d851ee856fe8c95865ce1bbaa2d",
            "mode": "af"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "FpgaRegion",
          "metadata": {
            "name": "arria10.dcp1.0"
          },
          "spec": {
            "interfaceId": "ce48969398f05f33946d560708be108a"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "FpgaRegion",
          "metadata": {
            "name": "arria10.dcp1.1"
          },
          "spec": {
            "interfaceId": "9926ab6d6c925a68aabca7d84c545738"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "FpgaRegion",
          "metadata": {
            "name": "arria10.dcp1.2"
          },
          "spec": {
            "interfaceId": "69528db6eb31577a8c3668f9faa081f6"
          }
        },
        {
          "apiVersion": "fpga.intel.com/v2",
          "kind": "FpgaRegion",
          "metadata": {
            "name": "d5005"
          },
          "spec": {
            "interfaceId": "bfac4d851ee856fe8c95865ce1bbaa2d"
          }
        }
      ]
    capabilities: Basic Install
    categories: "Drivers and plugins"
    certified: "false"
    containerImage: intel/intel-deviceplugin-operator:0.19.0
    createdAt: 2020-12-02T13:31:00
    description: This One Operator is a Kubernetes custom controller whose goal is to serve the installation and lifecycle management of Intel device plugins for Kubernetes.
    operators.operatorframework.io/builder: operator-sdk-v1.2.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    support: Intel
    repository: https://github.com/intel/intel-device-plugins-for-kubernetes
  name: intel-device-plugins-operator.v0.19.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: AcceleratorFunction is a specification for an Accelerator Function resource provided by a FPGA-based programmable hardware accelerator.
      displayName: Accelerator Function
      kind: AcceleratorFunction
      name: acceleratorfunctions.fpga.intel.com
      version: v2
    - description: FpgaDevicePlugin is the Schema for the fpgadeviceplugins API. It represents the FPGA device plugin responsible for advertising Intel FPGA hardware resources to the kubelet.
      displayName: Intel FPGA Device Plugin
      kind: FpgaDevicePlugin
      name: fpgadeviceplugins.deviceplugin.intel.com
      version: v1
    - description: FpgaRegion is a specification for a FPGA region resource which can be programmed with a bitstream.
      displayName: FPGA Region
      kind: FpgaRegion
      name: fpgaregions.fpga.intel.com
      version: v2
    - description: GpuDevicePlugin is the Schema for the gpudeviceplugins API. It represents the GPU device plugin responsible for advertising Intel GPU hardware resources to the kubelet.
      displayName: Intel GPU Device Plugin
      kind: GpuDevicePlugin
      name: gpudeviceplugins.deviceplugin.intel.com
      version: v1
    - description: QatDevicePlugin is the Schema for the qatdeviceplugins API. It represents the QAT device plugin responsible for advertising Intel QuickAssist Technology hardware resources to the kubelet.
      displayName: Intel QuickAssist Technology Device Plugin
      kind: QatDevicePlugin
      name: qatdeviceplugins.deviceplugin.intel.com
      version: v1
    - description: SgxDevicePlugin is the Schema for the sgxdeviceplugins API. It represents the SGX device plugin responsible for advertising SGX device nodes to the kubelet.
      displayName: Intel Software Guard Extensions Device Plugin
      kind: SgxDevicePlugin
      name: sgxdeviceplugins.deviceplugin.intel.com
      version: v1
  description: |
    [Intel Device Plugins for Kubernetes](https://github.com/intel/intel-device-plugins-for-kubernetes) is a collection of
    [device plugins](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/) advertising Intel specific hardware resources
    to the kubelet. Currently the operator has basic support for the QAT, GPU, FPGA and SGX device plugins: it validates container image references and extends
    reported statuses.
  displayName: Intel Device Plugins Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
        - apiGroups:
          - coordination.k8s.io
          resourceNames:
          - d1c7b6d5.intel.com
          resources:
          - leases
          verbs:
          - get
          - update
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - fpgadeviceplugins
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - fpgadeviceplugins/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - gpudeviceplugins
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - gpudeviceplugins/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - qatdeviceplugins
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - qatdeviceplugins/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - sgxdeviceplugins
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - deviceplugin.intel.com
          resources:
          - sgxdeviceplugins/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - fpga.intel.com
          resources:
          - acceleratorfunctions
          - fpgaregions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: inteldeviceplugins-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
                securityContext:
                  readOnlyRootFilesystem: true
                  runAsGroup: 1000
                  runAsNonRoot: true
                  runAsUser: 1000
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                image: intel/intel-deviceplugin-operator:0.19.0
                imagePullPolicy: IfNotPresent
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  readOnlyRootFilesystem: true
                  runAsGroup: 3210
                  runAsNonRoot: true
                  runAsUser: 3210
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              serviceAccountName: default
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: webhook-server-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - fpga
  - qat
  - sgx
  - gpu
  links:
  - name: Intel Device Plugins Operator
    url: https://github.com/intel/intel-device-plugins-for-kubernetes
  maintainers:
  - email: dmitry.rozhkov@intel.com
    name: Dmitry Rozhkov
  - email: mikko.ylinen@intel.com
    name: Mikko Ylinen
  maturity: alpha
  provider:
    name: Intel Corporation
  version: 0.19.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: vfpgadeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - fpgadeviceplugins
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-deviceplugin-intel-com-v1-fpgadeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: vgpudeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - gpudeviceplugins
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-deviceplugin-intel-com-v1-gpudeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: vqatdeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - qatdeviceplugins
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-deviceplugin-intel-com-v1-qatdeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: vsgxdeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - sgxdeviceplugins
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-deviceplugin-intel-com-v1-sgxdeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: mfpgadeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - fpgadeviceplugins
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-deviceplugin-intel-com-v1-fpgadeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: mgpudeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - gpudeviceplugins
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-deviceplugin-intel-com-v1-gpudeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: mqatdeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - qatdeviceplugins
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-deviceplugin-intel-com-v1-qatdeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Fail
    generateName: msgxdeviceplugin.kb.io
    rules:
    - apiGroups:
      - deviceplugin.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - sgxdeviceplugins
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-deviceplugin-intel-com-v1-sgxdeviceplugin
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Ignore
    generateName: fpga.mutator.webhooks.intel.com
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /pods
  - admissionReviewVersions:
    - v1beta1
    containerPort: 443
    deploymentName: inteldeviceplugins-controller-manager
    failurePolicy: Ignore
    generateName: sgx.mutator.webhooks.intel.com
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /pods-sgx
