apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitoruntimes.app.kiegroup.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: Number of replicas set for this service
    name: Replicas
    type: integer
  - JSONPath: .status.image
    description: Image of this service
    name: Image
    type: string
  - JSONPath: .status.externalURI
    description: External URI to access this service
    name: Endpoint
    type: string
  group: app.kiegroup.org
  names:
    kind: KogitoRuntime
    listKind: KogitoRuntimeList
    plural: kogitoruntimes
    singular: kogitoruntime
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: KogitoRuntime is a custom Kogito service.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoRuntimeSpec defines the desired state of KogitoRuntime.
          properties:
            deploymentLabels:
              additionalProperties:
                type: string
              description: Additional labels to be added to the Deployment and Pods
                managed by the operator.
              type: object
            enableIstio:
              description: Annotates the pods managed by the operator with the required
                metadata for Istio to setup its sidecars, enabling the mesh. Defaults
                to false.
              type: boolean
            envs:
              description: Environment variables to be added to the runtime container.
                Keys must be a C_IDENTIFIER.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            type: string
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
            httpPort:
              description: HttpPort will set the environment env HTTP_PORT to define
                which port service will listen internally.
              format: int32
              type: integer
            image:
              description: 'Image definition for the service. Example: Domain: quay.io,
                Namespace: kiegroup, Name: kogito-service, Tag: latest. On OpenShift
                an ImageStream will be created in the current namespace pointing to
                the given image.'
              properties:
                domain:
                  type: string
                name:
                  type: string
                namespace:
                  type: string
                tag:
                  type: string
              type: object
            infinispan:
              description: Has the data used by the service to connect to the Infinispan
                cluster.
              properties:
                authRealm:
                  description: Name of the Infinispan authentication realm. This sets
                    the property infinispan.client.hotrod.auth_realm.
                  type: string
                credentials:
                  description: SecretCredentialsType is the data structure for specifying
                    credentials within a Secret.
                  properties:
                    passwordKey:
                      description: PasswordKey is the key pointing to a value in a
                        Secret holding the password value.
                      type: string
                    secretName:
                      description: SecretName is the name of the secret where the
                        credentials are set.
                      type: string
                    usernameKey:
                      description: UsernameKey is the key pointing to a value in a
                        Secret holding the username value.
                      type: string
                  type: object
                saslMechanism:
                  description: SaslMechanism defined for the authentication. This
                    sets the property infinispan.client.hotrod.sasl_mechanism.
                  enum:
                  - PLAIN
                  - DIGEST-MD5
                  type: string
                uri:
                  description: URI to connect to the Infinispan cluster (can it be
                    an internal service or external URI), for example, myinfinispan-cluster:11222.
                  type: string
                useAuth:
                  description: UseAuth is set to true if the credentials are set.
                    This also sets the property infinispan.client.hotrod.use_auth.
                  type: boolean
                useKogitoInfra:
                  description: UseKogitoInfra flags if the instance will use a provided
                    infrastructure by KogitoInfra CR. Setting this to true will deploy
                    a new KogitoInfra CR into the namespace that will install Infinispan
                    via Infinispan Operator. Infinispan Operator MUST be installed
                    in the namespace for this to work. On OpenShift, OLM should install
                    it for you. If running on Kubernetes without OLM installed, please
                    install Infinispan Operator first. Set this to false and fill
                    all other properties to provide your own infrastructure.
                  type: boolean
              type: object
            insecureImageRegistry:
              description: A flag indicating that image streams created by Kogito
                Operator should be configured to allow pulling from insecure registries.
                Usable just on OpenShift. Defaults to 'false'.
              type: boolean
            kafka:
              description: Has the data used by the service to connect to the Kafka
                cluster.
              properties:
                externalURI:
                  description: URI is the service URI to connect to the Kafka cluster,
                    for example, my-cluster-kafka-bootstrap:9092.
                  type: string
                instance:
                  description: Instance is the Kafka instance to be used, for example,
                    kogito-kafka.
                  type: string
                useKogitoInfra:
                  description: UseKogitoInfra flags if the instance will use a provided
                    infrastructure by KogitoInfra CR. Setting this to true will configure
                    a KogitoInfra CR to install Kafka via Strimzi Operator. Strimzi
                    Operator MUST be installed in the namespace for this to work.
                    On OpenShift, OLM should install it for you. If running on Kubernetes
                    without OLM installed, please install Strimzi Operator first.
                    Set this to false and fill other properties to provide your own
                    infrastructure.
                  type: boolean
              type: object
            replicas:
              description: 'Number of replicas that the service will have deployed
                in the cluster. Default value: 1.'
              format: int32
              minimum: 0
              type: integer
            resources:
              description: Defined compute resource requirements for the deployed
                service.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            runtime:
              description: 'The name of the runtime used, either Quarkus or SpringBoot.
                Default value: quarkus'
              enum:
              - quarkus
              - springboot
              type: string
            serviceLabels:
              additionalProperties:
                type: string
              description: Additional labels to be added to the Service managed by
                the operator.
              type: object
          type: object
        status:
          description: KogitoRuntimeStatus defines the observed state of KogitoRuntime.
          properties:
            conditions:
              description: History of conditions for the resource
              items:
                description: Condition is the detailed condition for the resource
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ReasonType is the type of reason
                    type: string
                  status:
                    type: string
                  type:
                    description: ConditionType is the type of condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            deploymentConditions:
              description: General conditions for the Kogito Service deployment.
              items:
                description: DeploymentCondition describes the state of a deployment
                  at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of deployment condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            externalURI:
              description: URI is where the service is exposed.
              type: string
            image:
              description: Image is the resolved image for this service.
              type: string
          required:
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
