apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitobuilds.app.kiegroup.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.type
    description: Type of this build instance
    name: Type
    type: string
  - JSONPath: .spec.runtime
    description: Runtime used to build the service
    name: Runtime
    type: string
  - JSONPath: .spec.native
    description: Indicates it's a native build
    name: Native
    type: boolean
  - JSONPath: .spec.mavenMirrorURL
    description: URL for the proxy Maven repository
    name: Maven URL
    type: string
  - JSONPath: .spec.targetKogitoRuntime
    description: Target KogitoRuntime for this build
    name: Kogito Runtime
    type: string
  - JSONPath: .spec.gitSource.uri
    description: Git repository URL (RemoteSource builds only)
    name: Git Repository
    type: string
  group: app.kiegroup.org
  names:
    kind: KogitoBuild
    listKind: KogitoBuildList
    plural: kogitobuilds
    singular: kogitobuild
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: KogitoBuild handles how to build a custom Kogito service in a Kubernetes/OpenShift
        cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoBuildSpec defines the desired state of KogitoBuild.
          properties:
            artifact:
              description: Artifact contains override information for building the
                Maven artifact (used for Local Source builds). You might want to override
                this information when building from decisions, rules or process files.
                In this scenario the Kogito Images will generate a new Java project
                for you underneath. This information will be used to generate this
                project.
              properties:
                artifactId:
                  description: Indicates the unique base name of the primary artifact
                    being generated.
                  type: string
                groupId:
                  description: Indicates the unique identifier of the organization
                    or group that created the project.
                  type: string
                version:
                  description: Indicates the version of the artifact generated by
                    the project.
                  type: string
              type: object
            buildImage:
              description: 'Image used to build the Kogito Service from source (Local
                and Remote). The operator will use the one provided by the Kogito
                Team based on the "Runtime" field. Example: Domain: quay.io, Namespace:
                kiegroup, Name: kogito-jvm-builder, Tag: latest. On OpenShift an ImageStream
                will be created in the current namespace pointing to the given image.'
              properties:
                domain:
                  type: string
                name:
                  type: string
                namespace:
                  type: string
                tag:
                  type: string
              type: object
            disableIncremental:
              description: DisableIncremental indicates that source to image builds
                should NOT be incremental. Defaults to false.
              type: boolean
            enableMavenDownloadOutput:
              description: If set to true will print the logs for downloading/uploading
                of maven dependencies. Defaults to false.
              type: boolean
            envs:
              description: Environment variables used during build time.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
              x-kubernetes-list-type: atomic
            gitSource:
              description: Information about the git repository where the Kogito Service
                source code resides. Ignored for binary builds.
              properties:
                contextDir:
                  description: Context/subdirectory where the code is located, relative
                    to the repo root.
                  type: string
                reference:
                  description: Branch to use in the Git repository.
                  type: string
                uri:
                  description: Git URI for the s2i source.
                  type: string
              required:
              - uri
              type: object
            mavenMirrorURL:
              description: Maven Mirror URL to be used during source-to-image builds
                (Local and Remote) to considerably increase build speed.
              type: string
            native:
              description: Native indicates if the Kogito Service built should be
                compiled to run on native mode when Runtime is Quarkus (Source to
                Image build only). For more information, see https://www.graalvm.org/docs/reference-manual/aot-compilation/.
              type: boolean
            resources:
              description: Resources Requirements for builder pods.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            runtime:
              description: 'Which runtime Kogito service base image to use when building
                the Kogito service. If "BuildImage" is set, this value is ignored
                by the operator. Default value: quarkus.'
              enum:
              - quarkus
              - springboot
              type: string
            runtimeImage:
              description: 'Image used as the base image for the final Kogito service.
                This image only has the required packages to run the application.
                For example: quarkus based services will have only JVM installed,
                native services only the packages required by the OS. The operator
                will use the one provided by the Kogito Team based on the "Runtime"
                field. Example: Domain: quay.io, Namespace: kiegroup, Name: kogito-jvm-builder,
                Tag: latest. On OpenShift an ImageStream will be created in the current
                namespace pointing to the given image.'
              properties:
                domain:
                  type: string
                name:
                  type: string
                namespace:
                  type: string
                tag:
                  type: string
              type: object
            targetKogitoRuntime:
              description: Set this field targeting the desired KogitoRuntime when
                this KogitoBuild instance has a different name than the KogitoRuntime.
                By default this KogitoBuild instance will generate a final image named
                after its own name (.metadata.name). On OpenShift, an ImageStream
                will be created causing a redeployment on any KogitoRuntime with the
                same name. On Kubernetes, the final image will be pushed to the KogitoRuntime
                deployment. If you have multiple KogitoBuild instances (let's say
                BinaryBuildType and Remote Source), you might need that both target
                the same KogitoRuntime. Both KogitoBuilds will update the same ImageStream
                or generate a final image to the same KogitoRuntime deployment.
              type: string
            type:
              description: 'Sets the type of build that this instance will handle:
                Binary - takes an uploaded binary file already compiled and creates
                a Kogito service image from it. RemoteSource - pulls the source code
                from a Git repository, builds the binary and then the final Kogito
                service image. LocalSource - takes an uploaded resource file such
                as DRL (rules), DMN (decision) or BPMN (process), builds the binary
                and the final Kogito service image.'
              enum:
              - Binary
              - RemoteSource
              - LocalSource
              type: string
            webHooks:
              description: WebHooks secrets for source to image builds based on Git
                repositories (Remote Sources).
              items:
                description: WebhookSecret Secret to use for a given webhook.
                properties:
                  secret:
                    description: Secret value for webhook
                    type: string
                  type:
                    description: WebHook type, either GitHub or Generic.
                    enum:
                    - GitHub
                    - Generic
                    type: string
                type: object
              type: array
              x-kubernetes-list-type: atomic
          required:
          - type
          type: object
        status:
          description: KogitoBuildStatus defines the observed state of KogitoBuild.
          properties:
            builds:
              description: History of builds
              properties:
                cancelled:
                  description: Builds have been stopped from executing.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                complete:
                  description: Builds have executed and succeeded.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                error:
                  description: Builds have been prevented from executing by an error.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                failed:
                  description: Builds have executed and failed.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                new:
                  description: Builds are being created.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                pending:
                  description: Builds are about to start running.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                running:
                  description: Builds are running.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
              type: object
            conditions:
              description: History of conditions for the resource, shows the status
                of the younger builder controlled by this instance
              items:
                description: KogitoBuildConditions describes the conditions for this
                  build instance according to Kubernetes status interface.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime ...
                    format: date-time
                    type: string
                  message:
                    description: Message ...
                    type: string
                  reason:
                    description: Reason of this condition
                    type: string
                  status:
                    description: Status ...
                    type: string
                  type:
                    description: Type of this condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
              x-kubernetes-list-type: atomic
            latestBuild:
              type: string
          required:
          - builds
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
