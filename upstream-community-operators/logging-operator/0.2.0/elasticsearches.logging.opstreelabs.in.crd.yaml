apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: elasticsearches.logging.opstreelabs.in
spec:
  additionalPrinterColumns:
    - JSONPath: .status.master
      description: Current master node count
      name: Master
      type: integer
    - JSONPath: .status.data
      description: Current data node count
      name: Data
      type: integer
    - JSONPath: .status.ingestion
      description: Current ingestion node count
      name: Ingestion
      type: integer
    - JSONPath: .status.client
      description: Current client node count
      name: Client
      type: integer
    - JSONPath: .status.clusterState
      name: Cluster State
      type: string
  group: logging.opstreelabs.in
  names:
    kind: Elasticsearch
    listKind: ElasticsearchList
    plural: elasticsearches
    singular: elasticsearch
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Elasticsearch is the Schema for the elasticsearches API
      properties:
        apiVersion:
          description: >-
            APIVersion defines the versioned schema of this representation of an
            object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: >-
            Kind is a string value representing the REST resource this object
            represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: ElasticsearchSpec defines the desired state of Elasticsearch
          properties:
            client:
              description: NodeSpec define the state of elasticsearch nodes
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node matches the corresponding
                            matchExpressions; the node(s) with the highest sum
                            are the most preferred.
                          items:
                            description: >-
                              An empty preferred scheduling term matches all
                              objects with implicit weight 0 (i.e. it's a
                              no-op). A null preferred scheduling term matches
                              no objects (i.e. is also a no-op).
                            properties:
                              preference:
                                description: >-
                                  A node selector term, associated with the
                                  corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: >-
                                  Weight associated with matching the
                                  corresponding nodeSelectorTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - preference
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to an
                            update), the system may or may not try to eventually
                            evict the pod from its node.
                          properties:
                            nodeSelectorTerms:
                              description: >-
                                Required. A list of node selector terms. The
                                terms are ORed.
                              items:
                                description: >-
                                  A null or empty node selector term matches no
                                  objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a
                                  subset of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                            - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: >-
                        Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other
                        pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: >-
                        Describes pod anti-affinity scheduling rules (e.g. avoid
                        putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that
                            violates one or more of the expressions. The node
                            that is most preferred is the one with the greatest
                            sum of weights, i.e. for each node that meets all of
                            the scheduling requirements (resource request,
                            requiredDuringScheduling anti-affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the anti-affinity requirements specified by this
                            field are not met at scheduling time, the pod will
                            not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                count:
                  format: int32
                  type: integer
                enabled:
                  type: boolean
                extraEnvVariables:
                  additionalProperties:
                    type: string
                  type: object
                jvmOptions:
                  description: JVMOptions define the JVM size for elasticsearch nodes
                  properties:
                    Xms:
                      type: string
                    Xmx:
                      type: string
                  type: object
                resources:
                  description: >-
                    Resources describes requests and limits for the cluster
                    resouces.
                  properties:
                    limits:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                    requests:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                  type: object
                storage:
                  description: Storage is the inteface to add pvc and pv support in redis
                  properties:
                    volumeClaimTemplate:
                      description: >-
                        PersistentVolumeClaim is a user's request for and claim
                        to a persistent volume
                      properties:
                        apiVersion:
                          description: >-
                            APIVersion defines the versioned schema of this
                            representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and
                            may reject unrecognized values. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                          type: string
                        kind:
                          description: >-
                            Kind is a string value representing the REST
                            resource this object represents. Servers may infer
                            this from the endpoint the client submits requests
                            to. Cannot be updated. In CamelCase. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        metadata:
                          description: >-
                            Standard object's metadata. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                          type: object
                        spec:
                          description: >-
                            Spec defines the desired characteristics of a volume
                            requested by a pod author. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the desired access modes
                                the volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: >-
                                This field can be used to specify either: * An
                                existing VolumeSnapshot object
                                (snapshot.storage.k8s.io/VolumeSnapshot - Beta)
                                * An existing PVC (PersistentVolumeClaim) * An
                                existing custom resource/object that implements
                                data population (Alpha) In order to use
                                VolumeSnapshot object types, the appropriate
                                feature gate must be enabled
                                (VolumeSnapshotDataSource or
                                AnyVolumeDataSource) If the provisioner or an
                                external controller can support the specified
                                data source, it will create a new volume based
                                on the contents of the specified data source. If
                                the specified data source is not supported, the
                                volume will not be created and the failure will
                                be reported as an event. In the future, we plan
                                to support more data source types and the
                                behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: >-
                                    APIGroup is the group for the resource being
                                    referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API
                                    group. For any other third-party types,
                                    APIGroup is required.
                                  type: string
                                kind:
                                  description: >-
                                    Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: >-
                                    Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                            resources:
                              description: >-
                                Resources represents the minimum resources the
                                volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Limits describes the maximum amount of
                                    compute resources allowed. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Requests describes the minimum amount of
                                    compute resources required. If Requests is
                                    omitted for a container, it defaults to
                                    Limits if that is explicitly specified,
                                    otherwise to an implementation-defined
                                    value. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                              type: object
                            selector:
                              description: >-
                                A label query over volumes to consider for
                                binding.
                              properties:
                                matchExpressions:
                                  description: >-
                                    matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed.
                                  items:
                                    description: >-
                                      A label selector requirement is a selector
                                      that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: >-
                                          key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: >-
                                          operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: >-
                                          values is an array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values
                                          array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: >-
                                    matchLabels is a map of {key,value} pairs. A
                                    single {key,value} in the matchLabels map is
                                    equivalent to an element of
                                    matchExpressions, whose key field is "key",
                                    the operator is "In", and the values array
                                    contains only "value". The requirements are
                                    ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: >-
                                Name of the StorageClass required by the claim.
                                More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeMode:
                              description: >-
                                volumeMode defines what type of volume is
                                required by the claim. Value of Filesystem is
                                implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: >-
                                VolumeName is the binding reference to the
                                PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: >-
                            Status represents the current information/status of
                            a persistent volume claim. Read-only. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the actual access modes the
                                volume backing the PVC has. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            capacity:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: >-
                                Represents the actual resources of the
                                underlying volume.
                              type: object
                            conditions:
                              description: >-
                                Current Condition of persistent volume claim. If
                                underlying persistent volume is being resized
                                then the Condition will be set to
                                'ResizeStarted'.
                              items:
                                description: >-
                                  PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: Last time we probed the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: >-
                                      Last time the condition transitioned from
                                      one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: >-
                                      Human-readable message indicating details
                                      about last transition.
                                    type: string
                                  reason:
                                    description: >-
                                      Unique, this should be a short, machine
                                      understandable string that gives the
                                      reason for condition's last transition. If
                                      it reports "ResizeStarted" that means the
                                      underlying persistent volume is being
                                      resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: >-
                                      PersistentVolumeClaimConditionType is a
                                      valid value of
                                      PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                  - status
                                  - type
                                type: object
                              type: array
                            phase:
                              description: >-
                                Phase represents the current phase of
                                PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
            clusterName:
              type: string
            data:
              description: NodeSpec define the state of elasticsearch nodes
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node matches the corresponding
                            matchExpressions; the node(s) with the highest sum
                            are the most preferred.
                          items:
                            description: >-
                              An empty preferred scheduling term matches all
                              objects with implicit weight 0 (i.e. it's a
                              no-op). A null preferred scheduling term matches
                              no objects (i.e. is also a no-op).
                            properties:
                              preference:
                                description: >-
                                  A node selector term, associated with the
                                  corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: >-
                                  Weight associated with matching the
                                  corresponding nodeSelectorTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - preference
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to an
                            update), the system may or may not try to eventually
                            evict the pod from its node.
                          properties:
                            nodeSelectorTerms:
                              description: >-
                                Required. A list of node selector terms. The
                                terms are ORed.
                              items:
                                description: >-
                                  A null or empty node selector term matches no
                                  objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a
                                  subset of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                            - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: >-
                        Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other
                        pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: >-
                        Describes pod anti-affinity scheduling rules (e.g. avoid
                        putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that
                            violates one or more of the expressions. The node
                            that is most preferred is the one with the greatest
                            sum of weights, i.e. for each node that meets all of
                            the scheduling requirements (resource request,
                            requiredDuringScheduling anti-affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the anti-affinity requirements specified by this
                            field are not met at scheduling time, the pod will
                            not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                count:
                  format: int32
                  type: integer
                enabled:
                  type: boolean
                extraEnvVariables:
                  additionalProperties:
                    type: string
                  type: object
                jvmOptions:
                  description: JVMOptions define the JVM size for elasticsearch nodes
                  properties:
                    Xms:
                      type: string
                    Xmx:
                      type: string
                  type: object
                resources:
                  description: >-
                    Resources describes requests and limits for the cluster
                    resouces.
                  properties:
                    limits:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                    requests:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                  type: object
                storage:
                  description: Storage is the inteface to add pvc and pv support in redis
                  properties:
                    volumeClaimTemplate:
                      description: >-
                        PersistentVolumeClaim is a user's request for and claim
                        to a persistent volume
                      properties:
                        apiVersion:
                          description: >-
                            APIVersion defines the versioned schema of this
                            representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and
                            may reject unrecognized values. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                          type: string
                        kind:
                          description: >-
                            Kind is a string value representing the REST
                            resource this object represents. Servers may infer
                            this from the endpoint the client submits requests
                            to. Cannot be updated. In CamelCase. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        metadata:
                          description: >-
                            Standard object's metadata. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                          type: object
                        spec:
                          description: >-
                            Spec defines the desired characteristics of a volume
                            requested by a pod author. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the desired access modes
                                the volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: >-
                                This field can be used to specify either: * An
                                existing VolumeSnapshot object
                                (snapshot.storage.k8s.io/VolumeSnapshot - Beta)
                                * An existing PVC (PersistentVolumeClaim) * An
                                existing custom resource/object that implements
                                data population (Alpha) In order to use
                                VolumeSnapshot object types, the appropriate
                                feature gate must be enabled
                                (VolumeSnapshotDataSource or
                                AnyVolumeDataSource) If the provisioner or an
                                external controller can support the specified
                                data source, it will create a new volume based
                                on the contents of the specified data source. If
                                the specified data source is not supported, the
                                volume will not be created and the failure will
                                be reported as an event. In the future, we plan
                                to support more data source types and the
                                behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: >-
                                    APIGroup is the group for the resource being
                                    referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API
                                    group. For any other third-party types,
                                    APIGroup is required.
                                  type: string
                                kind:
                                  description: >-
                                    Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: >-
                                    Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                            resources:
                              description: >-
                                Resources represents the minimum resources the
                                volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Limits describes the maximum amount of
                                    compute resources allowed. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Requests describes the minimum amount of
                                    compute resources required. If Requests is
                                    omitted for a container, it defaults to
                                    Limits if that is explicitly specified,
                                    otherwise to an implementation-defined
                                    value. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                              type: object
                            selector:
                              description: >-
                                A label query over volumes to consider for
                                binding.
                              properties:
                                matchExpressions:
                                  description: >-
                                    matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed.
                                  items:
                                    description: >-
                                      A label selector requirement is a selector
                                      that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: >-
                                          key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: >-
                                          operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: >-
                                          values is an array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values
                                          array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: >-
                                    matchLabels is a map of {key,value} pairs. A
                                    single {key,value} in the matchLabels map is
                                    equivalent to an element of
                                    matchExpressions, whose key field is "key",
                                    the operator is "In", and the values array
                                    contains only "value". The requirements are
                                    ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: >-
                                Name of the StorageClass required by the claim.
                                More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeMode:
                              description: >-
                                volumeMode defines what type of volume is
                                required by the claim. Value of Filesystem is
                                implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: >-
                                VolumeName is the binding reference to the
                                PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: >-
                            Status represents the current information/status of
                            a persistent volume claim. Read-only. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the actual access modes the
                                volume backing the PVC has. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            capacity:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: >-
                                Represents the actual resources of the
                                underlying volume.
                              type: object
                            conditions:
                              description: >-
                                Current Condition of persistent volume claim. If
                                underlying persistent volume is being resized
                                then the Condition will be set to
                                'ResizeStarted'.
                              items:
                                description: >-
                                  PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: Last time we probed the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: >-
                                      Last time the condition transitioned from
                                      one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: >-
                                      Human-readable message indicating details
                                      about last transition.
                                    type: string
                                  reason:
                                    description: >-
                                      Unique, this should be a short, machine
                                      understandable string that gives the
                                      reason for condition's last transition. If
                                      it reports "ResizeStarted" that means the
                                      underlying persistent volume is being
                                      resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: >-
                                      PersistentVolumeClaimConditionType is a
                                      valid value of
                                      PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                  - status
                                  - type
                                type: object
                              type: array
                            phase:
                              description: >-
                                Phase represents the current phase of
                                PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
            image:
              type: string
            imagePullPolicy:
              description: >-
                PullPolicy describes a policy for if/when to pull a container
                image
              type: string
            ingestion:
              description: NodeSpec define the state of elasticsearch nodes
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node matches the corresponding
                            matchExpressions; the node(s) with the highest sum
                            are the most preferred.
                          items:
                            description: >-
                              An empty preferred scheduling term matches all
                              objects with implicit weight 0 (i.e. it's a
                              no-op). A null preferred scheduling term matches
                              no objects (i.e. is also a no-op).
                            properties:
                              preference:
                                description: >-
                                  A node selector term, associated with the
                                  corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: >-
                                  Weight associated with matching the
                                  corresponding nodeSelectorTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - preference
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to an
                            update), the system may or may not try to eventually
                            evict the pod from its node.
                          properties:
                            nodeSelectorTerms:
                              description: >-
                                Required. A list of node selector terms. The
                                terms are ORed.
                              items:
                                description: >-
                                  A null or empty node selector term matches no
                                  objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a
                                  subset of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                            - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: >-
                        Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other
                        pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: >-
                        Describes pod anti-affinity scheduling rules (e.g. avoid
                        putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that
                            violates one or more of the expressions. The node
                            that is most preferred is the one with the greatest
                            sum of weights, i.e. for each node that meets all of
                            the scheduling requirements (resource request,
                            requiredDuringScheduling anti-affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the anti-affinity requirements specified by this
                            field are not met at scheduling time, the pod will
                            not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                count:
                  format: int32
                  type: integer
                enabled:
                  type: boolean
                extraEnvVariables:
                  additionalProperties:
                    type: string
                  type: object
                jvmOptions:
                  description: JVMOptions define the JVM size for elasticsearch nodes
                  properties:
                    Xms:
                      type: string
                    Xmx:
                      type: string
                  type: object
                resources:
                  description: >-
                    Resources describes requests and limits for the cluster
                    resouces.
                  properties:
                    limits:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                    requests:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                  type: object
                storage:
                  description: Storage is the inteface to add pvc and pv support in redis
                  properties:
                    volumeClaimTemplate:
                      description: >-
                        PersistentVolumeClaim is a user's request for and claim
                        to a persistent volume
                      properties:
                        apiVersion:
                          description: >-
                            APIVersion defines the versioned schema of this
                            representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and
                            may reject unrecognized values. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                          type: string
                        kind:
                          description: >-
                            Kind is a string value representing the REST
                            resource this object represents. Servers may infer
                            this from the endpoint the client submits requests
                            to. Cannot be updated. In CamelCase. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        metadata:
                          description: >-
                            Standard object's metadata. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                          type: object
                        spec:
                          description: >-
                            Spec defines the desired characteristics of a volume
                            requested by a pod author. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the desired access modes
                                the volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: >-
                                This field can be used to specify either: * An
                                existing VolumeSnapshot object
                                (snapshot.storage.k8s.io/VolumeSnapshot - Beta)
                                * An existing PVC (PersistentVolumeClaim) * An
                                existing custom resource/object that implements
                                data population (Alpha) In order to use
                                VolumeSnapshot object types, the appropriate
                                feature gate must be enabled
                                (VolumeSnapshotDataSource or
                                AnyVolumeDataSource) If the provisioner or an
                                external controller can support the specified
                                data source, it will create a new volume based
                                on the contents of the specified data source. If
                                the specified data source is not supported, the
                                volume will not be created and the failure will
                                be reported as an event. In the future, we plan
                                to support more data source types and the
                                behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: >-
                                    APIGroup is the group for the resource being
                                    referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API
                                    group. For any other third-party types,
                                    APIGroup is required.
                                  type: string
                                kind:
                                  description: >-
                                    Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: >-
                                    Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                            resources:
                              description: >-
                                Resources represents the minimum resources the
                                volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Limits describes the maximum amount of
                                    compute resources allowed. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Requests describes the minimum amount of
                                    compute resources required. If Requests is
                                    omitted for a container, it defaults to
                                    Limits if that is explicitly specified,
                                    otherwise to an implementation-defined
                                    value. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                              type: object
                            selector:
                              description: >-
                                A label query over volumes to consider for
                                binding.
                              properties:
                                matchExpressions:
                                  description: >-
                                    matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed.
                                  items:
                                    description: >-
                                      A label selector requirement is a selector
                                      that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: >-
                                          key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: >-
                                          operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: >-
                                          values is an array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values
                                          array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: >-
                                    matchLabels is a map of {key,value} pairs. A
                                    single {key,value} in the matchLabels map is
                                    equivalent to an element of
                                    matchExpressions, whose key field is "key",
                                    the operator is "In", and the values array
                                    contains only "value". The requirements are
                                    ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: >-
                                Name of the StorageClass required by the claim.
                                More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeMode:
                              description: >-
                                volumeMode defines what type of volume is
                                required by the claim. Value of Filesystem is
                                implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: >-
                                VolumeName is the binding reference to the
                                PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: >-
                            Status represents the current information/status of
                            a persistent volume claim. Read-only. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the actual access modes the
                                volume backing the PVC has. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            capacity:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: >-
                                Represents the actual resources of the
                                underlying volume.
                              type: object
                            conditions:
                              description: >-
                                Current Condition of persistent volume claim. If
                                underlying persistent volume is being resized
                                then the Condition will be set to
                                'ResizeStarted'.
                              items:
                                description: >-
                                  PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: Last time we probed the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: >-
                                      Last time the condition transitioned from
                                      one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: >-
                                      Human-readable message indicating details
                                      about last transition.
                                    type: string
                                  reason:
                                    description: >-
                                      Unique, this should be a short, machine
                                      understandable string that gives the
                                      reason for condition's last transition. If
                                      it reports "ResizeStarted" that means the
                                      underlying persistent volume is being
                                      resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: >-
                                      PersistentVolumeClaimConditionType is a
                                      valid value of
                                      PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                  - status
                                  - type
                                type: object
                              type: array
                            phase:
                              description: >-
                                Phase represents the current phase of
                                PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
            master:
              description: NodeSpec define the state of elasticsearch nodes
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node matches the corresponding
                            matchExpressions; the node(s) with the highest sum
                            are the most preferred.
                          items:
                            description: >-
                              An empty preferred scheduling term matches all
                              objects with implicit weight 0 (i.e. it's a
                              no-op). A null preferred scheduling term matches
                              no objects (i.e. is also a no-op).
                            properties:
                              preference:
                                description: >-
                                  A node selector term, associated with the
                                  corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: >-
                                  Weight associated with matching the
                                  corresponding nodeSelectorTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - preference
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to an
                            update), the system may or may not try to eventually
                            evict the pod from its node.
                          properties:
                            nodeSelectorTerms:
                              description: >-
                                Required. A list of node selector terms. The
                                terms are ORed.
                              items:
                                description: >-
                                  A null or empty node selector term matches no
                                  objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a
                                  subset of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      A list of node selector requirements by
                                      node's labels.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: >-
                                      A list of node selector requirements by
                                      node's fields.
                                    items:
                                      description: >-
                                        A node selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            The label key that the selector applies
                                            to.
                                          type: string
                                        operator:
                                          description: >-
                                            Represents a key's relationship to a set
                                            of values. Valid operators are In,
                                            NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: >-
                                            An array of string values. If the
                                            operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be
                                            interpreted as an integer. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                            - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: >-
                        Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other
                        pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates
                            one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the
                            scheduling requirements (resource request,
                            requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the affinity requirements specified by this field
                            are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: >-
                        Describes pod anti-affinity scheduling rules (e.g. avoid
                        putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            The scheduler will prefer to schedule pods to nodes
                            that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that
                            violates one or more of the expressions. The node
                            that is most preferred is the one with the greatest
                            sum of weights, i.e. for each node that meets all of
                            the scheduling requirements (resource request,
                            requiredDuringScheduling anti-affinity expressions,
                            etc.), compute a sum by iterating through the
                            elements of this field and adding "weight" to the
                            sum if the node has pods which matches the
                            corresponding podAffinityTerm; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: >-
                              The weights of all of the matched
                              WeightedPodAffinityTerm fields are added per-node
                              to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: >-
                                  Required. A pod affinity term, associated with
                                  the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources, in
                                      this case pods.
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces the
                                      labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the
                                      specified namespaces, where co-located is
                                      defined as running on a node whose value
                                      of the label with key topologyKey matches
                                      that of any node on which any of the
                                      selected pods is running. Empty
                                      topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: >-
                                  weight associated with matching the
                                  corresponding podAffinityTerm, in the range
                                  1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: >-
                            If the anti-affinity requirements specified by this
                            field are not met at scheduling time, the pod will
                            not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a
                            pod label update), the system may or may not try to
                            eventually evict the pod from its node. When there
                            are multiple elements, the lists of nodes
                            corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: >-
                              Defines a set of pods (namely those matching the
                              labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or
                              not co-located (anti-affinity) with, where
                              co-located is defined as running on a node whose
                              value of the label with key <topologyKey> matches
                              that of any node on which a pod of the set of pods
                              is running
                            properties:
                              labelSelector:
                                description: >-
                                  A label query over a set of resources, in this
                                  case pods.
                                properties:
                                  matchExpressions:
                                    description: >-
                                      matchExpressions is a list of label
                                      selector requirements. The requirements
                                      are ANDed.
                                    items:
                                      description: >-
                                        A label selector requirement is a
                                        selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: >-
                                            key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: >-
                                            operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: >-
                                            values is an array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: >-
                                      matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels
                                      map is equivalent to an element of
                                      matchExpressions, whose key field is
                                      "key", the operator is "In", and the
                                      values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: >-
                                  namespaces specifies which namespaces the
                                  labelSelector applies to (matches against);
                                  null or empty list means "this pod's
                                  namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: >-
                                  This pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified
                                  namespaces, where co-located is defined as
                                  running on a node whose value of the label
                                  with key topologyKey matches that of any node
                                  on which any of the selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                count:
                  format: int32
                  type: integer
                enabled:
                  type: boolean
                extraEnvVariables:
                  additionalProperties:
                    type: string
                  type: object
                jvmOptions:
                  description: JVMOptions define the JVM size for elasticsearch nodes
                  properties:
                    Xms:
                      type: string
                    Xmx:
                      type: string
                  type: object
                resources:
                  description: >-
                    Resources describes requests and limits for the cluster
                    resouces.
                  properties:
                    limits:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                    requests:
                      description: >-
                        ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      required:
                        - cpu
                        - memory
                      type: object
                  type: object
                storage:
                  description: Storage is the inteface to add pvc and pv support in redis
                  properties:
                    volumeClaimTemplate:
                      description: >-
                        PersistentVolumeClaim is a user's request for and claim
                        to a persistent volume
                      properties:
                        apiVersion:
                          description: >-
                            APIVersion defines the versioned schema of this
                            representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and
                            may reject unrecognized values. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                          type: string
                        kind:
                          description: >-
                            Kind is a string value representing the REST
                            resource this object represents. Servers may infer
                            this from the endpoint the client submits requests
                            to. Cannot be updated. In CamelCase. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        metadata:
                          description: >-
                            Standard object's metadata. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                          type: object
                        spec:
                          description: >-
                            Spec defines the desired characteristics of a volume
                            requested by a pod author. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the desired access modes
                                the volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: >-
                                This field can be used to specify either: * An
                                existing VolumeSnapshot object
                                (snapshot.storage.k8s.io/VolumeSnapshot - Beta)
                                * An existing PVC (PersistentVolumeClaim) * An
                                existing custom resource/object that implements
                                data population (Alpha) In order to use
                                VolumeSnapshot object types, the appropriate
                                feature gate must be enabled
                                (VolumeSnapshotDataSource or
                                AnyVolumeDataSource) If the provisioner or an
                                external controller can support the specified
                                data source, it will create a new volume based
                                on the contents of the specified data source. If
                                the specified data source is not supported, the
                                volume will not be created and the failure will
                                be reported as an event. In the future, we plan
                                to support more data source types and the
                                behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: >-
                                    APIGroup is the group for the resource being
                                    referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API
                                    group. For any other third-party types,
                                    APIGroup is required.
                                  type: string
                                kind:
                                  description: >-
                                    Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: >-
                                    Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                            resources:
                              description: >-
                                Resources represents the minimum resources the
                                volume should have. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Limits describes the maximum amount of
                                    compute resources allowed. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: >-
                                    Requests describes the minimum amount of
                                    compute resources required. If Requests is
                                    omitted for a container, it defaults to
                                    Limits if that is explicitly specified,
                                    otherwise to an implementation-defined
                                    value. More info:
                                    https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                  type: object
                              type: object
                            selector:
                              description: >-
                                A label query over volumes to consider for
                                binding.
                              properties:
                                matchExpressions:
                                  description: >-
                                    matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed.
                                  items:
                                    description: >-
                                      A label selector requirement is a selector
                                      that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: >-
                                          key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: >-
                                          operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: >-
                                          values is an array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values
                                          array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: >-
                                    matchLabels is a map of {key,value} pairs. A
                                    single {key,value} in the matchLabels map is
                                    equivalent to an element of
                                    matchExpressions, whose key field is "key",
                                    the operator is "In", and the values array
                                    contains only "value". The requirements are
                                    ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: >-
                                Name of the StorageClass required by the claim.
                                More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeMode:
                              description: >-
                                volumeMode defines what type of volume is
                                required by the claim. Value of Filesystem is
                                implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: >-
                                VolumeName is the binding reference to the
                                PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: >-
                            Status represents the current information/status of
                            a persistent volume claim. Read-only. More info:
                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: >-
                                AccessModes contains the actual access modes the
                                volume backing the PVC has. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            capacity:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: >-
                                Represents the actual resources of the
                                underlying volume.
                              type: object
                            conditions:
                              description: >-
                                Current Condition of persistent volume claim. If
                                underlying persistent volume is being resized
                                then the Condition will be set to
                                'ResizeStarted'.
                              items:
                                description: >-
                                  PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: Last time we probed the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: >-
                                      Last time the condition transitioned from
                                      one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: >-
                                      Human-readable message indicating details
                                      about last transition.
                                    type: string
                                  reason:
                                    description: >-
                                      Unique, this should be a short, machine
                                      understandable string that gives the
                                      reason for condition's last transition. If
                                      it reports "ResizeStarted" that means the
                                      underlying persistent volume is being
                                      resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: >-
                                      PersistentVolumeClaimConditionType is a
                                      valid value of
                                      PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                  - status
                                  - type
                                type: object
                              type: array
                            phase:
                              description: >-
                                Phase represents the current phase of
                                PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
            plugins:
              items:
                type: string
              type: array
            security:
              description: Security defines the security of elasticsearch
              properties:
                password:
                  type: string
                tlsEnabled:
                  type: boolean
              type: object
          required:
            - clusterName
            - image
          type: object
        status:
          description: ElasticsearchStatus defines the observed state of Elasticsearch
          properties:
            client:
              format: int32
              type: integer
            clusterName:
              description: >-
                INSERT ADDITIONAL STATUS FIELD - define observed state of
                cluster Important: Run "make" to regenerate code after modifying
                this file
              type: string
            clusterState:
              type: string
            data:
              format: int32
              type: integer
            ingestion:
              format: int32
              type: integer
            master:
              format: int32
              type: integer
          required:
            - client
            - clusterName
            - clusterState
            - data
            - ingestion
            - master
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
