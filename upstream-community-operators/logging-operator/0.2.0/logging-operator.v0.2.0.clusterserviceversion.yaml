apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: logging-operator.v0.2.0
  annotations:
    alm-examples: >-
      [{"apiVersion":"logging.opstreelabs.in/v1alpha1","kind":"Elasticsearch","metadata":{"name":"elasticsearch-cluster","labels":{"organization":"opstree","owned-by":"Abhishek"},"namespace":"logging-operator"},"spec":{"clusterName":"production","image":"docker.elastic.co/elasticsearch/elasticsearch:7.8.0","imagePullPolicy":"IfNotPresent","security":{"tlsEnabled":true,"password":"Opstree@1234"},"plugins":["repository-s3"],"master":{"enabled":true,"count":3,"resources":{"requests":{"cpu":"500m","memory":"2048Mi"},"limits":{"cpu":"500m","memory":"2048Mi"}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"csi-cephfs-sc","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}},"selector":{}}},"jvmOptions":{"Xmx":"1g","Xms":"1g"},"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["elasticsearch-cluster-master"]}]},"topologyKey":"kubernetes.io/hostname"}]}}},"data":{"enabled":true,"count":3,"resources":{"requests":{"cpu":"500m","memory":"2048Mi"},"limits":{"cpu":"500m","memory":"2048Mi"}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"csi-cephfs-sc","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}},"selector":{}}},"jvmOptions":{"Xmx":"1g","Xms":"1g"},"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["elasticsearch-cluster-data"]}]},"topologyKey":"kubernetes.io/hostname"}]}}},"ingestion":{"enabled":true,"count":1,"resources":{"requests":{"cpu":"500m","memory":"2048Mi"},"limits":{"cpu":"500m","memory":"2048Mi"}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"csi-cephfs-sc","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}},"selector":{}}},"jvmOptions":{"Xmx":"1g","Xms":"1g"},"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["elasticsearch-cluster-ingestion"]}]},"topologyKey":"kubernetes.io/hostname"}]}}},"client":{"enabled":true,"count":1,"resources":{"requests":{"cpu":"500m","memory":"2048Mi"},"limits":{"cpu":"500m","memory":"2048Mi"}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"csi-cephfs-sc","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}},"selector":{}}},"jvmOptions":{"Xmx":"1g","Xms":"1g"},"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["elasticsearch-cluster-ingestion"]}]},"topologyKey":"kubernetes.io/hostname"}]}}}}},{"apiVersion":"logging.opstreelabs.in/v1alpha1","kind":"Fluentd","metadata":{"name":"fluentd-oos","labels":{"organization":"opstree","owned-by":"Abhishek"},"namespace":"logging-operator"},"spec":{"image":"fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch","imagePullPolicy":"IfNotPresent","elasticsearch":{"host":"elasticsearch-cluster-ingestion","username":"elastic","password":"Opstree@1234","tlsEnabled":true},"logPrefix":"namespace","resources":{"requests":{"cpu":"100m","memory":"200Mi"},"limits":{"cpu":"100m","memory":"200Mi"}}}},{"apiVersion":"logging.opstreelabs.in/v1alpha1","kind":"Kibana","metadata":{"name":"kibana","labels":{"organization":"opstree","owned-by":"Abhishek"},"namespace":"logging-operator"},"spec":{"replicas":1,"image":"docker.elastic.co/kibana/kibana:7.8.0","imagePullPolicy":"IfNotPresent","elasticsearch":{"host":"https://elasticsearch-cluster-client:9200","username":"elastic","password":"Opstree@1234","tlsEnabled":true},"elasticSecretName":"elasticsearch-cluster-tls","resources":{"requests":{"cpu":"1000m","memory":"1Gi"},"limits":{"cpu":"1000m","memory":"1Gi"}},"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["kibana"]}]},"topologyKey":"kubernetes.io/hostname"}]}}}},{"apiVersion":"logging.opstreelabs.in/v1alpha1","kind":"IndexLifecycle","metadata":{"name":"indexlifecycle-example"},"spec":{"enabled":true,"rollover":{"maxSize":"2GB","maxAge":"30d"},"delete":{"minAge":"15d"},"elasticsearch":{"host":"https://elasticsearch-cluster-ingestion:9200","username":"elastic","password":"Opstree@1234"}}},{"apiVersion":"logging.opstreelabs.in/v1alpha1","kind":"IndexTemplate","metadata":{"name":"indextemplate-sample"},"spec":{"enabled":true,"indexPatterns":["kubernetes-default-*","kubernetes-istio-system-*"],"settings":{"shards":1,"replicas":1,"indexLifeCycleName":"indexlifecycle-example","rolloverAlias":"kubernetes"},"elasticsearch":{"host":"https://elasticsearch-cluster-ingestion:9200","username":"elastic","password":"Opstree@1234"}}}]
    categories: 'Monitoring,  Database, Logging & Tracing'
    certified: 'false'
    createdAt: '9-07-2020'
    description: A golang based CRD operator to set up and manage logging stack
    containerImage: 'quay.io/opstree/logging-operator:v0.2.0'
    support: 'Best Effort'
    capabilities: Seamless Upgrades
    repository: 'https://github.com/OT-CONTAINER-KIT/logging-operator'
spec:
  displayName: Logging Operator
  description: "A golang based CRD operator to setup and manage logging stack  (Elasticsearch, Fluentd, and Kibana) in the Kubernetes cluster. It helps to setup each component of the EFK stack separately.\n\n### Supported Features\n\nThe \"Logging Operator\" includes these features:-\n\n- Elasticsearch different node types, like:-\n\t-  **Master Node** => A node that has the master role (default), which makes it eligible to be elected as the master node, which controls the cluster.\n\t-  **Data Node** => A node that has the data role (default). Data nodes hold data and perform data related operations such as CRUD, search, and aggregations.\n\t-  **Ingestion Node** => A node that has the ingest role (default). Ingest nodes are able to apply an ingest pipeline to a document in order to transform and enrich the document before indexing. With a heavy ingest load, it makes sense to use dedicated ingest nodes and to not include the ingest role from nodes that have the master or data roles.\n\t-  **Client or Coordinator Node** => Requests like search requests or bulk-indexing requests may involve data held on different data nodes. A search request, for example, is executed in two phases which are coordinated by the node which receives the client request — the coordinating node.\n- Elasticsearch setup with or without TLS on Transport and HTTP Layer\n- Customizable elasticsearch configuration and configurable heap size\n- Fluentd as a lightweight log-shipper and JSON field seperation support\n- Kibana integration with elasticsearch for logs visualization\n- Seamless upgrade for Elasticsearch, Fluentd, and Kibana stack\n- Inculcated best practices for Kubernetes setup like `SecurityContext` and `PrivilegeControl`\n- Loosely coupled setup, i.e. Elasticsearch, Fluentd, and Kibana setup can be done individually as well\n- Index Lifecycle support to manage rollover and cleanup of indexes\n- Index template support for configuring index settings like:- policy, replicas, shards etc.\n### Documentation\n\n[Documentation](https://docs.opstreelabs.in/logging-operator)\n\n### Getting Help\n\nThis project is managed by [OpsTree Solutions](https://opstree.com). If you have any queries or suggestions, mail us at [opensource@opstree.com](opensource@opstree.com).\n### Contributing\n\nYou can contribute to this project by:-\n- Raising Bugs and Feature Requests\n- Fixing issue by opening a Pull Request\n- Improving Documentation\n\n### License\n\nLogging Operator is licensed under [Apache License, Version 2.0](https://github.com/OT-CONTAINER-KIT/logging-operator/blob/master/LICENSE)\n"
  maturity: alpha
  version: 0.2.0
  replaces: logging-operator.v0.1.0
  skips: []
  minKubeVersion: 1.11.0
  keywords:
    - DevOps
    - Elasticsearch
    - Logging
    - Kubernetes
    - Openshift
    - EFK
  maintainers:
    - name: Abhishek Dubey
      email: abhishek.dubey@opstree.com
    - name: Sandeep Rawat
      email: sandeep@opstree.com
  provider:
    name: Opstree Solutions
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Blog
      url: 'https://blog.opstree.com'
    - name: GitHub
      url: 'https://github.com/opstree'
    - name: Website
      url: 'https://opstree.com'
    - name: Documentation
      url: 'https://docs.opstreelabs.in/logging-operator'
  icon:
    - base64data: >-
        
      mediatype: image/svg+xml
  customresourcedefinitions:
    owned:
      - name: elasticsearches.logging.opstreelabs.in
        displayName: Elasticsearch
        kind: Elasticsearch
        version: v1alpha1
        description: Elasticsearch
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors:
          - path: client
            description: Client
            displayName: Client
            x-descriptors: []
          - path: clusterName
            description: Cluster Name
            displayName: Cluster Name
            x-descriptors: []
          - path: data
            description: Data
            displayName: Data
            x-descriptors: []
          - path: image
            description: Image
            displayName: Image
            x-descriptors: []
          - path: imagePullPolicy
            description: Image Pull Policy
            displayName: Image Pull Policy
            x-descriptors: []
          - path: ingestion
            description: Ingestion
            displayName: Ingestion
            x-descriptors: []
          - path: master
            description: Master
            displayName: Master
            x-descriptors: []
          - path: plugins
            description: Plugins
            displayName: Plugins
            x-descriptors: []
          - path: security
            description: Security
            displayName: Security
            x-descriptors: []
        statusDescriptors:
          - path: client
            description: Client
            displayName: Client
            x-descriptors: []
          - path: clusterName
            description: Cluster Name
            displayName: Cluster Name
            x-descriptors: []
          - path: clusterState
            description: Cluster State
            displayName: Cluster State
            x-descriptors: []
          - path: data
            description: Data
            displayName: Data
            x-descriptors: []
          - path: ingestion
            description: Ingestion
            displayName: Ingestion
            x-descriptors: []
          - path: master
            description: Master
            displayName: Master
            x-descriptors: []
      - name: fluentds.logging.opstreelabs.in
        displayName: Fluentd
        kind: Fluentd
        version: v1alpha1
        description: Fluentd
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors:
          - path: customConfiguration
            description: Custom Configuration
            displayName: Custom Configuration
            x-descriptors: []
          - path: elasticsearch
            description: Elasticsearch
            displayName: Elasticsearch
            x-descriptors: []
          - path: image
            description: Image
            displayName: Image
            x-descriptors: []
          - path: imagePullPolicy
            description: Image Pull Policy
            displayName: Image Pull Policy
            x-descriptors: []
          - path: logPrefix
            description: Log Prefix
            displayName: Log Prefix
            x-descriptors: []
          - path: nodeSelector
            description: Node Selector
            displayName: Node Selector
            x-descriptors: []
          - path: resources
            description: Resources
            displayName: Resources
            x-descriptors: []
        statusDescriptors:
          - path: elasticsearch
            description: Elasticsearch
            displayName: Elasticsearch
            x-descriptors: []
      - name: indexlifecycles.logging.opstreelabs.in
        displayName: IndexLifecycle
        kind: IndexLifecycle
        version: v1alpha1
        description: Index Lifecycle
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors:
          - path: delete
            description: Delete
            displayName: Delete
            x-descriptors: []
          - path: elasticsearch
            description: Elasticsearch
            displayName: Elasticsearch
            x-descriptors: []
          - path: enabled
            description: Enabled
            displayName: Enabled
            x-descriptors: []
          - path: rollover
            description: Rollover
            displayName: Rollover
            x-descriptors: []
        statusDescriptors:
          - path: delete
            description: Delete
            displayName: Delete
            x-descriptors: []
          - path: rollover
            description: Rollover
            displayName: Rollover
            x-descriptors: []
      - name: indextemplates.logging.opstreelabs.in
        displayName: IndexTemplate
        kind: IndexTemplate
        version: v1alpha1
        description: Index Template
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors:
          - path: elasticsearch
            description: Elasticsearch
            displayName: Elasticsearch
            x-descriptors: []
          - path: enabled
            description: Enabled
            displayName: Enabled
            x-descriptors: []
          - path: indexPatterns
            description: Index Patterns
            displayName: Index Patterns
            x-descriptors: []
          - path: settings
            description: Settings
            displayName: Settings
            x-descriptors: []
        statusDescriptors:
          - path: indexPatterns
            description: Index Patterns
            displayName: Index Patterns
            x-descriptors: []
          - path: settings
            description: Settings
            displayName: Settings
            x-descriptors: []
      - name: kibanas.logging.opstreelabs.in
        displayName: Kibana
        kind: Kibana
        version: v1alpha1
        description: Kibana
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors:
          - path: affinity
            description: Affinity
            displayName: Affinity
            x-descriptors: []
          - path: elasticSecretName
            description: Elastic Secret Name
            displayName: Elastic Secret Name
            x-descriptors: []
          - path: elasticsearch
            description: Elasticsearch
            displayName: Elasticsearch
            x-descriptors: []
          - path: image
            description: Image
            displayName: Image
            x-descriptors: []
          - path: imagePullPolicy
            description: Image Pull Policy
            displayName: Image Pull Policy
            x-descriptors: []
          - path: replicas
            description: Replicas
            displayName: Replicas
            x-descriptors: []
          - path: resources
            description: Resources
            displayName: Resources
            x-descriptors: []
        statusDescriptors:
          - path: elasticsearch
            description: Elasticsearch
            displayName: Elasticsearch
            x-descriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      permissions: []
      clusterPermissions:
        - serviceAccountName: logging-operator
          rules:
            - apiGroups: 
                - ""
              resources:
                - '*'
              verbs:
                - '*'
      deployments:
        - name: logging-operator
          spec:
            selector:
              matchLabels:
                control-plane: logging-operator
            replicas: 1
            template:
              metadata:
                labels:
                  control-plane: logging-operator
              spec:
                containers:
                  - command:
                      - /manager
                    args:
                      - '--enable-leader-election'
                    image: 'quay.io/opstree/logging-operator:v0.2.0'
                    imagePullPolicy: Always
                    name: logging-operator
                    resources:
                      limits:
                        cpu: 100m
                        memory: 100Mi
                      requests:
                        cpu: 100m
                        memory: 100Mi
                terminationGracePeriodSeconds: 10
                serviceAccount: logging-operator
                serviceAccountName: logging-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: false
