apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "ocgate.yaacov.com/v1beta1",
          "kind": "GateToken",
          "metadata": {
            "name": "gatetoken-sample"
          },
          "spec": {
            "match-path": "^/k8s/api/v1/",
            "user-id": "user42"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.4.2
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    categories: OpenShift Optional
    certified: 'false'
    containerImage: quay.io/yaacov/oc-gate-operator:v0.0.1
  name: oc-gate-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: GateToken is the Schema for the gatetokens API
      displayName: Gate Token
      kind: GateToken
      name: gatetokens.ocgate.yaacov.com
      version: v1beta1
  description: Generate access tokens for oc gate service.
  displayName: OC Gate operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ocgate.yaacov.com
          resources:
          - gatetokens
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - ocgate.yaacov.com
          resources:
          - gatetokens/finalizers
          verbs:
          - update
        - apiGroups:
          - ocgate.yaacov.com
          resources:
          - gatetokens/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: oc-gate-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: quay.io/yaacov/oc-gate-operator:v0.0.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 1Gi
                  requests:
                    cpu: 100m
                    memory: 1Gi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsUser: 65532
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - jwt
  - k8s
  - access
  links:
  - name: Oc Gate Service
    url: https://github.com/yaacov/oc-gate
  - name: Oc Gate Operator
    url: https://github.com/yaacov/oc-gate-operator
  maturity: alpha
  provider:
    name: yaacov.com
  version: 0.0.1
