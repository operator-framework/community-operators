apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: open-liberty-operator.v0.6.0
  namespace: placeholder
  annotations:
    alm-examples: >-
      [{"apiVersion":"openliberty.io/v1beta1","kind":"OpenLibertyApplication","metadata":{"name":"demo-app"},"spec":{"replicas":1,"applicationImage":"openliberty/open-liberty:full-java8-openj9-ubi","expose":true}},{"apiVersion": "openliberty.io/v1beta1","kind": "OpenLibertyDump","metadata": {"name": "example-dump"},"spec": {"podName": "Specify_Pod_Name_Here","include": ["heap","thread"]}},{"apiVersion": "openliberty.io/v1beta1","kind": "OpenLibertyTrace","metadata": {"name": "example-trace"},"spec": {"podName": "Specify_Pod_Name_Here","traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"}}]
    categories: Application Runtime
    certified: 'true'
    createdAt: 2020-05-21 09:00:00
    description: Deploy and manage applications running on Open Liberty
    containerImage: openliberty/operator:0.6.0
    support: IBM
    capabilities: Auto Pilot
    repository: https://github.com/OpenLiberty/open-liberty-operator
spec:
  displayName: Open Liberty Operator
  description: 'This advanced Operator can be used to deploy and manage Open Liberty applications with 
    consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) 
    and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily 
    configuring and managing the single sign-on information for your Open Liberty applications.
    
    Open Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while 
    dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!

    Here are some key features:

    #### Application Lifecyle
    
    You can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream.
    When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.


    #### Custom RBAC

    This Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default
    it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.


    #### Environment Configuration

    You can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from
    a ConfigMap, a Secret or a value. 


    #### Routing

    Expose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments.
    Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.


    #### High Availability via Horizontal Pod Autoscaling

    Run multiple instances of your application for high availability. Either specify
    a static number of replicas or easily configure horizontal auto scaling to create (and delete)
    instances based on resource consumption.


    #### Persistence and advanced storage

    Enable persistence for your application by specifying simple requirements: just tell us the size
    of the storage and where you would like it to be mounted and We will create and manage that storage for you.  

    This toggles a StatefulSet resource instead of a Deployment resource, so your container can recover
    transactions and state upon a pod restart. 

    We offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure
    many details of the persistent volume, such as its storage class and access mode.

    You can also easily configure and use a single storage for serviceability related Day-2 operations, 
    such as gatherig server traces and dumps.


    #### Service Binding

    Easily bind to available services in your cluster.  Your runtime components can expose and consume other services
    by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting
    them into your container and watching for any changes in configuration!  This way your applications can dynamically
    reconnect to its required services without any intervention or interruption.


    #### Single Sign-On (SSO)
    
    Open Liberty provides capabilities to delegate authentication to external providers. Your application users can log in 
    using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, 
    and any OpenID Connect (OIDC) or OAuth 2.0 clients.

    Open Liberty Operator allows to easily configure and manage the single sign-on information for your applications.

    #### Exposing metrics to Prometheus

    The Open Liberty Operator exposes the runtime container''s metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).

    Users can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container,
    or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication''s `spec.monitoring` key controlling things like the poll 
    internal and security credentials.

    #### Easily mount logs and transaction directories

    If you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster),
    simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:

      ```
      storage:
        size: 2Gi
        mountPath: "/logs"
      ```


    #### Integration with OpenShift''s Certificate Manager

    The Open Liberty Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to
    automatically provision TLS certificates for pods as well as routes.

    When creating certificates via the OpenLibertyApplication CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) 
    and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.

    The certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.

    #### Integration with OpenShift Serverless

    Deploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated 
    resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.


    #### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift''s Topology UI

    Automatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your
    runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor 
    all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can
    also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.
    
    During this integration we also set the corresponding labels to support OpenShift''s Developer Topology UI,which allows you to visualize your entire set of deployments 
    and how they are connected.  

        See our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/master/doc/)
        for more information.'
  maturity: beta
  replaces: open-liberty-operator.v0.5.1
  version: 0.6.0
  keywords:
    - Open Liberty
    - MicroProfile
    - Jakarta EE
    - Java
    - Application Server
    - Application Runtime
    - Runtime
    - Spring
    - Application
    - Open Source
    - OpenLiberty
  maintainers:
    - name: Artur Dzmitryieu
      email: dzmitry@ca.ibm.com
    - name: Navid Shakibapour Tabrizi
      email: navidst@ca.ibm.com
    - name: Leo Christy Jesuraj
      email: leojc@ca.ibm.com
    - name: Arthur De Magalhaes
      email: arthurdm@ca.ibm.com
  provider:
    name: IBM
  links:
    - name: Documentation
      url: https://github.com/OpenLiberty/open-liberty-operator/tree/master/doc
    - name: Open Liberty
      url: https://openliberty.io/
    - name: Open Liberty Images
      url: https://github.com/OpenLiberty/ci.docker
  icon:
    - base64data: 
      mediatype: image/png
  customresourcedefinitions:
    owned:
      - name: openlibertyapplications.openliberty.io
        displayName: Open Liberty Application
        kind: OpenLibertyApplication
        version: v1beta1
        description: Configuration for the deployment of an Open Liberty application
        resources:
          - name: ''
            kind: Deployment
          - name: ''
            kind: Service
          - name: ''
            kind: StatefulSet
          - name: ''
            kind: Route
          - name: ''
            kind: HorizontalPodAutoscaler
        specDescriptors:
          - path: applicationImage
            description: application image to be installed 
            displayName: Application Image
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:text
          - path: version
            description: version of the application
            displayName: Application Version
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:text
          - path: pullPolicy
            description: image pull policy for container image
            displayName: Pull Policy
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - path: replicas
            description: number of pods to create
            displayName: Replicas
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:podCount
          - path: expose
            description: automatically create HTTP Route
            displayName: Expose
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
          - path: resourceConstraints
            description: resource requirements for cpu and memory
            displayName: Resource Requirements
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
          - path: service.port
            description: port to use for kubernetes service
            displayName: Service Port
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:number
          - path: service.type
            description: type to use for kubernetes service
            displayName: Service Type
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:text
          - path: autoscaling
            description: horizontal pod autoscaling
            displayName: Autoscaling
            x-descriptors: 
              - urn:alm:descriptor:com.tectonic.ui:fieldGroup:label
        statusDescriptors:
          - path: conditions
            description: status conditions
            displayName: Status conditions
            x-descriptors: 
              - urn:alm:descriptor:io.kubernetes.conditions
      - name: openlibertytraces.openliberty.io
        displayName: Open Liberty Trace
        kind: OpenLibertyTrace
        version: v1beta1
        description: Day-2 operation for gathering server traces
      - name: openlibertydumps.openliberty.io
        displayName: Open Liberty Dump
        kind: OpenLibertyDump
        version: v1beta1
        description: Day-2 operation for generating server dumps 
  install:
    strategy: deployment
    spec:
      clusterPermissions: 
      - rules:
        - apiGroups:
          - ''
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          - namespaces
          - pods/exec
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - apps
          resourceNames:
          - open-liberty-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - openliberty.io
          resources:
          - '*'
          - openlibertytraces
          - openlibertydumps
          verbs:
          - '*'
        - apiGroups:
          - image.openshift.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - '*'
        - apiGroups:
          - serving.knative.dev
          resources:
          - services
          verbs:
          - '*'
        - apiGroups:
          - cert-manager.io
          resources:
          - certificates
          verbs:
          - '*'
        - apiGroups:
          - app.k8s.io
          resources:
          - applications
          verbs:
          - '*'
        - apiGroups:
          - apps.openshift.io
          resources:
          - servicebindingrequests
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          - extensions
          resources:
          - ingresses
          verbs:
          - '*'
        serviceAccountName: open-liberty-operator
      deployments:
        - name: open-liberty-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: open-liberty-operator
            template:
              metadata:
                labels:
                  name: open-liberty-operator
              spec:
                serviceAccountName: open-liberty-operator
                containers:
                  - name: open-liberty-operator
                    image: openliberty/operator:0.6.0
                    command:
                      - open-liberty-operator
                    imagePullPolicy: Always
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: open-liberty-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: true
    - type: AllNamespaces
      supported: true