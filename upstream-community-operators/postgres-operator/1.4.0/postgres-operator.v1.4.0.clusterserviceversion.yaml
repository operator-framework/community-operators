apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n    {\n        \"apiVersion\": \"acid.zalan.do/v1\",\n     \
      \   \"kind\": \"postgresql\",\n        \"metadata\": {\n            \"name\"\
      : \"acid-minimal-cluster\"\n        },\n        \"spec\": {\n            \"\
      databases\": {\n                \"foo\": \"zalando\"\n            },\n     \
      \       \"numberOfInstances\": 2,\n            \"postgresql\": {\n         \
      \       \"version\": \"11\"\n            },\n            \"teamId\": \"ACID\"\
      ,\n            \"users\": {\n                \"foo_user\": [],\n           \
      \     \"zalando\": [\n                    \"superuser\",\n                 \
      \   \"createdb\"\n                ]\n            },\n            \"volume\"\
      : {\n                \"size\": \"1Gi\"\n            }\n        }\n    },\n \
      \   {\n        \"apiVersion\": \"acid.zalan.do/v1\",\n        \"kind\": \"OperatorConfiguration\"\
      ,\n        \"metadata\": {\n            \"name\": \"postgresql-operator-default-configuration\"\
      \n        },\n        \"configuration\": {\n            \"aws_or_gcp\": {\n\
      \                \"aws_region\": \"eu-central-1\"\n            },\n        \
      \    \"debug\": {\n                \"debug_logging\": true,\n              \
      \  \"enable_database_access\": true\n            },\n            \"docker_image\"\
      : \"registry.opensource.zalan.do/acid/spilo-cdp-12:1.6-p16\",\n            \"etcd_host\"\
      : \"\",\n            \"enable_crd_validation\": true,\n            \"enable_shm_volume\"\
      : true,\n            \"kubernetes\": {\n                \"cluster_domain\":\
      \ \"cluster.local\",\n                \"cluster_labels\": {\n              \
      \      \"application\": \"spilo\"\n                },\n                \"cluster_name_label\"\
      : \"cluster-name\",\n                \"enable_init_containers\": true,\n   \
      \             \"enable_pod_antiaffinity\": false,\n                \"enable_pod_disruption_budget\"
      : true,\n                \"enable_sidecars\": true,\n                \"master_pod_move_timeout\"
      : \"20m\",\n                \"oauth_token_secret_name\": \"postgresql-operator\"
      ,\n                \"pdb_name_format\": \"postgres-{cluster}-pdb\",\n      \
      \          \"pod_antiaffinity_topology_key\": \"kubernetes.io/hostname\",\n\
      \                \"pod_management_policy\": \"ordered_ready\",\n           \
      \     \"pod_role_label\": \"spilo-role\",\n                \"pod_service_account_name\"\
      : \"postgres-pod\",\n                \"pod_terminate_grace_period\": \"5m\"\
      ,\n                \"secret_name_template\": \"{username}.{cluster}.credentials.{tprkind}.{tprgroup}\"\
      ,\n                \"spilo_privileged\": false,\n                \"watched_namespaces\"
      : \"*\"\n            },\n            \"load_balancer\": {\n                \
      \"enable_master_load_balancer\": false,\n                \"enable_replica_load_balancer\"
      : false,\n                \"master_dns_name_format\": \"{cluster}.{team}.{hostedzone}\"
      ,\n                \"replica_dns_name_format\": \"{cluster}-repl.{team}.{hostedzone}\"
      \n            },\n            \"logging_rest_api\": {\n                \"api_port\"\
      : 8008,\n                \"cluster_history_entries\": 1000,\n              \
      \  \"ring_log_lines\": 100\n            },\n            \"logical_backup\":\
      \ {\n                \"logical_backup_docker_image\": \"registry.opensource.zalan.do/acid/logical-backup\"\
      ,\n                \"logical_backup_s3_bucket\": \"\",\n                \"logical_backup_schedule\"\
      : \"30 00 * * *\"\n            },\n            \"max_instances\": -1,\n    \
      \        \"min_instances\": -1,\n            \"postgres_pod_resources\": {\n\
      \                \"default_cpu_limit\": \"3\",\n                \"default_cpu_request\"\
      : \"100m\",\n                \"default_memory_limit\": \"1Gi\",\n          \
      \      \"default_memory_request\": \"100Mi\"\n            },\n            \"\
      repair_period\": \"5m\",\n            \"resync_period\": \"30m\",\n        \
      \    \"scalyr\": {\n                \"scalyr_cpu_limit\": \"1\",\n         \
      \       \"scalyr_cpu_request\": \"100m\",\n                \"scalyr_memory_limit\"\
      : \"1Gi\",\n                \"scalyr_memory_request\": \"50Mi\"\n          \
      \  },\n            \"teams_api\": {\n                \"enable_team_superuser\"\
      : false,\n                \"enable_teams_api\": false,\n                \"pam_role_name\"\
      : \"zalandos\",\n                \"protected_role_names\": [\n             \
      \       \"admin\"\n                ],\n                \"team_admin_role\":\
      \ \"admin\",\n                \"team_api_role_configuration\": {\n         \
      \           \"log_statement\": \"all\"\n                }\n            },\n\
      \            \"timeouts\": {\n                \"pod_deletion_wait_timeout\"\
      : \"10m\",\n                \"pod_label_wait_timeout\": \"10m\",\n         \
      \       \"ready_wait_interval\": \"4s\",\n                \"ready_wait_timeout\"\
      : \"30s\",\n                \"resource_check_interval\": \"3s\",\n         \
      \       \"resource_check_timeout\": \"10m\"\n            },\n            \"\
      users\": {\n                \"replication_username\": \"standby\",\n       \
      \         \"super_username\": \"postgres\"\n            },\n            \"workers\"\
      : 4\n        }\n    }\n]"
    capabilities: Full Lifecycle
    categories: Database
    certified: 'false'
    containerImage: registry.opensource.zalan.do/acid/postgres-operator:v1.4.0
    createdAt: 2019-07-24 10:30:00
    description: Postgres operator creates and manages PostgreSQL clusters running
      in Kubernetes.
    repository: https://github.com/zalando/postgres-operator
    support: Zalando SE
  name: postgres-operator.v1.4.0
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
    - description: Creates a PostgreSQL cluster managed by Postgres-Operator.
      displayName: PostgreSQL
      kind: postgresql
      name: postgresqls.acid.zalan.do
      version: v1
    - description: Configuration for PostgreSQL cluster managed by Postgres-Operator.
      displayName: OperatorConfiguration
      kind: OperatorConfiguration
      name: operatorconfigurations.acid.zalan.do
      version: v1
  description: "The Postgres operator manages PostgreSQL clusters on Kubernetes.\n\
    \n### Key principles\n\n* **Hands free:** Configuration happens only via manifests\
    \ and its own config\n* **Cloud native:** Easy integration in automated deploy\
    \ pipelines with no access to Kubernetes directly\n* **Scalable:** Run highly\
    \ available PostgreSQL clusters powered by Patroni\n\n### How it works\n\nThe\
    \ operator watches additions, updates, and deletions of PostgreSQL cluster manifests\
    \ and changes the running clusters accordingly. For each PostgreSQL custom resource\
    \ it creates StatefulSets, Services, and also Postgres roles. For some configuration\
    \ changes, e.g. updating a pod's Docker image, the operator carries out the rolling\
    \ update.\n\n### Creating a Postgres cluster\n\nAfter installing the Postgres\
    \ Operator via OLM you can use the provided YAML examples to create a minimal\
    \ cluster setup with two instances.\n\n```\n# First, make sure the operator is\
    \ running\nkubectl get pod -l name=postgres-operator -n operators\n\n# Then create\
    \ a new Postgres cluster with a manifest file\nkubectl create -n <namespace> -f\
    \ manifests/minimal-postgres-manifest.yaml\n\n# check for deployed clusters\n\
    kubectl get postgresql -n <namespace>\n```\n\nThe StatefulSets, Services and Pods\
    \ will be given the same name as you cluster manifest. The database pods can be\
    \ identified by their number suffix, starting from `-0`. With the default setup\
    \ they run the Spilo container image by Zalando. As for the services and endpoints,\
    \ there will be one for the master pod and another one for all the replicas (`-repl`\
    \ suffix), plus a headless service `-config` for communication with Patroni. Check\
    \ if all components are coming up. Use the label `application=spilo` to filter\
    \ and list the label `spilo-role` to see which Pod currently contains the master.\n\
    \n```\n# check created database pods\nkubectl get pods -l application=spilo -L\
    \ spilo-role\n\n# check created service resources\nkubectl get svc -l application=spilo\n\
    ```\n\n### Configuring the operator\n\nThe operator can be configured by defining\
    \ an `OperatorConfiguration` custom resource or by creating a ConfigMap that contains\
    \ the parameters to be changed. The YAML example shows the default configuration\
    \ used internally when creating the operator via OLM. For a detailed description\
    \ of each parameter checkout out the [operator reference](https://github.com/zalando/postgres-operator/blob/master/docs/reference/operator_parameters.md)\n\
    \nIn order to obtain changes from the configuration first create an `OperatorConfiguration`\
    \ or ConfigMap. Then edit the Postgres Operator CSV and add a reference to this\
    \ resource in the `spec.containers` section of the `postgres-operator` deployment.\
    \ Then delete the running operator deployment so that the CSV respawns an updated\
    \ deployment.\n\n```\n# for CRD-based configuration\n- env:\n  - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT\n\
    \    value: postgresql-operator-default-configuration\n\n# for ConfigMap-based\
    \ configuration\n- env:\n  - name: CONFIG_MAP_NAME\n    value: \"postgres-operator\"\
    \n```\n\nPlease, check out the [user guide](https://github.com/zalando/postgres-operator/blob/master/docs/user.md)\
    \ for more details about how to use the operator.\n"
  displayName: Postgres-Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - patch
          - update
        serviceAccountName: postgres-operator
      deployments:
      - name: postgres-operator
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 2
          selector:
            matchLabels:
              name: postgres-operator
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              creationTimestamp: null
              labels:
                name: postgres-operator
            spec:
              containers:
              - image: registry.opensource.zalan.do/acid/postgres-operator:v1.4.0
                imagePullPolicy: IfNotPresent
                name: postgres-operator
                resources:
                  limits:
                    cpu: '2'
                    memory: 500Mi
                  requests:
                    cpu: 500m
                    memory: 250Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              serviceAccount: postgres-operator
              serviceAccountName: postgres-operator
              terminationGracePeriodSeconds: 30
      permissions:
      - rules:
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresqls
          - postgresqls/status
          - operatorconfigurations
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - ''
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ''
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - ''
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ''
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - get
          - list
        - apiGroups:
          - ''
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ''
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ''
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ''
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
        - apiGroups:
          - ''
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ''
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
        - apiGroups:
          - extensions
          resources:
          - podsecuritypolicies
          resourceNames:
          - privileged
          verbs:
          - use
        serviceAccountName: postgres-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - postgresql
  - kubernetes
  - database
  - managed-services
  - data-infrastructure
  - cloud-native
  - postgres-operator
  labels:
    name: postgres-operator
  links:
  - name: Documentation
    url: https://postgres-operator.readthedocs.io/en/latest/
  - name: GitHub
    url: https://github.com/zalando/postgres-operator
  maintainers:
  - email: opensource@zalando.de
    name: Zalando SE
  maturity: stable
  minKubeVersion: 1.14.0
  provider:
    name: Zalando SE
  replaces: postgres-operator.v1.3.0
  selector:
    matchLabels:
      name: postgres-operator
  version: 1.4.0
