apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: postgres-operator.v1.2.0
  namespace: placeholder
  annotations:
    capabilities: Full Lifecycle
    categories: Database
    certified: "false"
    repository: https://github.com/zalando/postgres-operator
    containerImage: registry.opensource.zalan.do/acid/postgres-operator:v1.2.0
    createdAt: 2019-07-24T10:30:00Z
    description: Postgres operator creates and manages PostgreSQL clusters running in Kubernetes.
    support: Zalando SE
    alm-examples: |-
      [
          {
              "apiVersion": "acid.zalan.do/v1",
              "kind": "postgresql",
              "metadata": {
                  "name": "acid-minimal-cluster"
              },
              "spec": {
                  "databases": {
                      "foo": "zalando"
                  },
                  "numberOfInstances": 2,
                  "postgresql": {
                      "version": "11"
                  },
                  "teamId": "ACID",
                  "users": {
                      "foo_user": [],
                      "zalando": [
                          "superuser",
                          "createdb"
                      ]
                  },
                  "volume": {
                      "size": "1Gi"
                  }
              }
          },
          {
              "apiVersion": "acid.zalan.do/v1",
              "kind": "OperatorConfiguration",
              "metadata": {
                  "name": "postgresql-operator-default-configuration"
              },
              "configuration": {
                  "aws_or_gcp": {
                      "aws_region": "eu-central-1"
                  },
                  "debug": {
                      "debug_logging": true,
                      "enable_database_access": true
                  },
                  "docker_image": "registry.opensource.zalan.do/acid/spilo-11:1.5-p9",
                  "etcd_host": "",
                  "kubernetes": {
                      "cluster_domain": "cluster.local",
                      "cluster_labels": {
                          "application": "spilo"
                      },
                      "cluster_name_label": "cluster-name",
                      "enable_pod_antiaffinity": false,
                      "oauth_token_secret_name": "postgresql-operator",
                      "pdb_name_format": "postgres-{cluster}-pdb",
                      "pod_antiaffinity_topology_key": "kubernetes.io/hostname",
                      "pod_management_policy": "ordered_ready",
                      "pod_role_label": "spilo-role",
                      "pod_service_account_name": "operator",
                      "pod_terminate_grace_period": "5m",
                      "secret_name_template": "{username}.{cluster}.credentials.{tprkind}.{tprgroup}",
                      "spilo_privileged": false
                  },
                  "load_balancer": {
                      "enable_master_load_balancer": false,
                      "enable_replica_load_balancer": false,
                      "master_dns_name_format": "{cluster}.{team}.{hostedzone}",
                      "replica_dns_name_format": "{cluster}-repl.{team}.{hostedzone}"
                  },
                  "logging_rest_api": {
                      "api_port": 8008,
                      "cluster_history_entries": 1000,
                      "ring_log_lines": 100
                  },
                  "logical_backup": {
                      "logical_backup_docker_image": "registry.opensource.zalan.do/acid/logical-backup",
                      "logical_backup_s3_bucket": "",
                      "logical_backup_schedule": "30 00 * * *"
                  },
                  "max_instances": -1,
                  "min_instances": -1,
                  "postgres_pod_resources": {
                      "default_cpu_limit": "3",
                      "default_cpu_request": "100m",
                      "default_memory_limit": "1Gi",
                      "default_memory_request": "100Mi"
                  },
                  "repair_period": "5m",
                  "resync_period": "30m",
                  "scalyr": {
                      "scalyr_cpu_limit": "1",
                      "scalyr_cpu_request": "100m",
                      "scalyr_memory_limit": "1Gi",
                      "scalyr_memory_request": "50Mi"
                  },
                  "teams_api": {
                      "enable_team_superuser": false,
                      "enable_teams_api": false,
                      "pam_role_name": "zalandos",
                      "protected_role_names": [
                          "admin"
                      ],
                      "team_admin_role": "admin",
                      "team_api_role_configuration": {
                          "log_statement": "all"
                      }
                  },
                  "timeouts": {
                      "pod_deletion_wait_timeout": "10m",
                      "pod_label_wait_timeout": "10m",
                      "ready_wait_interval": "4s",
                      "ready_wait_timeout": "30s",
                      "resource_check_interval": "3s",
                      "resource_check_timeout": "10m"
                  },
                  "users": {
                      "replication_username": "standby",
                      "super_username": "postgres"
                  },
                  "workers": 4
              }
          }
      ]
spec:
  version: 1.2.0
  minKubeVersion: 1.10.0
  maturity: stable
  displayName: Postgres-Operator
  description: |
    The Postgres operator manages PostgreSQL clusters on Kubernetes.

    ### Key principles

    * **Hands free:** Configuration happens only via manifests and its own config
    * **Cloud native:** Easy integration in automated deploy pipelines with no access to Kubernetes directly
    * **Scalable:** Run highly available PostgreSQL clusters powered by Patroni

    ### How it works

    The operator watches additions, updates, and deletions of PostgreSQL cluster manifests and changes the running clusters accordingly. For each PostgreSQL custom resource it creates StatefulSets, Services, and also Postgres roles. For some configuration changes, e.g. updating a pod's Docker image, the operator carries out the rolling update.

    ### Creating a Postgres cluster

    After installing the Postgres Operator via OLM you can use the provided YAML examples to create a minimal cluster setup with two instances.

    ```
    # First, make sure the operator is running
    kubectl get pod -l name=postgres-operator -n operators

    # Then create a new Postgres cluster with a manifest file
    kubectl create -n <namespace> -f manifests/minimal-postgres-manifest.yaml

    # check for deployed clusters
    kubectl get postgresql -n <namespace>
    ```

    The StatefulSets, Services and Pods will be given the same name as you cluster manifest. The database pods can be identified by their number suffix, starting from `-0`. With the default setup they run the Spilo container image by Zalando. As for the services and endpoints, there will be one for the master pod and another one for all the replicas (`-repl` suffix), plus a headless service `-config` for communication with Patroni. Check if all components are coming up. Use the label `application=spilo` to filter and list the label `spilo-role` to see which Pod currently contains the master.

    ```
    # check created database pods
    kubectl get pods -l application=spilo -L spilo-role

    # check created service resources
    kubectl get svc -l application=spilo
    ```

    ### Configuring the operator

    The operator can be configured by defining an `OperatorConfiguration` custom resource or by creating a ConfigMap that contains the parameters to be changed. The YAML example shows the default configuration used internally when creating the operator via OLM. For a detailed description of each parameter checkout out the [operator reference](https://github.com/zalando/postgres-operator/blob/master/docs/reference/operator_parameters.md)

    In order to obtain changes from the configuration first create an `OperatorConfiguration` or ConfigMap. Then edit the Postgres Operator CSV and add a reference to this resource in the `spec.containers` section of the `postgres-operator` deployment. Then delete the running operator deployment so that the CSV respawns an updated deployment.

    ```
    # for CRD-based configuration
    - env:
      - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT
        value: postgresql-operator-default-configuration

    # for ConfigMap-based configuration
    - env:
      - name: CONFIG_MAP_NAME
        value: "postgres-operator"
    ```

    Please, check out the [user guide](https://github.com/zalando/postgres-operator/blob/master/docs/user.md) for more details about how to use the operator.
  keywords: ['postgresql', 'kubernetes', 'database', 'managed-services', 'data-infrastructure', 'cloud-native', 'postgres-operator']
  maintainers:
  - name: Zalando SE
    email: opensource@zalando.de
  provider:
    name: Zalando SE
  labels:
    name: postgres-operator
  selector:
    matchLabels:
      name: postgres-operator
  icon:
    - base64data: 
      mediatype: image/png
  links:
  - name: Documentation
    url: https://postgres-operator.readthedocs.io/en/latest/
  - name: GitHub
    url: https://github.com/zalando/postgres-operator
  customresourcedefinitions:
    owned:
    - name: postgresqls.acid.zalan.do
      version: v1
      kind: postgresql
      displayName: PostgreSQL
      description: Creates a PostgreSQL cluster managed by Postgres-Operator.
    - name: operatorconfigurations.acid.zalan.do
      version: v1
      kind: OperatorConfiguration
      displayName: OperatorConfiguration
      description: Configuration for PostgreSQL cluster managed by Postgres-Operator.
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: false
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - serviceAccountName: operator
        rules:
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - patch
          - update
        - apiGroups:
          - "rbac.authorization.k8s.io"
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - get
          - create
          - delete
          - patch
          - list
          resourceNames:
          - operator
      permissions:
      - serviceAccountName: operator
        rules:
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresqls
          - postgresqls/status
          - operatorconfigurations
          verbs:
          - "*"
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch # needed if operator account is used for pods as well
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - update
          - delete
          - get
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - update # only for resizing AWS volumes
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - watch
          - patch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - patch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - batch
          resources:
          - cronjobs # enables logical backups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
        - apiGroups:
          - "rbac.authorization.k8s.io"
          resources:
          - rolebindings
          verbs:
          - get
          - create
      deployments:
      - name: postgres-operator
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 2
          selector:
            matchLabels:
              name: postgres-operator
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              creationTimestamp: null
              labels:
                name: postgres-operator
            spec:
              serviceAccount: operator
              serviceAccountName: operator
              containers:
              - image: registry.opensource.zalan.do/acid/postgres-operator:v1.2.0
                imagePullPolicy: IfNotPresent
                name: postgres-operator
                resources:
                  limits:
                    cpu: "2"
                    memory: 500Mi
                  requests:
                    cpu: 500m
                    memory: 250Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              terminationGracePeriodSeconds: 30
