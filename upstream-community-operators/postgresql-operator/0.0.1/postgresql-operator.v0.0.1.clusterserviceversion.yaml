apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "postgresql.example.com/v1alpha1",
          "kind": "Postgresql",
          "metadata": {
            "name": "example-postgresql"
          },
          "spec": {
            "image": "postgres:10.4",
            "size": 3
          }
        }
      ]
    capabilities: Basic Install
  name: postgresql-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Postgresql
      name: postgresqls.postgresql.example.com
      version: v1alpha1
  description: "The Postgres operator manages PostgreSQL clusters on Kubernetes.\n/
    / How it works\n\nThe/
    / operator watches additions, updates, and deletions of PostgreSQL cluster manifests/
    / and changes the running clusters accordingly. For each PostgreSQL custom resource/
    / it creates StatefulSets, Services, and also Postgres roles. For some configuration/
    / changes, e.g. updating a pods Docker image, the operator carries out the rolling/
    / update.\n\n### Creating a Postgres cluster\n\nAfter installing the Postgres/
    / Operator you can use the provided YAML examples to create a minimal/
    / cluster setup with onw instances.\n\n```\n# First, make sure the operator is/
    / running\nkubectl get pod -l name=postgres-operator -n operators\n\n# Then create/
    / a new Postgres cluster with a custom resource file/
    / \n\n# check for deployed clusters\n/
    kubectl get postgresql -n <namespace>\n```\n\n\n\nThe operator can be configured by defining/
    / an `OperatorConfiguration` custom resource that contains/
    / the parameters to be changed. The YAML example shows the default configuration/
    / used internally when creating the operator . For a detailed description/
    / of each parameter checkout out the [operator reference](https://github.com/janepelladinesh/postgresql-operator)\n/
    / for more details about how to use the operator.\n"
  displayName: Postgresql Operator
  install:
    spec:
      deployments:
      - name: postgresql-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: postgresql-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: postgresql-operator
            spec:
              containers:
              - command:
                - /usr/local/bin/ao-logs
                - /tmp/ansible-operator/runner
                - stdout
                image: quay.io/openlabs_operator/kube-operator:postgresql
                imagePullPolicy: Always
                name: ansible
                resources: {}
                volumeMounts:
                - mountPath: /tmp/ansible-operator/runner
                  name: runner
                  readOnly: true
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: postgresql-operator
                - name: ANSIBLE_GATHERING
                  value: explicit
                image: quay.io/openlabs_operator/kube-operator:postgresql
                imagePullPolicy: Always
                name: operator
                resources: {}
                volumeMounts:
                - mountPath: /tmp/ansible-operator/runner
                  name: runner
              serviceAccountName: postgresql-operator
              volumes:
              - emptyDir: {}
                name: runner
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - postgresql-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          verbs:
          - get
        - apiGroups:
          - postgresql.example.com
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: postgresql-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  maturity: alpha
  keywords:
  - postgres
  - database
  maintainers:
  - email: psql-developer@example.com
    name: Postgresql
  provider:
    name: Postgresql
  version: 0.0.1
