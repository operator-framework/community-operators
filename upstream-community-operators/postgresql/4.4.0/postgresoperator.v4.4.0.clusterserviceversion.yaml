apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: postgresoperator.v4.4.0
  annotations:
    certified: "false"
    support: crunchydata.com
    categories: Database
    capabilities: Auto Pilot
    description: Enterprise open source PostgreSQL-as-a-Service
    createdAt: 2019-12-31 19:40Z
    containerImage: registry.developers.crunchydata.com/crunchydata/postgres-operator:centos7-4.4.0
    repository: https://github.com/CrunchyData/postgres-operator
    alm-examples: |-
      [
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgcluster",
          "metadata": {
            "labels": {
              "archive": "false"
            },
            "name": "example"
          },
          "spec": {
            "PrimaryStorage": {
              "accessmode": "ReadWriteOnce",
              "size": "1G",
              "storageclass": "standard",
              "storagetype": "dynamic"
            },
            "ccpimage": "crunchy-postgres-ha",
            "ccpimagetag": "centos7-12.3-4.4.0",
            "clustername": "example",
            "database": "example",
            "exporterport": "9187",
            "name": "example",
            "pgbadgerport": "10000",
            "port": "5432",
            "primarysecretname": "example-primaryuser",
            "rootsecretname": "example-postgresuser",
            "userlabels": {
              "archive": "false"
            },
            "usersecretname": "example-primaryuser"
          }
        },
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgreplica",
          "metadata": {
            "name": "example"
          },
          "spec": {},
          "status": {}
        },
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgpolicy",
          "metadata": {
            "name": "example"
          },
          "spec": {},
          "status": {}
        },
        {
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgtask",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        }
      ]
spec:
  displayName: Crunchy PostgreSQL for Kubernetes
  provider:
    name: Crunchy Data
  keywords:
  - postgres
  - postgresql
  - database
  - sql
  - operator
  - crunchy data
  description: |-
    Crunchy PostgreSQL for Kubernetes lets you run your own production-grade PostgreSQL-as-a-Service on Kubernetes!

    Powered by the Crunchy [PostgreSQL Operator](https://github.com/CrunchyData/postgres-operator), Crunchy PostgreSQL
    for Kubernetes automates and simplifies deploying and managing open source PostgreSQL clusters on Kubernetes by providing the
    essential features you need to keep your PostgreSQL clusters up and running, including:

    - **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],
    while fully customizing your Pods and PostgreSQL configuration!
    - **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].
    Uses [Pod Anti-Affinity][anti-affinity] to help resiliency; you can configure how aggressive this can be!
    Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled
    backups as well and set your backup retention policy
    - **Disaster Recovery**: Backups and restores leverage the open source [pgBackRest][] utility
    and [includes support for full, incremental, and differential backups as well as efficient delta restores][disaster-recovery].
    Set how long you want your backups retained for. Works great with very large databases!
    - **Monitoring**: Track the health of your PostgreSQL clusters using the open source [pgMonitor][] library.
    - **Clone**: Create new clusters from your existing clusters with a simple [`pgo clone`][pgo-clone] command.
    - **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running on
    and lets make further enhancements to customize your deployments, including:
      - Selecting different storage classes for your primary, replica, and backup storage
      - Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters!
      - Use your own container image repository, including support `imagePullSecrets` and private repositories
      - Bring your own trusted certificate authority (CA) for use with the Operator API server
      - Override your PostgreSQL configuration for each cluster

    and much more!

    [anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    [disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/disaster-recovery/
    [high-availability]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/
    [pgo-clone]: https://access.crunchydata.com/documentation/postgres-operator/latest/pgo-client/reference/pgo_clone/
    [provisioning]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/provisioning/

    [pgBackRest]: https://www.pgbackrest.org
    [pgMonitor]: https://github.com/CrunchyData/pgmonitor


    ## Before You Begin

    There are a few manual steps that the cluster administrator must perform prior to installing the PostgreSQL Operator.
    At the very least, it must be provided with an initial configuration.

    First, select a namespace in which to install the PostgreSQL Operator. PostgreSQL clusters will also be deployed here.
    If it does not exist, create it now.

    ```
    export PGO_OPERATOR_NAMESPACE=pgo
    kubectl create namespace "$PGO_OPERATOR_NAMESPACE"
    ```

    Next, clone the PostgreSQL Operator repository locally.

    ```
    git clone -b v4.4.0 https://github.com/CrunchyData/postgres-operator.git
    cd postgres-operator
    ```

    ### PostgreSQL Operator Configuration

    Edit `conf/postgres-operator/pgo.yaml` to configure the deployment. Look over all of the options and make any
    changes necessary for your environment. A [full description of each option][pgo-yaml-reference] is available in the documentation.

    [pgo-yaml-reference]: https://access.crunchydata.com/documentation/postgres-operator/4.4.0/configuration/pgo-yaml-configuration/

    When the file is ready, upload the entire directory to the `pgo-config` ConfigMap.

    ```
    kubectl -n "$PGO_OPERATOR_NAMESPACE" create configmap pgo-config \
      --from-file=./conf/postgres-operator
    ```

    ### Secrets

    Configure pgBackRest for your environment. If you do not plan to use AWS S3 to store backups, you can omit
    the `aws-s3` keys below.

    ```
    kubectl -n "$PGO_OPERATOR_NAMESPACE" create secret generic pgo-backrest-repo-config \
      --from-file=config=./conf/pgo-backrest-repo/config \
      --from-file=sshd_config=./conf/pgo-backrest-repo/sshd_config \
      --from-file=aws-s3-ca.crt=./conf/pgo-backrest-repo/aws-s3-ca.crt \
      --from-literal=aws-s3-key="<your-aws-s3-key>" \
      --from-literal=aws-s3-key-secret="<your-aws-s3-key-secret>"
    ```

    ### Certificates (optional)

    The PostgreSQL Operator has an API that uses TLS to communicate securely with clients. If you have
    a certificate bundle validated by your organization, you can install it now.  If not, the API will
    automatically generate and use a self-signed certificate.

    ```
    kubectl -n "$PGO_OPERATOR_NAMESPACE" create secret tls pgo.tls \
      --cert=/path/to/server.crt \
      --key=/path/to/server.key
    ```

    Once these resources are in place, the PostgreSQL Operator can be installed into the cluster.


    ## After You Install

    Once the PostgreSQL Operator is installed in your Kubernetes cluster, you will need to do a few things
    to use the [PostgreSQL Operator Client][pgo-client].

    [pgo-client]: https://access.crunchydata.com/documentation/postgres-operator/latest/pgo-client/

    Install the first set of client credentials and download the `pgo` binary and client certificates.

    ```
    PGO_CMD=kubectl ./deploy/install-bootstrap-creds.sh
    PGO_CMD=kubectl ./installers/kubectl/client-setup.sh
    ```

    The client needs to be able to reach the PostgreSQL Operator API from outside the Kubernetes cluster.
    Create an external service or forward a port locally.

    ```
    kubectl -n "$PGO_OPERATOR_NAMESPACE" expose deployment postgres-operator --type=LoadBalancer

    export PGO_APISERVER_URL="https://$(
      kubectl -n "$PGO_OPERATOR_NAMESPACE" get service postgres-operator \
        -o jsonpath="{.status.loadBalancer.ingress[*]['ip','hostname']}"
    ):8443"
    ```
    _or_
    ```
    kubectl -n "$PGO_OPERATOR_NAMESPACE" port-forward deployment/postgres-operator 8443

    export PGO_APISERVER_URL="https://127.0.0.1:8443"
    ```

    Verify connectivity using the `pgo` command.

    ```
    pgo version
    # pgo client version 4.4.0
    # pgo-apiserver version 4.4.0
    ```
  version: 4.4.0
  links:
  - name: Crunchy Data
    url: https://www.crunchydata.com/
  - name: Documentation
    url: https://access.crunchydata.com/documentation/postgres-operator/
  maintainers:
  - name: Crunchy Data
    email: info@crunchydata.com
  minKubeVersion: 1.11.0
  maturity: stable
  replaces: postgresoperator.v4.3.2
  labels:
    alm-owner-enterprise-app: postgres-operator
    alm-status-descriptors: postgres-operator.v4.4.0
  customresourcedefinitions:
    owned:
    - description: Represents a Postgres primary cluster member
      displayName: Postgres Primary Cluster Member
      kind: Pgcluster
      name: pgclusters.crunchydata.com
      resources:
      - kind: Pgcluster
        version: v1
      - kind: ConfigMap
        version: v1
      - kind: Deployment
        version: v1
      - kind: Job
        version: v1
      - kind: Pod
        version: v1
      - kind: ReplicaSet
        version: v1
      - kind: Secret
        version: v1
      - kind: Service
        version: v1
      - kind: PersistentVolumeClaim
        version: v1
      specDescriptors:
      - description: The Crunchy PostgreSQL image to use. Possible values are "crunchy-postgres-ha"
          and "crunchy-postgres-gis-ha"
        displayName: PostgreSQL Image
        path: ccpimage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The tag of the PostgreSQL image to use. Example is "centos7-12.3-4.4.0"
        displayName: PostgreSQL Image Tag
        path: ccpimagetag
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The name that is assigned to this specific PostgreSQL cluster
        displayName: PostgreSQL Cluster name
        path: clustername
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The name of the initial database to be created inside of the
          PostgreSQL cluster, e.g. "hippo"
        displayName: Initial PostgreSQL database name
        path: database
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The port to use for the PostgreSQL metrics exporter used for
          cluster monitoring, e.g. "9187"
        displayName: PostgreSQL Monitor Port
        path: exporterport
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: The name of the CRD entry. Should match the PostgreSQL Cluster
          name
        displayName: PostgreSQL CRD name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The port to use for the pgBadger PostgreSQL query analysis service,
          e.g. "10000"
        displayName: pgBadger Port
        path: pgbadgerport
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: The port to use for the PostgreSQL cluster, e.g. "5432"
        displayName: PostgreSQL Port
        path: port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: The name of the Secret that contains the PostgreSQL superuser
          credentials
        displayName: PostgreSQL superuser credentials
        path: rootsecretname
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The name of the Secret that contains the credentials used for
          managing cluster instance authentication, e.g. connections for replicas
        displayName: PostgreSQL support service credentials
        path: primarysecretname
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The name of the Secret that contains the PostgreSQL user credentials
          for logging into the PostgreSQL cluster
        displayName: PostgreSQL user credentials
        path: usersecretname
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Attributes that help set the primary storage of a PostgreSQL
          cluster
        displayName: PostgreSQL Primary Storage
        path: PrimaryStorage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
      - description: Contains the name of the PostgreSQL cluster to associate with
          this storage. Should match the Cluster name
        displayName: PostgreSQL Primary Storage Name
        path: PrimaryStorage.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Contains the storage class used for the primary PostgreSQL instance
          of the cluster
        displayName: PostgreSQL Primary StorageClass
        path: PrimaryStorage.storageclass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:io.kubernetes:StorageClass
      - description: The access mode for the storage class, e.g. "ReadWriteOnce"
        displayName: PostgreSQL Primary StorageClass Access Mode
        path: PrimaryStorage.accessmode
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:com.tectonic.ui:select:ReadWriteOnce
        - urn:alm:descriptor:com.tectonic.ui:select:ReadWriteMany
      - description: The size of the PVC that will store the data for the primary
          PostgreSQL instance, e.g. "1G"
        displayName: PostgreSQL Primary Data PVC Size
        path: PrimaryStorage.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:PrimaryStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Deprecated
        displayName: Deprecated
        path: status
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: A set of labels that help the PostgreSQL Operator manage a PostgreSQL
          cluster
        displayName: User defined labels
        path: userlabels
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: Outputs a human readable message of the status of if the PostgreSQL
          cluster initialization
        displayName: Initialization Message
        path: message
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Outputs the state of if the PostgreSQL cluster was initialized
        displayName: Initialization State
        path: state
        x-descriptors:
        - urn:alm:descriptor:text
      version: v1
    - description: Represents a Postgres replica cluster member
      displayName: Postgres Replica Cluster Member
      kind: Pgreplica
      name: pgreplicas.crunchydata.com
      resources:
      - kind: Pgreplica
        version: v1
      - kind: ConfigMap
        version: v1
      - kind: Deployment
        version: v1
      - kind: Job
        version: v1
      - kind: Pod
        version: v1
      - kind: ReplicaSet
        version: v1
      - kind: Secret
        version: v1
      - kind: Service
        version: v1
      - kind: PersistentVolumeClaim
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the deployment.
        displayName: Size
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      version: v1
    - description: Represents a Postgres sql policy
      displayName: Postgres SQL Policy
      kind: Pgpolicy
      name: pgpolicies.crunchydata.com
      resources:
      - kind: Pgpolicy
        version: v1
      specDescriptors:
      - description: The pgpolicy name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The pgpolicy sql.
        displayName: SQL
        path: sql
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1
    - description: Represents a Postgres workflow task
      displayName: Postgres workflow task
      kind: Pgtask
      name: pgtasks.crunchydata.com
      resources:
      - kind: Pgtask
        version: v1
      specDescriptors:
      - description: The pgtask name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The pgtask type.
        displayName: TaskType
        path: tasktype
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: Message
        displayName: Message
        path: message
        x-descriptors:
        - urn:alm:descriptor:text
      - description: State
        displayName: State
        path: state
        x-descriptors:
        - urn:alm:descriptor:text
      version: v1
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: true
  - type: AllNamespaces
    supported: false
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - serviceAccountName: postgres-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
          - update
          - delete
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - get
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          - endpoints
          - pods
          - pods/exec
          - pods/log
          - replicasets
          - secrets
          - services
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
          - deletecollection
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
          - deletecollection
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
          - deletecollection
        - apiGroups:
          - crunchydata.com
          resources:
          - pgclusters
          - pgpolicies
          - pgreplicas
          - pgtasks
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
          - delete
          - deletecollection
      permissions:
      - serviceAccountName: postgres-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          verbs:
          - get
          - list
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
      deployments:
      - name: postgres-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: postgres-operator
              vendor: crunchydata
          template:
            metadata:
              labels:
                name: postgres-operator
                vendor: crunchydata
            spec:
              serviceAccountName: postgres-operator
              containers:
              - name: apiserver
                image: registry.developers.crunchydata.com/crunchydata/pgo-apiserver:centos7-4.4.0
                imagePullPolicy: IfNotPresent
                ports:
                - containerPort: 8443
                readinessProbe:
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 15
                  periodSeconds: 5
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 15
                  periodSeconds: 5
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: PGO_INSTALLATION_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CRUNCHY_DEBUG
                  value: "false"
                - name: EVENT_ADDR
                  value: localhost:4150
                - name: PORT
                  value: "8443"
                - name: CCP_IMAGE_PREFIX
                  value: registry.developers.crunchydata.com/crunchydata
                - name: CCP_IMAGE_TAG
                  value: centos7-12.3-4.4.0
                - name: PGO_IMAGE_PREFIX
                  value: registry.developers.crunchydata.com/crunchydata
                - name: PGO_IMAGE_TAG
                  value: centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest-repo:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO_SYNC
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest-repo-sync:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST_RESTORE
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest-restore:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_CLIENT
                  value: registry.developers.crunchydata.com/crunchydata/pgo-client:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_LOAD
                  value: registry.developers.crunchydata.com/crunchydata/pgo-load:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_RMDATA
                  value: registry.developers.crunchydata.com/crunchydata/pgo-rmdata:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_SQL_RUNNER
                  value: registry.developers.crunchydata.com/crunchydata/pgo-sqlrunner:centos7-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_ADMIN
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-admin:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_BACKREST_RESTORE
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-backrest-restore:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_COLLECT
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-collect:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_GRAFANA
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-grafana:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGADMIN
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgadmin4:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGBADGER
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgbadger:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGBOUNCER
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGDUMP
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgdump:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGRESTORE
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgrestore:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_HA
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-ha:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_GIS_HA
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-gis-ha:centos7-12.3-3.0-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PROMETHEUS
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-prometheus:centos7-12.3-4.4.0
              - name: operator
                image: registry.developers.crunchydata.com/crunchydata/postgres-operator:centos7-4.4.0
                imagePullPolicy: IfNotPresent
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: PGO_INSTALLATION_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CRUNCHY_DEBUG
                  value: "false"
                - name: EVENT_ADDR
                  value: localhost:4150
                - name: CCP_IMAGE_PREFIX
                  value: registry.developers.crunchydata.com/crunchydata
                - name: CCP_IMAGE_TAG
                  value: centos7-12.3-4.4.0
                - name: PGO_IMAGE_PREFIX
                  value: registry.developers.crunchydata.com/crunchydata
                - name: PGO_IMAGE_TAG
                  value: centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest-repo:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST_REPO_SYNC
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest-repo-sync:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_BACKREST_RESTORE
                  value: registry.developers.crunchydata.com/crunchydata/pgo-backrest-restore:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_CLIENT
                  value: registry.developers.crunchydata.com/crunchydata/pgo-client:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_LOAD
                  value: registry.developers.crunchydata.com/crunchydata/pgo-load:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_RMDATA
                  value: registry.developers.crunchydata.com/crunchydata/pgo-rmdata:centos7-4.4.0
                - name: RELATED_IMAGE_PGO_SQL_RUNNER
                  value: registry.developers.crunchydata.com/crunchydata/pgo-sqlrunner:centos7-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_ADMIN
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-admin:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_BACKREST_RESTORE
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-backrest-restore:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_COLLECT
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-collect:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_GRAFANA
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-grafana:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGADMIN
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgadmin4:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGBADGER
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgbadger:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGBOUNCER
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGDUMP
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgdump:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PGRESTORE
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-pgrestore:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_HA
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-ha:centos7-12.3-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_POSTGRES_GIS_HA
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-gis-ha:centos7-12.3-3.0-4.4.0
                - name: RELATED_IMAGE_CRUNCHY_PROMETHEUS
                  value: registry.developers.crunchydata.com/crunchydata/crunchy-prometheus:centos7-12.3-4.4.0
              - name: scheduler
                image: registry.developers.crunchydata.com/crunchydata/pgo-scheduler:centos7-4.4.0
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  exec:
                    command:
                    - bash
                    - -c
                    - test -n "$(find /tmp/scheduler.hb -newermt '61 sec ago')"
                    failureThreshold: 2
                    initialDelaySeconds: 60
                    periodSeconds: 60
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: PGO_INSTALLATION_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CRUNCHY_DEBUG
                  value: "false"
                - name: EVENT_ADDR
                  value: localhost:4150
                - name: TIMEOUT
                  value: "3600"
              - name: event
                image: registry.developers.crunchydata.com/crunchydata/pgo-event:centos7-4.4.0
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /ping
                    port: 4151
                  initialDelaySeconds: 15
                  periodSeconds: 5
                env:
                - name: TIMEOUT
                  value: "3600"
  icon:
  - mediatype: image/svg+xml
    base64data: 
