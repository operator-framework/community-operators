apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |
      [{
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgcluster",
          "metadata": {
              "labels": {
                  "archive": "false",
                  "archive-timeout": "60",
                  "crunchy-pgbadger": "false",
                  "crunchy_collect": "false",
                  "current-primary": "fromcrd",
                  "deployment-name": "fromcrd",
                  "name": "fromcrd",
                  "pg-cluster": "fromcrd",
                  "pgo-backrest": "false",
                  "pgo-version": "4.0.1",
                  "primary": "true"
              },
              "name": "fromcrd",
            "namespace": "pgo"
          },
          "spec": {
              "ArchiveStorage": {
                  "accessmode": "",
                  "fsgroup": "26",
                  "matchLabels": "",
                  "name": "",
                  "size": "",
                  "storageclass": "fast",
                  "storagetype": "dynamic",
                  "supplementalgroups": ""
              },
              "BackrestStorage": {
                  "accessmode": "ReadWriteOnce",
                  "fsgroup": "26",
                  "matchLabels": "",
                  "name": "",
                  "size": "1G",
                  "storageclass": "fast",
                  "storagetype": "dynamic",
                  "supplementalgroups": ""
              },
              "ContainerResources": {
                  "limitscpu": "",
                  "limitsmemory": "",
                  "requestscpu": "",
                  "requestsmemory": ""
              },
              "PrimaryStorage": {
                  "accessmode": "ReadWriteOnce",
                  "fsgroup": "26",
                  "matchLabels": "",
                  "name": "fromcrd",
                  "size": "1G",
                  "storageclass": "fast",
                  "storagetype": "dynamic",
                  "supplementalgroups": ""
              },
              "ReplicaStorage": {
                  "accessmode": "ReadWriteOnce",
                  "fsgroup": "26",
                  "matchLabels": "",
                  "name": "",
                  "size": "1G",
                  "storageclass": "fast",
                  "storagetype": "dynamic",
                  "supplementalgroups": ""
              },
              "backuppath": "",
              "backuppvcname": "",
              "ccpimage":"crunchy-postgres",
              "ccpimagetag": "centos7-11.4-2.4.1",
              "clustername": "fromcrd",
              "customconfig": "",
              "database": "userdb",
              "name": "fromcrd",
            "namespace":"pgo",
              "nodename": "",
              "policies": "",
              "port": "5432",
              "primaryhost": "fromcrd",
              "primarysecretname": "fromcrd-primaryuser-secret",
              "replicas": "0",
              "rootsecretname": "fromcrd-postgres-secret",
              "secretfrom": "",
              "status": "",
              "strategy": "1",
              "user": "testuser",
              "userlabels": {
                  "archive": "false",
                  "archive-timeout": "60",
                  "crunchy-pgbadger": "false",
                  "crunchy_collect": "false",
                  "pgo-backrest": "false",
                  "pgo-version": "4.0.1"
              },
              "usersecretname": "fromcrd-testuser-secret"
          }
      },{
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgreplica",
          "metadata": {
              "name": "fromcrd",
              "namespace": "pgo"
          },
          "spec": {}
      },{
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgpolicy",
          "metadata": {
              "name": "fromcrd",
              "namespace": "pgo"
          },
          "spec": {}
      },{
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgtask",
          "metadata": {
              "name": "fromcrd",
              "namespace": "pgo"
          },
          "spec": {}
      },{
          "apiVersion": "crunchydata.com/v1",
          "kind": "Pgbackup",
          "metadata": {
              "name": "fromcrd",
              "namespace": "pgo"
          },
          "spec": {}
      }] 
    categories: Database
    capabilities: Full Lifecycle
    certified: "false"
    containerImage: crunchydata/postgres-operator:centos7-4.0.1
    createdAt: 07/04/2019
    description: A Postgres Operator from Crunchydata.com
    repository: https://github.com/CrunchyData/postgres-operator
    support: crunchydata.com
  name: postgresoperator.v4.0.1
  namespace: pgo
spec:
  apiservicedefinitions: {}
  displayName: Crunchy PostgreSQL Enterprise
  description: |
    The PostgreSQL Operator runs within a Kubernetes cluster and provides a means to deploy and manage PostgreSQL clusters.

    ## Before You Begin

    There are several manual steps that the cluster administrator must perform prior to installing the operator. The
    operator must be provided with an initial configuration to run in the cluster, as well as certificates and
    credentials that need to be generated.

    Start by cloning the operator repository locally.

    ```
    git clone -b 4.0.1 https://github.com/CrunchyData/postgres-operator.git
    cd postgres-operator
    ```

    ### Operator Configuration

    Edit `conf/postgres-operator/pgo.yaml` to configure the operator deployment. Look over all of the options and make any
    changes necessary for your environment.

    #### Image

    Update the `CCPImageTag` tag to configure the postgres image being used, updating for the version of postgres as needed.

    ```
    CCPImageTag:  centos7-11.3-2.4.1
    ```

    #### Storage

    Configure the backend storage for the Persistent Volumes used by each cluster. Depending on the type of persistent
    storage you wish to make available, adjust the `StorageClass` as necessary. In this case, we are deployed on AWS using `gp2`
    is the default for the cluster.

    ```
    storageos:
      AccessMode:  ReadWriteOnce
      Size:  1G
      StorageType:  dynamic
      StorageClass:  gp2
      Fsgroup:  26
    ```

    Once the storage backend is defined, enable the new storage option as needed.

    ```
    PrimaryStorage: storageos
    XlogStorage: storageos
    BackupStorage: storageos
    ReplicaStorage: storageos
    BackrestStorage: storageos
    ```

    ### Certificates

    You will need to either generate new TLS certificates or use existing certificates for the operator API.

    You can generate new self-signed certificates using scripts in the operator repository.

    ```
    export PGOROOT=$(pwd)
    cd $PGOROOT/deploy
    $PGOROOT/deploy/gen-api-keys.sh
    $PGOROOT/deploy/gen-sshd-keys.sh
    cd $PGOROOT
    ```

    ### Configuration and Secrets

    Once the configuration changes have been updated and certificates are in place, we can save the information to the cluster.

    Create the pgo namespace if it does not exist already. This single namespace is where the operator should be deployed to. Postgres clusters will also be deployed here.
    
    ```
    oc create namespace pgo 
    ```

    Create the `pgo-backrest-repo-config` Secret that is used by the operator.

    ```
    kubectl create secret generic -n pgo pgo-backrest-repo-config \
      --from-file=config=$PGOROOT/conf/pgo-backrest-repo/config \
    	--from-file=sshd_config=$PGOROOT/conf/pgo-backrest-repo/sshd_config \
      --from-file=aws-s3-credentials.yaml=$PGOROOT/conf/pgo-backrest-repo/aws-s3-credentials.yaml \
      --from-file=aws-s3-ca.crt=$PGOROOT/conf/pgo-backrest-repo/aws-s3-ca.crt


    ```

    Create the `pgo-auth-secret` Secret that is used by the operator.

    ```
    kubectl create secret generic -n pgo pgo-auth-secret \
      --from-file=server.crt=$PGOROOT/conf/postgres-operator/server.crt \
      --from-file=server.key=$PGOROOT/conf/postgres-operator/server.key \
      --from-file=pgouser=$PGOROOT/conf/postgres-operator/pgouser \
      --from-file=pgorole=$PGOROOT/conf/postgres-operator/pgorole
    ```

    Remove existing credentials for pgo-apiserver TLS REST API, if they exist.
    
    ```
    kubectl delete secret -n pgo tls pgo.tls
    ```

    Create credentials for pgo-apiserver TLS REST API
    ```
    kubectl create secret -n pgo tls pgo.tls \
      --key=$PGOROOT/conf/postgres-operator/server.key \
      --cert=$PGOROOT/conf/postgres-operator/server.crt
    ```

    Create the `pgo-config` ConfigMap that is used by the operator.

    ```
    kubectl create configmap -n pgo pgo-config \
    --from-file=$PGOROOT/conf/postgres-operator

    ```

    Once these resources are in place, the operator can be installed into the cluster.

    ## After You Install

    Once the operator is installed in the cluster, you will need to perform several steps to enable usage.

    ### Service

    ```
    oc expose deployment -n pgo postgres-operator --type=LoadBalancer
    ```

    For the pgo client to communicate with the operator, it needs to know where to connect. Export the service url as the PGO_APISERVER_URL for the pgo client in the shell

    ```
    export PGO_APISERVER_URL=https://<url of exposed service>:8443
    ```

    ### Security

    When postgres operator deploys, it creates a set of certificates the pgo client will need to communicate. 

    ### Client Certificates

    Copy the client certificates from the apiserver to the local environment - we use /tmp for this example. 

    ```
    oc cp <pgo-namespace>/<postgres-operator-pod>:/tmp/server.key /tmp/server.key -c apiserver
    oc cp <pgo-namespace>/<postgres-operator-pod>:/tmp/server.crt /tmp/server.crt -c apiserver
    ```

    Configure the shell for the pgo command line to use the certificates

    ```
    export PGO_CA_CERT=/tmp/server.crt
    export PGO_CLIENT_CERT=/tmp/server.crt
    export PGO_CLIENT_KEY=/tmp/server.key
    ```

  customresourcedefinitions:
    owned:
    - description: Represents a Postgres primary cluster member
      displayName: Postgres Primary Cluster Member
      kind: Pgcluster
      name: pgclusters.crunchydata.com
      resources:
      - kind: Deployment
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the deployment.
        displayName: Size
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
    - description: Represents a Postgres replica cluster member
      displayName: Postgres Replica Cluster Member
      kind: Pgreplica
      name: pgreplicas.crunchydata.com
      resources:
      - kind: Deployment
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the deployment.
        displayName: Size
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
    - description: Represents a Postgres sql policy
      displayName: Postgres SQL Policy
      kind: Pgpolicy
      name: pgpolicies.crunchydata.com
      resources:
      - kind: Pgpolicy
        name: ""
        version: v1
      specDescriptors:
      - description: The pgpolicy name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:name
      - description: The pgpolicy sql.
        displayName: SQL
        path: sql
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:sql
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
    - description: Represents a Postgres workflow task
      displayName: Postgres workflow task
      kind: Pgtask
      name: pgtasks.crunchydata.com
      resources:
      - kind: Pgtask
        name: ""
        version: v1
      specDescriptors:
      - description: The pgtask name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:name
      - description: The pgtask type.
        displayName: TaskType
        path: tasktype
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:tasktype
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
    - description: Represents a Postgres backup task
      displayName: Postgres backup task
      kind: Pgbackup
      name: pgbackups.crunchydata.com
      resources:
      - kind: Pgbackup
        name: ""
        version: v1
      specDescriptors:
      - description: The pgbackup name.
        displayName: Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:name
      - description: The pgbackup status.
        displayName: BackupStatus
        path: backupstatus
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:backupstatus
      statusDescriptors:
      - description: The current status of the application.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the application.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1
  icon:
  - base64data: iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAKgElEQVR4Xu2dX2wcRx3Hf3NO7CTun5CmTkxNKqq0RG4xKSKEBsW7xwM0qEUIhPj70Aq1/HlpnAcUqRJIgITaSEFFgNS8wEvhBcFLa0tUcDN3IZFJr4lCZEGkiLaB5k//kNgX22ff7aBde897692d3+zO7E2cu6fE95uZ3/w+8/39ZmfXawLdj1ERIEZ503UGukAMWwRdIF0ghkXAMHe6CukCMSwChrnTVUgXSIYIHJrgGVovNT16wOhFaLRzoAKAiKBhgMwDkgeEOEgGwDEDyNj4dSDkDtFizu37DoLpLJBOqgFDt9boh2OPz2JMVdl0BsjY+Fkg5KOqJqG9nxwVkz8Q01WRRDcHMPkBuZlBBCHV3uqFY99Z1KXKfICsFRhBCprUoh+IAhj26897oaAf/4GuhZmuXw1Q9AE5NHENAO5MN9P2Vj6QWwGKHiAKVOEjGXjv3PXhN8dbYMMqCcLCwL/Rd9fiqQe/vR5ji7ZRqBT1QBTCcAPSt3DdeeTci4Wo4DSbjQcrlcoUJnCWVawRAv1B27e3jsyf3/HoBkx7oY0iKGqBKIbhB6EtZdGStM+WVXyPENjipbzl9rZdbB1UKqtNCqBITy52pWiCYVWPOITwgh9I4UoNGfiBj2q/c+fOvqGhD827TS4M7q9fHHykT7b/VfYZoagB8sz4U9BDjmWeTDiYrz8PnMMfGSt9OU3fllX8HSHw9SAMyyrOMVbaGOzPh3buvi/W3938QEehqAGiUB1Z01Mw0JZVvEIIDIRhRqmlpSRVW+uUSskORAOMtOkpTkXBegHAN1JKvTQV/pgAJRuQmwCGG/SkOhJS1EuEwDe84q9CKY3Fe+EXX3hLJt2mB3Lwld1QKJyWGSzJdiVV8YcppWdU9Svbj/Ldl2TqSg9EoTq8Vbx8POIH0HH4C+UyPSgbUBX2nYSSDohiGFFA3J9dvXqlb2pqakFFkGX78KGcfOi7UO/NeDNTQiXGAsEU9uBKbjb5k5UK/a1s4BPT6PLFo5J6goQiD0SDOsIKwcDYs8fe3t9PLvkBxbSRhWVZ1tOEFF5UUuSbsAteOPAvkQ9GAVlYqG87ceLEVZHTwe9dleiA4Y+htJ4gVCIHRIM6Wvc6UpxRyYDLYutD+eeOR+cubx1pu8qX6td0IDcDjLBSMtcTARS8QhSqY/T0EafAeYFz57OMsVelVlmHjG3bXgdAvHvpmaB0CsjWa+dn6+tv3zTTP9gK4dDlyWs732abvUklpKjRUfvn5TId61DsY4f1U9diT9/i3z72TPqbXAlQtCjET0WcO88SQi5wTrwLvFpterRarbY9sdF+zpQMygRASs67MgORSFdp6gL2rMkEIJZVvEgIDGVKXaYDMSHQMj7oVAkuZSEVgr2XsTQh/i6l9G6ZQJhkmxlKjErEQMZe3g+kpywKhg/DcZovlcvlb8XZt11oGXztIbr49Ofx/m33zp994KvyD0qkBoJQR1zdiLuKvplqhnes03ogghcppVTJtUkeQPztrCjgllWcJwT6dB55iBQt8/3+/fYTPT3kN2F//XnWNtx947XhJ9seMRL3zx04+vmesJ04ZUkoZKVzvp5S2hA7tWRhWcU6IdArAajHtote/xJtsO5E2gnVnuYOY4RKMgPBFvLlwF8mBLbFRUY2uP4KnZmZ3lytVq9nirigsQgI230IeGGdnAs6gUgGs2DbxSYh8FipVHpFbhbt1j6UNCfFMuMmnSqn3nEZBEQmFkJbUc0SdiAw2Ldv30Bvb9+VuEWXH5Cxib8Agc8k+ZvmyjxrgMLtbdveCkDe0VVTMMBTQZFWiERBl0xZqpmgH/VJM3Bg2/thSukbUX0YAcQEdfjBwaziNDDcNpi+bdv+GQA5PNf7gdrkQ0/dhhpLtUJuBSAyJwvSKlmrQGSChlq5ASNM3+FbCOXdh8DBbIHXIhDM/RRMykmqC/53ojoZ9OXCPfbcxW2fTL7/Lg1kbKIEBOy4VdXplIWBEawBMruwcN9p2ybe7pUG8kRpA2yZnxMBAeBnKKUPhyePSw/8OUrpYZxt8KCvvYXoGgG7ypfmYP8egHwt7JNIIUH7tlQXd6wiDcQdIWHre8/V12bv/89fN2GDqcNOECTvREAGxt69e+/YuHHTqmMYGRjhnZ+nrigoqoG0Bg49KI1x3rbtTwCQU2kh4cZY+T1CzvmfGKNfShrPsopHCYHIhysw44nq0CoouoC4jux6Yxy2v3+u7fR1dNQ+XyiQ+4OOqji/WlmB9iKlNPLpD8sqvkkI7MAGMqpmBP3G9iMFRScQL/eGlJJ29c/MTPdXq9VVr0WyLOt7hBR+jSmwMjsrEQzMeKK5RtSUS3D0wAfD7TIfv4c7jIIiWl2WZU8TQm4XTUrUT1TuTgomBoRM/RH5j7mmEQM5OPE0FMB7Alz204ltcVKQHYf/A8D5ZqHQcxYzF3cBuP1xzkuM0cRDVkx/Xhbxf8Uh5nkCMRC3F8QhY5xDeUGRWe2Y4Pkwlmy5eyu9iGmHsUm6t6IdyPrGLHz67C8xfnbcZm5u9s7JycnpqNSHTZdZJ6EdSGtyigp+1glHteec1xijq2oYJuer9gcHJGPaajnNOdinj3j/lVlxqtNRMIhJfqx5IGnqSadgBAuwyp2WSFG5KcSH0Ww2BiqVine7FfPRBQSj0PDYnPN3GKOrXtWBmQfWBg8kQ9qSeVQo6Hhwi6gKDOfgMFZa9YBaVMCixuQc/sxY6XPYAMva5QoEsyrjgESlENnJph0/ahzZvrC+ygFJoZIdl07U77t03Hvlkcwk4i6gbLt4GSD+YbvwxDl3fsIY+yE2IL4dRpEy88GOrx1ImkIeVIOOSWOCgwGyvMjc1w9m/zMay07JA5FUSRogfjCaTf6VSoX+ARNA1TZYIKp3YEYDMV0d4UVQr88PnTx58r9ZFkc6IBIqESkkaSXeuMEHT52ibs3I9SOrjrBzWRZSeiBjE98HAr8SRUoEBFtE83ozUBYYnHPKWLZDyPRAkCrBApHd1mZZhUmLKB0QPkipGiVnA4KAoguIyjSBVamOMcN9ZgcigJIXkODEOHd+zBj7kSidBr+XUYYudbr+qAEyNn4aCNkdFwAXCuf8DGNLz25FfVafG0GDsZLw9RXYQEYFcXh4uHdgYFsdC45zmGaspOQPDMSNqQaIApWoOurGAsJC8O3y2lSoA5IABZO2/EA2GosfOX78+HnZgIXtR0ZG+rdsuauWtR+/vc40FfRRLZAYKCIgqtSBTYeykPKCoa6GhGcY8VBEEhTRkxiyAVQJxnH4ZLlMP6XKB1E/6hXijxiCYgIQ1zXLsv9OCNkjCkzeqcofTx8Qd4SD489CgfzU/eeuf7+8uP1/U96uKZgC8lJHGAC2+OeZrvSlrJgUFqWSTgFxXcRAWZtAlov9yhuD+OFymT4XDEreE/fXjAhK3n7pTVkRiTrqPnnekw66dcsD8VVBaWld3i+QSbP7ynux5K6QqNWZ96SxBZ5zWGCslP1PIGG3dMrOsiQGNNW0PXVxRimN/WVXnXPoqEJ0Tky2bxdIp5Wa37ZXNjq3sH1XIYbB7wLpAjEsAoa501VIF4hhETDMna5CDAPyf2qmgLAYU5k7AAAAAElFTkSuQmCC
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - '*'
          resources:
          - pgclusters
          - pgpolicies
          - pgtasks
          - pgbackups
          - pgreplicas
          verbs:
          - '*'
        - apiGroups:
          - '*'
          resources:
          - nodes
          - pods
          - namespaces
          - configmaps
          - storageclasses
          verbs:
          - get
          - list
        - apiGroups:
          - '*'
          resources:
          - secrets
          verbs:
          - get
          - list
          - create
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - list
          - watch
        serviceAccountName: postgres-operator
      deployments:
      - name: postgres-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: postgres-operator
          template:
            metadata:
              labels:
                name: postgres-operator
            spec:
              containers:
              - env:
                - name: TIMEOUT
                  value: "3600"
                - name: CCP_IMAGE_PREFIX
                  value: "crunchydata"
                - name: CCP_IMAGE_TAG
                  value: "centos7-11.4-2.4.1"
                - name: PGO_IMAGE_PREFIX
                  value: "crunchydata"
                - name: PGO_IMAGE_TAG
                  value: "centos7-4.0.1"
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                image: crunchydata/pgo-scheduler:centos7-4.0.1
                imagePullPolicy: IfNotPresent
                name: scheduler
              - env:
                - name: CRUNCHY_DEBUG
                  value: "true"
                - name: CCP_IMAGE_PREFIX
                  value: "crunchydata"
                - name: CCP_IMAGE_TAG
                  value: "centos7-11.4-2.4.1"
                - name: PGO_IMAGE_PREFIX
                  value: "crunchydata"
                - name: PGO_IMAGE_TAG
                  value: "centos7-4.0.1"
                - name: PORT
                  value: "8443"
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                image: crunchydata/postgres-operator:centos7-4.0.1
                imagePullPolicy: IfNotPresent
                name: operator
              - env:
                - name: CRUNCHY_DEBUG
                  value: "true"
                - name: CCP_IMAGE_PREFIX
                  value: "crunchydata"
                - name: CCP_IMAGE_TAG
                  value: "centos7-11.4-2.4.1"
                - name: PGO_IMAGE_PREFIX
                  value: "crunchydata"
                - name: PGO_IMAGE_TAG
                  value: "centos7-4.0.1"
                - name: PORT
                  value: "8443"
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PGO_OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: TLS_NO_VERIFY
                  value: "false"
                image: crunchydata/pgo-apiserver:centos7-4.0.1
                imagePullPolicy: IfNotPresent
                name: apiserver
                ports:
                - containerPort: 8443
                  protocol: TCP
              restartPolicy: Always
              serviceAccount: postgres-operator
              serviceAccountName: postgres-operator
              terminationGracePeriodSeconds: 5
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - pods/exec
          - pods/log
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - batch
          - extensions
          resources:
          - jobs
          - deployments
          verbs:
          - '*'
        serviceAccountName: postgres-operator
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        serviceAccountName: pgo-backrest
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - postgres
  - app
  labels:
    alm-owner-enterprise-app: postgres-operator
    alm-status-descriptors: postgres-operator.v4.0.1
  links:
    - name: Crunchy Data
      url: https://crunchydata.com
    - name: Crunchy Postgres Operator v4.0 Quick Deploy
      url: https://github.com/CrunchyData/postgres-operator/tree/develop/examples/olm
  maintainers:
  - email: support@crunchydata.com
    name: Crunchy Data
  maturity: stable
  minKubeVersion: 1.11.0
  provider:
    name: CrunchyData.com
  version: 4.0.1