apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: prometheusexporters.monitoring.3scale.net
spec:
  group: monitoring.3scale.net
  names:
    kind: PrometheusExporter
    listKind: PrometheusExporterList
    plural: prometheusexporters
    singular: prometheusexporter
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      description: PrometheusExporter is the Schema for the prometheus exporters
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
          description: PrometheusExporterSpec defines the desired state of PrometheusExporter
          required: ["type"]
          properties:
            type:
              type: string
              description: 'Supported prometheus-exporter types: memcached, redis, mysql, postgresql, sphinx, es, cloudwatch'
              enum:
              - memcached
              - redis
              - mysql
              - postgresql
              - sphinx
              - es
              - cloudwatch
            serviceMonitor:
              type: object
              properties:
                enabled:
                  type: boolean
                  description: Create (true) or not (false) ServiceMonitor object
                interval:
                  type: string
                  description: Prometheus scrape interval (example 30s)
            grafanaDashboard:
              type: object
              properties:
                enabled:
                  type: boolean
                  description: Create (true) or not (false) GrafanaDashboard object
                label:
                  type: object
                  properties:
                    key:
                      type: string
                      description: Label key used by grafana-operator for dashboard discovery
                    value:
                      type: string
                      description: Label value used by grafana-operator for dashboard discovery
            extraLabel:
              type: object
              properties:
                key:
                  type: string
                  description: Add extra label key to all created resources (example tier)
                  value:
                    type: string
                    description: Add extra label value to all created resources (example frontend)
            image:
              type: object
              properties:
                name:
                  type: string
                  description: Prometheus exporter image name (example prom/memcached-exporter)
                version:
                  type: string
                  description: Prometheus exporter image version (example v0.6.0)
            port:
              type: integer
              description: Prometheus exporter port where metrics are available (example 9150)
            resources:
              type: object
              properties:
                requests:
                  type: object
                  properties:
                    cpu:
                      description: Override CPU requests (example 50m)
                    memory:
                      description: Override Memory requests (example 64Mi)
                limits:
                  type: object
                  properties:
                    cpu:
                      description: Override CPU limits (example 100m)
                    memory:
                      description: Override Memory limits (example 256Mi)
            livenessProbe:
              type: object
              properties:
                timeoutSeconds:
                  type: integer
                  description: Override liveness probe timeout (seconds)
                periodSeconds:
                  type: integer
                  description: Override liveness probe period (seconds)
                successThreshold:
                  type: integer
                  description: Override liveness probe success threshold
                failureThreshold:
                  type: integer
                  description: Override liveness probe failure threshold
            readinessProbe:
              type: object
              properties:
                timeoutSeconds:
                  type: integer
                  description: Override readiness probe timeout (seconds)
                periodSeconds:
                  type: integer
                  description: Override readiness probe period (seconds)
                successThreshold:
                  type: integer
                  description: Override readiness probe success threshold
                failureThreshold:
                  type: integer
                  description: Override readiness probe failure threshold
            dbHost:
              type: string
              description: For redis, memcached, sphinx and es exporters, the db host to monitor
            dbPort:
              type: integer
              description: For redis, memcached, sphinx and es exporters, the db port to monitor
            dbCheckKeys:
              type: string
              description: 'For redis exporter, the optional redis keys to monitor (example: resque:queue:stats,resque:queue:priority,resque:queue:main,resque:failed)'
            dbConnectionStringSecretName:
              type: string
              description: For mysql and postgresql exporters, the Secret name containing connection string definition (DSN)
            awsCredentialsSecretName:
              type: string
              description: For cloudwatch exporter, the Secret name containing AWS IAM credentials (AWS_ACCESS_KEY_ID / AWS_SECRET_ACCESS_KEY)
            configurationConfigmapName:
              type: string
              description: For cloudwatch exporter, the ConfigMap name containing Cloudwatch config.yml (Services, Dimensions, Tags used for autodiscovery...)
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
