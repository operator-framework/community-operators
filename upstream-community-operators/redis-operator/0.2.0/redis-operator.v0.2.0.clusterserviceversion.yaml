apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: redis-operator.v0.2.0
  annotations:
    alm-examples: '[{ "apiVersion": "redis.opstreelabs.in/v1alpha1", "kind": "Redis", "metadata": { "name": "redis" }, "spec": { "mode": "cluster", "size": 3, "global": { "image": "opstree/redis:v2.0", "imagePullPolicy": "IfNotPresent", "password": "Opstree@1234", "resources": { "requests": { "cpu": "100m", "memory": "128Mi" }, "limits": { "cpu": "100m", "memory": "128Mi" } } }, "master": { "service": { "type": "ClusterIP" } }, "slave": { "service": { "type": "ClusterIP" } }, "redisExporter": { "enabled": true, "image": "quay.io/opstree/redis-exporter:1.0", "imagePullPolicy": "Always", "resources": { "requests": { "cpu": "100m", "memory": "128Mi" }, "limits": { "cpu": "100m", "memory": "128Mi" } } }, "storage": { "volumeClaimTemplate": { "spec": { "storageClassName": "standard", "accessModes": [ "ReadWriteOnce" ], "resources": { "requests": { "storage": "1Gi" } } }, "selector": {} } } } }, { "apiVersion": "redis.opstreelabs.in/v1alpha1", "kind": "Redis", "metadata": { "name": "opstree-redis" }, "spec": { "mode": "standalone", "global": { "image": "opstree/redis:v2.0", "imagePullPolicy": "IfNotPresent", "password": "Opstree@1234", "resources": { "requests": { "cpu": "100m", "memory": "128Mi" }, "limits": { "cpu": "100m", "memory": "128Mi" } } }, "service": { "type": "LoadBalancer" }, "redisExporter": { "enabled": true, "image": "quay.io/opstree/redis-exporter:1.0", "imagePullPolicy": "Always", "resources": { "requests": { "cpu": "100m", "memory": "128Mi" }, "limits": { "cpu": "100m", "memory": "128Mi" } } }, "storage": { "volumeClaimTemplate": { "spec": { "storageClassName": "csi-cephfs-sc", "accessModes": [ "ReadWriteOnce" ], "resources": { "requests": { "storage": "1Gi" } } }, "selector": { } } } } }]'
    categories: Database
    certified: 'false'
    createdAt: '1/8/2020'
    description: >-
      A Golang based redis operator that will make/oversee
      Redis standalone/cluster mode setup on top of the Kubernetes. 
    containerImage: 'quay.io/opstree/redis-operator:v0.2'
    support: 'Best Effort'
    capabilities: Seamless Upgrades
    repository: 'https://github.com/OT-CONTAINER-KIT/redis-operator'
spec:
  displayName: Redis Operator
  description: >+
    ## Redis Operator

    A Golang based redis operator that will make/oversee
    Redis standalone/cluster mode setup on top of the Kubernetes.
    It can create a redis cluster setup with best practices on
    Cloud as well as the Bare metal environment.
    Also, it provides an in-built monitoring capability using redis-exporter.

    
    For documentation, please refer to https://ot-container-kit.github.io/redis-operator/#/

    ### Supported Features


    Here the features which are supported by this operator:-


    - Redis cluster/standalone mode setup

    - Inbuilt monitoring with prometheus exporter

    - Dynamic storage provisioning with pvc template

    - Resources restrictions with k8s requests and limits

    - Password/Password-less setup

    - Node selector and affinity

    - Priority class to manage setup priority

    - SecurityContext to manipulate kernel parameters



    ### Purpose

    The purpose of creating this operator was to provide an 
    easy and production grade setup of Redis on Kubernetes. 
    It doesn't care if you have a plain on-prem Kubernetes or cloud-based.

  maturity: alpha
  version: 0.2.0
  replaces: redis-operator.0.0.1
  skips: []
  minKubeVersion: 1.11.0
  keywords:
    - 'DevOps'
    - 'Kubernetes'
    - 'Redis'
    - 'Openshift'
    - 'Database'
  maintainers:
    - name: Sandeep Rawat
      email: sandeep@opstree.com
    - name: Abhishek Dubey
      email: abhishek.dubey@opstree.com
  provider:
    name: "Opstree Solutions"
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Blog
      url: 'https://blog.opstree.com'
    - name: Website
      url: 'https://opstree.com'
    - name: Opensource
      url: https://opstree.github.io
  icon:
    - base64data: >-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj48c3ZnIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMTgzLjcwNTg2NDEzNTYyNDcyIDE4OC40MjAyNTY2MDc5NzE4OCAyMTIuMDAwMDU4Mzc5NDk2MTIgMjIwLjU3MTI1MDg2NTg5NTIyIiB3aWR0aD0iMjA4IiBoZWlnaHQ9IjIxNi41NyI+PGRlZnM+PHBhdGggZD0iTTI4MyAxOTYuNTJDMjc2LjE1IDIwMC4wMyAyMjEuMzUgMjI4LjEyIDIxNC41IDIzMS42NEMyMTAuOTEgMjMzLjQ4IDIwOC4zIDIzNi45NiAyMDcuNDEgMjQxLjA5QzIwNS43MiAyNDguOTggMTkyLjIgMzEyLjA5IDE5MC41MSAzMTkuOThDMTg5LjczIDMyMy42NSAxOTAuMzcgMzI3LjUxIDE5Mi4yOSAzMzAuNjdDMTkyLjUyIDMzMS4wNSAxOTIuNzcgMzMxLjQyIDE5My4wNCAzMzEuNzhDMTk3Ljc4IDMzOC4xMSAyMzUuNzEgMzg4LjcxIDI0MC40NSAzOTUuMDRDMjQyLjk0IDM5OC4zNSAyNDYuNzEgNDAwLjI4IDI1MC42OSA0MDAuMjhDMjU4LjMgNDAwLjI4IDMxOS4xMiA0MDAuMjcgMzI2LjczIDQwMC4yNkMzMzAuNzEgNDAwLjI3IDMzNC40OCAzOTguMzQgMzM2Ljk3IDM5NS4wM0MzNDEuNzEgMzg4LjcgMzc5LjYyIDMzOC4wOSAzODQuMzYgMzMxLjc2QzM4Ni44NSAzMjguNDQgMzg3Ljc4IDMyNC4xIDM4Ni45IDMxOS45NkMzODUuMiAzMTIuMDcgMzcxLjY2IDI0OC45NiAzNjkuOTcgMjQxLjA3QzM2OS4wOCAyMzYuOTQgMzY2LjQ3IDIzMy40NiAzNjIuODggMjMxLjYyQzM1Ni4wMyAyMjguMTEgMzAxLjIyIDIwMC4wMyAyOTQuMzcgMTk2LjUyQzI5Mi40IDE5NS41IDI5MC4yMSAxOTUuMDMgMjg4LjAyIDE5NS4xNUMyODYuMjggMTk1LjI1IDI4NC41NyAxOTUuNzEgMjgzIDE5Ni41MloiIGlkPSJiMWVmWE9URjgiPjwvcGF0aD48cGF0aCBkPSJNMjgyLjY5IDE5MC44OUMyNzUuNDYgMTk0LjU5IDIxNy42MSAyMjQuMjUgMjEwLjM3IDIyNy45NUMyMDYuNTggMjI5LjkgMjAzLjgzIDIzMy41NyAyMDIuODkgMjM3Ljk0QzIwMS4xMSAyNDYuMjcgMTg2Ljg0IDMxMi44OSAxODUuMDYgMzIxLjIyQzE4NC4yMiAzMjUuMSAxODQuOSAzMjkuMTcgMTg2LjkzIDMzMi41MUMxODcuMTcgMzMyLjkxIDE4Ny40NCAzMzMuMyAxODcuNzIgMzMzLjY3QzE5Mi43MiAzNDAuMzUgMjMyLjc2IDM5My43OCAyMzcuNzcgNDAwLjQ1QzI0MC4zOSA0MDMuOTUgMjQ0LjM3IDQwNS45OSAyNDguNTggNDA1Ljk5QzI1Ni42MSA0MDUuOTkgMzIwLjgyIDQwNS45NyAzMjguODQgNDA1Ljk3QzMzMy4wNSA0MDUuOTggMzM3LjAzIDQwMy45NCAzMzkuNjYgNDAwLjQ1QzM0NC42NiAzOTMuNzcgMzg0LjY4IDM0MC4zMyAzODkuNjkgMzMzLjY1QzM5Mi4zMSAzMzAuMTUgMzkzLjI5IDMyNS41NyAzOTIuMzYgMzIxLjIxQzM5MC41NyAzMTIuODggMzc2LjI4IDI0Ni4yNSAzNzQuNSAyMzcuOTJDMzczLjU2IDIzMy41NiAzNzAuOCAyMjkuODkgMzY3LjAyIDIyNy45NEMzNTkuNzggMjI0LjI0IDMwMS45MyAxOTQuNTggMjk0LjcgMTkwLjg4QzI5Mi42MSAxODkuODEgMjkwLjMgMTg5LjMxIDI4Ny45OCAxODkuNDRDMjg2LjE1IDE4OS41NCAyODQuMzUgMTkwLjA0IDI4Mi42OSAxOTAuODlaTTI5NC4zNyAxOTYuNTJDMzAxLjIyIDIwMC4wMyAzNTYuMDMgMjI4LjExIDM2Mi44OCAyMzEuNjJDMzY2LjQ3IDIzMy40NiAzNjkuMDggMjM2Ljk0IDM2OS45NyAyNDEuMDhDMzcxLjY2IDI0OC45NyAzODUuMiAzMTIuMDggMzg2Ljg5IDMxOS45N0MzODcuNzggMzI0LjEgMzg2Ljg1IDMyOC40NSAzODQuMzYgMzMxLjc2QzM3OS42MiAzMzguMDkgMzQxLjcxIDM4OC43IDMzNi45NyAzOTUuMDNDMzM0LjQ4IDM5OC4zNCAzMzAuNzEgNDAwLjI3IDMyNi43MiA0MDAuMjdDMzE5LjEyIDQwMC4yNyAyNTguMjkgNDAwLjI4IDI1MC42OSA0MDAuMjlDMjQ2LjcgNDAwLjI5IDI0Mi45NCAzOTguMzYgMjQwLjQ1IDM5NS4wNEMyMzUuNzEgMzg4LjcxIDE5Ny43OCAzMzguMTEgMTkzLjA0IDMzMS43OEMxOTIuNzcgMzMxLjQzIDE5Mi41MiAzMzEuMDYgMTkyLjI5IDMzMC42N0MxOTAuMzcgMzI3LjUxIDE4OS43MiAzMjMuNjYgMTkwLjUxIDMxOS45OUMxOTIuMiAzMTIuMSAyMDUuNzIgMjQ4Ljk4IDIwNy40MSAyNDEuMUMyMDguMyAyMzYuOTYgMjEwLjkxIDIzMy40OCAyMTQuNSAyMzEuNjRDMjIxLjM1IDIyOC4xMyAyNzYuMTUgMjAwLjAzIDI4MyAxOTYuNTJDMjg0LjU3IDE5NS43MSAyODYuMjggMTk1LjI1IDI4OC4wMiAxOTUuMTZDMjkwLjIxIDE5NS4wNCAyOTIuMzkgMTk1LjUxIDI5NC4zNyAxOTYuNTJaIiBpZD0iaDM0MDAya3lJUCI+PC9wYXRoPjxwYXRoIGQ9Ik0yNTguMTUgMjYyLjM3QzI1My4yOCAyNjIuMzcgMjQ5LjMyIDI2Ni4wMSAyNDkuMzIgMjcwLjQ5QzI0OS4zMiAyNzYuNTMgMjQ5LjMyIDMyNC44OSAyNDkuMzIgMzMwLjk0QzI0OS4zMiAzMzUuNCAyNTMuMjggMzM5LjA0IDI1OC4xNSAzMzkuMDRDMjY0LjczIDMzOS4wNCAzMTcuMzUgMzM5LjA0IDMyMy45MyAzMzkuMDRDMzI4LjggMzM5LjA0IDMzMi43NiAzMzUuNCAzMzIuNzYgMzMwLjkzQzMzMi43NiAzMjQuODggMzMyLjc2IDI3Ni41MyAzMzIuNzYgMjcwLjQ5QzMzMi43NSAyNjYuMDEgMzI4Ljc5IDI2Mi4zNyAzMjMuOTIgMjYyLjM3QzMxMC43NyAyNjIuMzcgMjY0LjczIDI2Mi4zNyAyNTguMTUgMjYyLjM3Wk0zMjAuMyAyNzQuMjdMMzIwLjMgMjk1Ljg5TDI5Ni43NiAyOTUuODlMMjk2Ljc2IDI3NC4yN0wzMjAuMyAyNzQuMjdaTTI1OS42NCAzMTYuNjhDMjU5LjY0IDMwOS45MyAyNjUuNjEgMzA0LjQyIDI3Mi45OCAzMDQuNDJDMjgwLjMzIDMwNC40MiAyODYuMzIgMzA5LjkxIDI4Ni4zMiAzMTYuNjhDMjg2LjMyIDMyMy40MyAyODAuMzUgMzI4Ljk0IDI3Mi45OCAzMjguOTRDMjY1LjYzIDMyOC45NCAyNTkuNjQgMzIzLjQ2IDI1OS42NCAzMTYuNjhaTTI4Mi42MSAyOTguNDJMMjcyLjk1IDI5My43NkwyNjMuMzMgMjk4LjQyTDI2NS4xNiAyODguNTVMMjU3LjM2IDI4MS41N0wyNjguMTUgMjgwLjEzTDI3Mi45OCAyNzEuMTZMMjc3LjgxIDI4MC4xM0wyODguNiAyODEuNTdMMjgwLjc4IDI4OC41NUwyODIuNjEgMjk4LjQyWk0zMDguNTMgMzA0LjU2TDMyMy41OSAzMjguNTNMMjkzLjQ3IDMyOC41M0wzMDguNTMgMzA0LjU2WiIgaWQ9ImY1b3d5dlVGNlMiPjwvcGF0aD48L2RlZnM+PGc+PGc+PHVzZSB4bGluazpocmVmPSIjYjFlZlhPVEY4IiBvcGFjaXR5PSIxIiBmaWxsPSIjMzI2Y2U1IiBmaWxsLW9wYWNpdHk9IjEiPjwvdXNlPjxnPjx1c2UgeGxpbms6aHJlZj0iI2IxZWZYT1RGOCIgb3BhY2l0eT0iMSIgZmlsbC1vcGFjaXR5PSIwIiBzdHJva2U9IiMwMDAwMDAiIHN0cm9rZS13aWR0aD0iMCIgc3Ryb2tlLW9wYWNpdHk9IjAiPjwvdXNlPjwvZz48L2c+PGc+PHVzZSB4bGluazpocmVmPSIjaDM0MDAya3lJUCIgb3BhY2l0eT0iMSIgZmlsbD0iI2ZmZmZmZiIgZmlsbC1vcGFjaXR5PSIxIj48L3VzZT48Zz48dXNlIHhsaW5rOmhyZWY9IiNoMzQwMDJreUlQIiBvcGFjaXR5PSIxIiBmaWxsLW9wYWNpdHk9IjAiIHN0cm9rZT0iIzAwMDAwMCIgc3Ryb2tlLXdpZHRoPSIwIiBzdHJva2Utb3BhY2l0eT0iMCI+PC91c2U+PC9nPjwvZz48Zz48dXNlIHhsaW5rOmhyZWY9IiNmNW93eXZVRjZTIiBvcGFjaXR5PSIxIiBmaWxsPSIjZmZmZmZmIiBmaWxsLW9wYWNpdHk9IjEiPjwvdXNlPjxnPjx1c2UgeGxpbms6aHJlZj0iI2Y1b3d5dlVGNlMiIG9wYWNpdHk9IjEiIGZpbGwtb3BhY2l0eT0iMCIgc3Ryb2tlPSIjMDAwMDAwIiBzdHJva2Utd2lkdGg9IjEiIHN0cm9rZS1vcGFjaXR5PSIwIj48L3VzZT48L2c+PC9nPjwvZz48L3N2Zz4=
      mediatype: image/svg+xml
  customresourcedefinitions:
    owned:
      - name: redis.redis.opstreelabs.in
        displayName: Redis
        kind: Redis
        version: v1alpha1
        description: Redis
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      permissions:
        - serviceAccountName: redis-operator
          rules:
            - apiGroups:
                - ''
              resources:
                - pods
                - pods/exec
                - services
                - services/finalizers
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - redis-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - ''
              resources:
                - pods
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - replicasets
                - deployments
              verbs:
                - get
            - apiGroups:
                - redis.opstreelabs.in
              resources:
                - '*'
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
      deployments:
        - name: redis-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: redis-operator
            template:
              metadata:
                labels:
                  name: redis-operator
              spec:
                serviceAccountName: redis-operator
                containers:
                  - name: redis-operator
                    image: quay.io/opstree/redis-operator
                    imagePullPolicy: Always
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: redis-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: true
