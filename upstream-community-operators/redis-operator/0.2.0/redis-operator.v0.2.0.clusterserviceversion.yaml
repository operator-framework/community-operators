apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: redis-operator.v0.2.0
  namespace: placeholder
  annotations:
    alm-examples: >-
      [{"apiVersion":"redis.opstreelabs.in/v1alpha1","kind":"Redis","metadata":{"name":"redis"},"spec":{"mode":"cluster","size":3,"global":{"image":"opstree/redis:v2.0","imagePullPolicy":"IfNotPresent","password":"Opstree@1234","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"master":{"service":{"type":"ClusterIP"}},"slave":{"service":{"type":"ClusterIP"}},"redisExporter":{"enabled":true,"image":"quay.io/opstree/redis-exporter:1.0","imagePullPolicy":"Always","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"standard","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}},"selector":{}}}}}]
    categories: 'Database, Storage'
    certified: 'false'
    createdAt: '8-1-2020'
    description: >-
      A Golang based redis operator that will make/oversee Redis
      standalone/cluster mode setup on top of the Kubernetes.
    containerImage: 'quay.io/opstree/redis-operator:latest'
    support: ''
    capabilities: Seamless Upgrades
    repository: 'https://github.com/ot-container-kit/redis-operator'
spec:
  displayName: Redis Operator
  description: >+
    A Golang based redis operator that will make/oversee Redis
    standalone/cluster mode setup on top of the Kubernetes. It can create a
    redis cluster setup with best practices on Cloud as well as the Bare metal
    environment. Also, it provides an in-built monitoring capability using
    redis-exporter.


    For documentation, please refer to
    https://ot-container-kit.github.io/redis-operator/#/

    ## Purpose


    The purpose of creating this operator was to provide an easy and production
    grade setup of Redis on Kubernetes. It doesn't care if you have a plain
    on-prem Kubernetes or cloud-based.

    ## Supported Features


    Here the features which are supported by this operator:-


    - Redis cluster/standalone mode setup

    - Inbuilt monitoring with prometheus exporter

    - Dynamic storage provisioning with pvc template

    - Resources restrictions with k8s requests and limits

    - Password/Password-less setup

    - Node selector and affinity

    - Priority class to manage setup priority

    - SecurityContext to manipulate kernel parameters

  maturity: alpha
  version: 0.2.0
  replaces: redis-operator.v0.0.1
  skips: []
  minKubeVersion: 1.11.0
  keywords:
    - DevOps
    - Kubernetes
    - Openshift
    - Redis
    - CRD
  maintainers:
    - name: Abhishek Dubey
      email: abhishek.dubey@opstree.com
    - name: Sandeep Rawat
      email: sandeep@opstree.com
  provider:
    name: Opstree Solutions
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Blog
      url: 'https://blog.opstree.com'
    - name: GitHub
      url: 'https://github.com/opstree'
    - name: Opensource
      url: 'https://opstree.github.io'
  icon:
    - base64data: >-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+CjxzdmcgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiB2aWV3Qm94PSIxODMuNzA1ODY0MTM1NjI0NzIgMTg4LjQyMDI1NjYwNzk3MTg4IDIxMi4wMDAwNTgzNzk0OTYxMiAyMjAuNTcxMjUwODY1ODk1MjIiIHdpZHRoPSIyMDgiIGhlaWdodD0iMjE2LjU3Ij48ZGVmcz48cGF0aCBkPSJNMjgzIDE5Ni41MkMyNzYuMTUgMjAwLjAzIDIyMS4zNSAyMjguMTIgMjE0LjUgMjMxLjY0QzIxMC45MSAyMzMuNDggMjA4LjMgMjM2Ljk2IDIwNy40MSAyNDEuMDlDMjA1LjcyIDI0OC45OCAxOTIuMiAzMTIuMDkgMTkwLjUxIDMxOS45OEMxODkuNzMgMzIzLjY1IDE5MC4zNyAzMjcuNTEgMTkyLjI5IDMzMC42N0MxOTIuNTIgMzMxLjA1IDE5Mi43NyAzMzEuNDIgMTkzLjA0IDMzMS43OEMxOTcuNzggMzM4LjExIDIzNS43MSAzODguNzEgMjQwLjQ1IDM5NS4wNEMyNDIuOTQgMzk4LjM1IDI0Ni43MSA0MDAuMjggMjUwLjY5IDQwMC4yOEMyNTguMyA0MDAuMjggMzE5LjEyIDQwMC4yNyAzMjYuNzMgNDAwLjI2QzMzMC43MSA0MDAuMjcgMzM0LjQ4IDM5OC4zNCAzMzYuOTcgMzk1LjAzQzM0MS43MSAzODguNyAzNzkuNjIgMzM4LjA5IDM4NC4zNiAzMzEuNzZDMzg2Ljg1IDMyOC40NCAzODcuNzggMzI0LjEgMzg2LjkgMzE5Ljk2QzM4NS4yIDMxMi4wNyAzNzEuNjYgMjQ4Ljk2IDM2OS45NyAyNDEuMDdDMzY5LjA4IDIzNi45NCAzNjYuNDcgMjMzLjQ2IDM2Mi44OCAyMzEuNjJDMzU2LjAzIDIyOC4xMSAzMDEuMjIgMjAwLjAzIDI5NC4zNyAxOTYuNTJDMjkyLjQgMTk1LjUgMjkwLjIxIDE5NS4wMyAyODguMDIgMTk1LjE1QzI4Ni4yOCAxOTUuMjUgMjg0LjU3IDE5NS43MSAyODMgMTk2LjUyWiIgaWQ9ImIxZWZYT1RGOCI+PC9wYXRoPjxwYXRoIGQ9Ik0yODIuNjkgMTkwLjg5QzI3NS40NiAxOTQuNTkgMjE3LjYxIDIyNC4yNSAyMTAuMzcgMjI3Ljk1QzIwNi41OCAyMjkuOSAyMDMuODMgMjMzLjU3IDIwMi44OSAyMzcuOTRDMjAxLjExIDI0Ni4yNyAxODYuODQgMzEyLjg5IDE4NS4wNiAzMjEuMjJDMTg0LjIyIDMyNS4xIDE4NC45IDMyOS4xNyAxODYuOTMgMzMyLjUxQzE4Ny4xNyAzMzIuOTEgMTg3LjQ0IDMzMy4zIDE4Ny43MiAzMzMuNjdDMTkyLjcyIDM0MC4zNSAyMzIuNzYgMzkzLjc4IDIzNy43NyA0MDAuNDVDMjQwLjM5IDQwMy45NSAyNDQuMzcgNDA1Ljk5IDI0OC41OCA0MDUuOTlDMjU2LjYxIDQwNS45OSAzMjAuODIgNDA1Ljk3IDMyOC44NCA0MDUuOTdDMzMzLjA1IDQwNS45OCAzMzcuMDMgNDAzLjk0IDMzOS42NiA0MDAuNDVDMzQ0LjY2IDM5My43NyAzODQuNjggMzQwLjMzIDM4OS42OSAzMzMuNjVDMzkyLjMxIDMzMC4xNSAzOTMuMjkgMzI1LjU3IDM5Mi4zNiAzMjEuMjFDMzkwLjU3IDMxMi44OCAzNzYuMjggMjQ2LjI1IDM3NC41IDIzNy45MkMzNzMuNTYgMjMzLjU2IDM3MC44IDIyOS44OSAzNjcuMDIgMjI3Ljk0QzM1OS43OCAyMjQuMjQgMzAxLjkzIDE5NC41OCAyOTQuNyAxOTAuODhDMjkyLjYxIDE4OS44MSAyOTAuMyAxODkuMzEgMjg3Ljk4IDE4OS40NEMyODYuMTUgMTg5LjU0IDI4NC4zNSAxOTAuMDQgMjgyLjY5IDE5MC44OVpNMjk0LjM3IDE5Ni41MkMzMDEuMjIgMjAwLjAzIDM1Ni4wMyAyMjguMTEgMzYyLjg4IDIzMS42MkMzNjYuNDcgMjMzLjQ2IDM2OS4wOCAyMzYuOTQgMzY5Ljk3IDI0MS4wOEMzNzEuNjYgMjQ4Ljk3IDM4NS4yIDMxMi4wOCAzODYuODkgMzE5Ljk3QzM4Ny43OCAzMjQuMSAzODYuODUgMzI4LjQ1IDM4NC4zNiAzMzEuNzZDMzc5LjYyIDMzOC4wOSAzNDEuNzEgMzg4LjcgMzM2Ljk3IDM5NS4wM0MzMzQuNDggMzk4LjM0IDMzMC43MSA0MDAuMjcgMzI2LjcyIDQwMC4yN0MzMTkuMTIgNDAwLjI3IDI1OC4yOSA0MDAuMjggMjUwLjY5IDQwMC4yOUMyNDYuNyA0MDAuMjkgMjQyLjk0IDM5OC4zNiAyNDAuNDUgMzk1LjA0QzIzNS43MSAzODguNzEgMTk3Ljc4IDMzOC4xMSAxOTMuMDQgMzMxLjc4QzE5Mi43NyAzMzEuNDMgMTkyLjUyIDMzMS4wNiAxOTIuMjkgMzMwLjY3QzE5MC4zNyAzMjcuNTEgMTg5LjcyIDMyMy42NiAxOTAuNTEgMzE5Ljk5QzE5Mi4yIDMxMi4xIDIwNS43MiAyNDguOTggMjA3LjQxIDI0MS4xQzIwOC4zIDIzNi45NiAyMTAuOTEgMjMzLjQ4IDIxNC41IDIzMS42NEMyMjEuMzUgMjI4LjEzIDI3Ni4xNSAyMDAuMDMgMjgzIDE5Ni41MkMyODQuNTcgMTk1LjcxIDI4Ni4yOCAxOTUuMjUgMjg4LjAyIDE5NS4xNkMyOTAuMjEgMTk1LjA0IDI5Mi4zOSAxOTUuNTEgMjk0LjM3IDE5Ni41MloiIGlkPSJoMzQwMDJreUlQIj48L3BhdGg+PHBhdGggZD0iTTI1OC4xNSAyNjIuMzdDMjUzLjI4IDI2Mi4zNyAyNDkuMzIgMjY2LjAxIDI0OS4zMiAyNzAuNDlDMjQ5LjMyIDI3Ni41MyAyNDkuMzIgMzI0Ljg5IDI0OS4zMiAzMzAuOTRDMjQ5LjMyIDMzNS40IDI1My4yOCAzMzkuMDQgMjU4LjE1IDMzOS4wNEMyNjQuNzMgMzM5LjA0IDMxNy4zNSAzMzkuMDQgMzIzLjkzIDMzOS4wNEMzMjguOCAzMzkuMDQgMzMyLjc2IDMzNS40IDMzMi43NiAzMzAuOTNDMzMyLjc2IDMyNC44OCAzMzIuNzYgMjc2LjUzIDMzMi43NiAyNzAuNDlDMzMyLjc1IDI2Ni4wMSAzMjguNzkgMjYyLjM3IDMyMy45MiAyNjIuMzdDMzEwLjc3IDI2Mi4zNyAyNjQuNzMgMjYyLjM3IDI1OC4xNSAyNjIuMzdaTTMyMC4zIDI3NC4yN0wzMjAuMyAyOTUuODlMMjk2Ljc2IDI5NS44OUwyOTYuNzYgMjc0LjI3TDMyMC4zIDI3NC4yN1pNMjU5LjY0IDMxNi42OEMyNTkuNjQgMzA5LjkzIDI2NS42MSAzMDQuNDIgMjcyLjk4IDMwNC40MkMyODAuMzMgMzA0LjQyIDI4Ni4zMiAzMDkuOTEgMjg2LjMyIDMxNi42OEMyODYuMzIgMzIzLjQzIDI4MC4zNSAzMjguOTQgMjcyLjk4IDMyOC45NEMyNjUuNjMgMzI4Ljk0IDI1OS42NCAzMjMuNDYgMjU5LjY0IDMxNi42OFpNMjgyLjYxIDI5OC40MkwyNzIuOTUgMjkzLjc2TDI2My4zMyAyOTguNDJMMjY1LjE2IDI4OC41NUwyNTcuMzYgMjgxLjU3TDI2OC4xNSAyODAuMTNMMjcyLjk4IDI3MS4xNkwyNzcuODEgMjgwLjEzTDI4OC42IDI4MS41N0wyODAuNzggMjg4LjU1TDI4Mi42MSAyOTguNDJaTTMwOC41MyAzMDQuNTZMMzIzLjU5IDMyOC41M0wyOTMuNDcgMzI4LjUzTDMwOC41MyAzMDQuNTZaIiBpZD0iZjVvd3l2VUY2UyI+PC9wYXRoPjwvZGVmcz48Zz48Zz48dXNlIHhsaW5rOmhyZWY9IiNiMWVmWE9URjgiIG9wYWNpdHk9IjEiIGZpbGw9IiMzMjZjZTUiIGZpbGwtb3BhY2l0eT0iMSI+PC91c2U+PGc+PHVzZSB4bGluazpocmVmPSIjYjFlZlhPVEY4IiBvcGFjaXR5PSIxIiBmaWxsLW9wYWNpdHk9IjAiIHN0cm9rZT0iIzAwMDAwMCIgc3Ryb2tlLXdpZHRoPSIwIiBzdHJva2Utb3BhY2l0eT0iMCI+PC91c2U+PC9nPjwvZz48Zz48dXNlIHhsaW5rOmhyZWY9IiNoMzQwMDJreUlQIiBvcGFjaXR5PSIxIiBmaWxsPSIjZmZmZmZmIiBmaWxsLW9wYWNpdHk9IjEiPjwvdXNlPjxnPjx1c2UgeGxpbms6aHJlZj0iI2gzNDAwMmt5SVAiIG9wYWNpdHk9IjEiIGZpbGwtb3BhY2l0eT0iMCIgc3Ryb2tlPSIjMDAwMDAwIiBzdHJva2Utd2lkdGg9IjAiIHN0cm9rZS1vcGFjaXR5PSIwIj48L3VzZT48L2c+PC9nPjxnPjx1c2UgeGxpbms6aHJlZj0iI2Y1b3d5dlVGNlMiIG9wYWNpdHk9IjEiIGZpbGw9IiNmZmZmZmYiIGZpbGwtb3BhY2l0eT0iMSI+PC91c2U+PGc+PHVzZSB4bGluazpocmVmPSIjZjVvd3l2VUY2UyIgb3BhY2l0eT0iMSIgZmlsbC1vcGFjaXR5PSIwIiBzdHJva2U9IiMwMDAwMDAiIHN0cm9rZS13aWR0aD0iMSIgc3Ryb2tlLW9wYWNpdHk9IjAiPjwvdXNlPjwvZz48L2c+PC9nPjwvc3ZnPg==
      mediatype: image/svg+xml
  customresourcedefinitions:
    owned:
      - name: redis.redis.opstreelabs.in
        displayName: Redis
        kind: Redis
        version: v1alpha1
        description: Redis
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors:
          - path: mode
            description: Mode
            displayName: Mode
            x-descriptors: []
          - path: size
            description: Size
            displayName: Size
            x-descriptors: []
          - path: global
            description: Global
            displayName: Global
            x-descriptors: []
          - path: service
            description: Service
            displayName: Service
            x-descriptors: []
          - path: master
            description: Master
            displayName: Master
            x-descriptors: []
          - path: slave
            description: Slave
            displayName: Slave
            x-descriptors: []
          - path: redisExporter
            description: Redis Exporter
            displayName: Redis Exporter
            x-descriptors: []
          - path: priorityClassName
            description: Priority Class Name
            displayName: Priority Class Name
            x-descriptors: []
          - path: storage
            description: Storage
            displayName: Storage
            x-descriptors: []
          - path: nodeSelector
            description: Node Selector
            displayName: Node Selector
            x-descriptors: []
          - path: securityContext
            description: Security Context
            displayName: Security Context
            x-descriptors: []
          - path: affinity
            description: Affinity
            displayName: Affinity
            x-descriptors: []
        statusDescriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      permissions:
        - serviceAccountName: redis-operator
          rules:
            - apiGroups:
                - ''
              resources:
                - pods
                - pods/exec
                - services
                - services/finalizers
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - redis-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - ''
              resources:
                - pods
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - replicasets
                - deployments
              verbs:
                - get
            - apiGroups:
                - redis.opstreelabs.in
              resources:
                - '*'
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
      clusterPermissions: []
      deployments:
        - name: redis-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: redis-operator
            template:
              metadata:
                labels:
                  name: redis-operator
              spec:
                serviceAccountName: redis-operator
                containers:
                  - name: redis-operator
                    image: 'quay.io/opstree/redis-operator:v0.2'
                    imagePullPolicy: Always
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: redis-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: false
