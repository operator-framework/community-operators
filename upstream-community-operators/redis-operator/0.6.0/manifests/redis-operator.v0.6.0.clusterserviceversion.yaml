apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: redis-operator.v0.6.0
  namespace: placeholder
  annotations:
    alm-examples: >-
      [{"apiVersion":"redis.redis.opstreelabs.in/v1beta1","kind":"Redis","metadata":{"name":"redis-standalone"},"spec":{"redisExporter":{"enabled":true,"image":"quay.io/opstree/redis-exporter:1.0","imagePullPolicy":"Always","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"kubernetesConfig":{"image":"quay.io/opstree/redis:v6.2","imagePullPolicy":"IfNotPresent","resources":{"requests":{"cpu":"101m","memory":"128Mi"},"limits":{"cpu":"101m","memory":"128Mi"}},"redisSecret":{"name":"redis-secret","key":"password"},"serviceType":"LoadBalancer"},"redisConfig":{},"storage":{"volumeClaimTemplate":{"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}}}},{"apiVersion":"redis.redis.opstreelabs.in/v1beta1","kind":"RedisCluster","metadata":{"name":"redis-cluster"},"spec":{"clusterSize":3,"kubernetesConfig":{"image":"quay.io/opstree/redis:v6.2","imagePullPolicy":"IfNotPresent","resources":{"requests":{"cpu":"101m","memory":"128Mi"},"limits":{"cpu":"101m","memory":"128Mi"}},"redisSecret":{"name":"redis-secret","key":"password"},"serviceType":"ClusterIP"},"redisExporter":{"enabled":true,"image":"quay.io/opstree/redis-exporter:1.0","imagePullPolicy":"Always","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"redisLeader":{"serviceType":"ClusterIP"},"redisFollower":{"serviceType":"ClusterIP"},"storage":{"volumeClaimTemplate":{"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}}}}]
    categories: 'Database, Storage'
    certified: 'false'
    createdAt: '15-06-2021'
    description: >-
      A Golang based redis operator that will make/oversee Redis
      standalone/cluster mode setup on top of the Kubernetes.
    containerImage: 'quay.io/opstree/redis-operator:v0.6.0'
    support: ''
    capabilities: Seamless Upgrades
    repository: 'https://github.com/ot-container-kit/redis-operator'
spec:
  displayName: Redis Operator
  description: |
    A Golang based redis operator that will make/oversee Redis
    standalone/cluster mode setup on top of the Kubernetes. It can create a
    redis cluster setup with best practices on Cloud as well as the Bare metal
    environment. Also, it provides an in-built monitoring capability using
    redis-exporter.

    ### Supported Features

    Here the features which are supported by this operator:-
    - Redis cluster/standalone mode setup
    - Redis cluster failover and recovery
    - Inbuilt monitoring with prometheus exporter
    - Dynamic storage provisioning with pvc template
    - Resources restrictions with k8s requests and limits
    - Password/Password-less setup
    - Node selector and affinity
    - Priority class to manage setup priority
    - SecurityContext to manipulate kernel parameters
    ### Documentation

    [Documentation](https://ot-container-kit.github.io/redis-operator/)
    ### Getting Help
    This project is managed by OpsTree Solutions. If you have any queries or
    suggestions, mail us at opensource@opstree.com.
    ### Contributing

    You can contribute to this project by:-
    - Raising Bugs and Feature Requests
    - Fixing issue by opening a Pull Request
    - Improving Documentation

    ### License

    Logging Operator is licensed under [Apache License, Version
    2.0](https://github.com/OT-CONTAINER-KIT/redis-operator/blob/master/LICENSE)
  maturity: beta
  version: 0.6.0
  replaces: 'redis-operator.v0.5.0'
  skips: []
  minKubeVersion: 1.11.0
  keywords:
    - DevOps
    - Kubernetes
    - Database
    - Redis
    - Opstree
    - CRD
  maintainers:
    - name: Abhishek Dubey
      email: abhishek.dubey@opstree.com
    - name: Sandeep Rawat
      email: sandeep@opstree.com
  provider:
    name: Opstree Solutions
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Blog
      url: 'https://blog.opstree.com'
    - name: GitHub
      url: 'https://github.com/opstree'
    - name: Opensource
      url: 'https://opstree.github.io'
    - name: Documentation
      url: 'https://ot-container-kit.github.io/redis-operator/'
  icon:
    - base64data: >-
        
      mediatype: image/svg+xml
  customresourcedefinitions:
    owned:
      - name: redisclusters.redis.redis.opstreelabs.in
        displayName: RedisCluster
        kind: RedisCluster
        version: v1beta1
        description: Redis Cluster
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: redis.redis.redis.opstreelabs.in
        displayName: Redis
        kind: Redis
        version: v1beta1
        description: Redis
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      permissions: []
      clusterPermissions:
        - serviceAccountName: redis-operator
          rules:
          - apiGroups: 
              - '*'
            resources:
              - '*'
            verbs:
              - '*'
          - nonResourceURLs:
            - '*'
            verbs:
            - '*'
      deployments:
        - name: redis-operator
          spec:
            selector:
              matchLabels:
                control-plane: redis-operator
            replicas: 1
            template:
              metadata:
                labels:
                  control-plane: redis-operator
              spec:
                securityContext:
                  runAsUser: 65532
                containers:
                  - command:
                      - /manager
                    args:
                      - '--leader-elect'
                    image: 'quay.io/opstree/redis-operator:v0.6.0'
                    imagePullPolicy: Always
                    name: manager
                    securityContext:
                      allowPrivilegeEscalation: false
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 100m
                        memory: 100Mi
                      requests:
                        cpu: 100m
                        memory: 100Mi
                terminationGracePeriodSeconds: 10
                serviceAccount: redis-operator
                serviceAccountName: redis-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: true
    - type: AllNamespaces
      supported: true
