apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: sematext-operator.v1.0.9
  namespace: placeholder
  annotations:
    capabilities: "Basic Install"
    categories: "Monitoring, Logging & Tracing"
    createdAt: 2019-06-13T08:00:00Z
    certified: "false"
    description: |-
      Full stack observability with Sematext Monitoring Platform!
    containerImage: docker.io/sematext/sematext-operator:1.0.9
    support: Sematext, Inc.
    repository: https://github.com/sematext/sematext-operator
    alm-examples: |-
      [{
        "apiVersion": "sematext.com/v1alpha1",
        "kind": "SematextAgent",
        "metadata": {
          "name": "basic-agent-deployment"
        },
        "spec": {
          "region": "EU"
        }
      }]
spec:
  customresourcedefinitions:
    owned:
    - kind: SematextAgent
      displayName: Sematext Agent DaemonSet
      description: Represents a Sematext Agent running on each node of your cluster.
      name: sematextagents.sematext.com
      version: v1alpha1
  description: |-
    The Sematext Operator for Kubernetes provides an easy way to deploy Sematext Agent.

    Sematext Agent collects metrics about hosts (CPU, memory, disk, network, processes), containers (both Docker and rkt) and orchestrator platforms and ships that to [Sematext Cloud](https://sematext.com/cloud). Sematext Cloud is available in the US and EU regions.

    It installs the Sematext Agent to all nodes in your cluster via a `DaemonSet` resource.

    ## Settings

    This operator uses all the same options as the [Sematext Agent Helm Chart](https://hub.helm.sh/charts/stable/sematext-agent), please take a look to all the options in the following table:

    |             Parameter            |            Description            |                  Default                  |
    |----------------------------------|-----------------------------------|-------------------------------------------|
    | `containerToken`                 | Sematext Container token          | `Nil` Provide your Container token        |
    | `logsToken`                      | Sematext Logs token               | `Nil` Provide your Logs token             |
    | `infraToken`                     | Sematext Infra token              | `Nil` Provide your Infra token            |
    | `region`                         | Sematext region                   | `US` Sematext US or EU region             |
    | `agent.image.repository`         | The image repository              | `sematext/agent`                          |
    | `agent.image.tag`                | The image tag                     | `latest`                                  |
    | `agent.image.pullPolicy`         | Image pull policy                 | `Always`                                  |
    | `agent.service.port`             | Service port                      | `80`                                      |
    | `agent.service.type`             | Service type                      | `ClusterIP`                               |
    | `agent.resources`                | Agent resources                   | `{}`                                      |
    | `logagent.image.repository`      | The image repository              | `sematext/logagent`                       |
    | `logagent.image.tag`             | The image tag                     | `latest`                                  |
    | `logagent.image.pullPolicy`      | Image pull policy                 | `Always`                                  |
    | `logagent.resources`             | Logagent resources                | `{}`                                      |
    | `logagent.extraHostVolumeMounts` | Extra mounts                      | `{}`                                      |
    | `customUrl.serverBaseUrl`        | Custom Base URL                   | `Nil`                                     |
    | `customUrl.logsReceiverUrl`      | Custom Logs receiver URL          | `Nil`                                     |
    | `customUrl.eventsRecieverUrl`    | Custom Event receiver URL         | `Nil`                                     |
    | `serviceAccount.create`          | Create a service account          | `true`                                    |
    | `serviceAccount.name`            | Service account name              | `Nil` Defaults to chart name              |
    | `rbac.create`                    | RBAC enabled                      | `true`                                    |
    | `tolerations`                    | Tolerations                       | `[]`                                      |
    | `nodeSelector`                   | Node selector                     | `{}`                                      |

    For example, if you want to deploy Sematext Agent in EU region, create the following resource:

    ```yaml
    apiVersion: sematext.com/v1alpha1
    kind: SematextAgent
    metadata:
      name: test-sematextagent
    spec:
      region: "EU"
      containerToken: YOUR_CONTAINER_TOKEN
      logsToken: YOUR_LOGS_TOKEN
      infraToken: YOUR_INFRA_TOKEN
    ```

    **NOTE:** You need to create [a new Docker app in Sematext Cloud](https://apps.sematext.com/ui/integrations/create/docker) to get relevant tokens.

    Once you have created the above resource, you can apply this file with `kubectl apply -f`.
  displayName: Sematext Operator
  keywords:
  - sematext
  - observability
  - monitoring
  - logging
  - containers
  - ebpf
  maintainers:
  - name: Alen Komljen
    email: alen.komljen@sematext.com
  provider:
    name: Sematext
  maturity: stable
  links:
  - name: Sematext
    url: https://sematext.com
  - name: Helm Chart
    url: https://hub.helm.sh/charts/stable/sematext-agent
  - name: Sematext Operator
    url: https://github.com/sematext/sematext-operator
  - name: Configuration Options
    url: https://github.com/helm/charts/tree/master/stable/sematext-agent#configuration
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - "*"
          resources:
          - "*"
          verbs:
          - "*"
        serviceAccountName: sematext-operator
      deployments:
      - name: sematext-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: sematext-operator
          template:
            metadata:
              labels:
                name: sematext-operator
            spec:
              serviceAccountName: sematext-operator
              containers:
                - name: sematext-operator
                  image: docker.io/sematext/sematext-operator:1.0.9
                  ports:
                  - containerPort: 60000
                    name: metrics
                  imagePullPolicy: Always
                  env:
                    - name: WATCH_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.annotations['olm.targetNamespaces']
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_NAME
                      value: "sematext-operator"
    strategy: deployment
  version: 1.0.9
  replaces: sematext-operator.v1.0.8
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: false
