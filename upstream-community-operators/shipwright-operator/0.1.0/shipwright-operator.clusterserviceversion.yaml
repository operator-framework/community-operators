apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[{"apiVersion":"build.dev/v1alpha1","kind":"BuildStrategy","metadata":{"name":"buildpacks-v3-heroku"},"spec":{"buildSteps":[{"name":"step-prepare","image":"$(build.builder.image)","securityContext":{"runAsUser":0,"capabilities":{"add":["CHOWN"]}},"command":["/bin/bash"],"args":["-c","chown -R \"1000:1000\" \"/workspace/source\" && chown -R \"1000:1000\" \"/tekton/home\"\n"]},{"name":"step-detect","image":"$(build.builder.image)","securityContext":{"runAsUser":1000},"command":["/cnb/lifecycle/detector"],"args":["-app=/workspace/source/$(build.source.contextDir)","-group=/layers/group.toml","-plan=/layers/plan.toml"],"volumeMounts":[{"name":"layers-dir","mountPath":"/layers"}]},{"name":"step-restore","image":"$(build.builder.image)","securityContext":{"runAsUser":1000},"command":["/cnb/lifecycle/restorer"],"args":["-layers=/layers","-cache-dir=/cache","-group=/layers/group.toml"],"volumeMounts":[{"name":"cache-dir","mountPath":"/cache"},{"name":"layers-dir","mountPath":"/layers"}]},{"name":"step-build","image":"$(build.builder.image)","securityContext":{"runAsUser":1000},"command":["/cnb/lifecycle/builder"],"args":["-app=/workspace/source/$(build.source.contextDir)","-layers=/layers","-group=/layers/group.toml","-plan=/layers/plan.toml"],"volumeMounts":[{"name":"layers-dir","mountPath":"/layers"}]},{"name":"step-export","image":"$(build.builder.image)","securityContext":{"runAsUser":0},"command":["/cnb/lifecycle/exporter"],"args":["-app=/workspace/source/$(build.source.contextDir)","-layers=/layers","-cache-dir=/cache","-group=/layers/group.toml","$(build.output.image)"],"volumeMounts":[{"name":"cache-dir","mountPath":"/cache"},{"name":"layers-dir","mountPath":"/layers"}]}]}},{"apiVersion":"build.dev/v1alpha1","kind":"ClusterBuildStrategy","metadata":{"name":"buildah"},"spec":{"buildSteps":[{"name":"step-buildah-bud","image":"quay.io/buildah/stable:latest","workingDir":"/workspace/source","securityContext":{"privileged":true},"command":["/usr/bin/buildah"],"args":["bud","--tag=$(build.output.image)","--file=$(build.dockerfile)","$(build.source.contextDir)"],"volumeMounts":[{"name":"buildah-images","mountPath":"/var/lib/containers/storage"}]},{"name":"step-buildah-push","image":"quay.io/buildah/stable:latest","securityContext":{"privileged":true},"command":["/usr/bin/buildah"],"args":["push","--tls-verify=false","docker://$(build.output.image)"],"volumeMounts":[{"name":"buildah-images","mountPath":"/var/lib/containers/storage"}]}]}},{"apiVersion":"build.dev/v1alpha1","kind":"Build","metadata":{"name":"buildah-golang-build"},"spec":{"source":{"url":"https://github.com/sbose78/taxi","revision":"master"},"strategy":{"name":"buildah","kind":"ClusterBuildStrategy"},"dockerfile":"Dockerfile","output":{"image":"image-registry.openshift-image-registry.svc:5000/build-examples/taxi-app"}}},{"apiVersion":"build.dev/v1alpha1","kind":"BuildRun","metadata":{"name":"buildah-golang-buildrun"},"spec":{"buildRef":{"name":"buildah-golang-build"},"resources":{"limits":{"cpu":"1","memory":"1Gi"}}}}]'
    capabilities: Basic Install
    categories: Developer Tools
    containerImage: quay.io/shipwright/shipwright-operator:v0.1.0
    createdAt: "2020-10-03T17:44:55Z"
    description: Build lean container images of your application on Kubernetes using
      buildah, s2i, buildpacks, kaniko, and more
    repository: https://github.com/shipwright-io/build
  name: shipwright-operator.v0.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: BuildRun is the Schema representing an instance of build execution
      kind: BuildRun
      name: buildruns.build.dev
      version: v1alpha1
      statusDescriptors:
        - description: Indicates if the build execution was successful.
          displayName: Succeeded
          path: succeeded
          x-descriptors:
          - urn:alm:descriptor:text
        - description: Indicates the reason for build execution failure.
          displayName: Reason
          path: reason
          x-descriptors:
          - urn:alm:descriptor:text
    - description: Build is the Schema representing a Build definition
      kind: Build
      name: builds.build.dev
      version: v1alpha1
      statusDescriptors:
        - description: Indicates if the build registration was successful.
          displayName: Reason
          path: reason
          x-descriptors:
          - urn:alm:descriptor:text
        - description: Indicates the reason for Build Registration failure
          displayName: Registered
          path: registered
          x-descriptors:
          - urn:alm:descriptor:text
    - description: BuildStrategy is the Schema representing a strategy in the namespace
        scope to build images from source code.
      kind: BuildStrategy
      name: buildstrategies.build.dev
      version: v1alpha1
    - description: ClusterBuildStrategy is the Schema representing a strategy in the
        cluster scope to build images from source code.
      kind: ClusterBuildStrategy
      name: clusterbuildstrategies.build.dev
      version: v1alpha1
    required:
    - description: Represents Installation of Tekton.
      displayName: Tekton Installation
      kind: TektonPipeline
      name: tektonpipelines.operator.tekton.dev
      version: v1alpha1
  description: "\n## Getting Started\nThe Shipwright Build Project enables developers
    to build images using diverse Build Strageties, namely, source-to-image,\nbuildpacks-v3,
    Kaniko & Buildah.\n\n### Installing Build strategies\n\nThe administrator may
    choose to install one of more build strategies in the cluster-scope or the namespace
    scope.\n\n#### Buildah \n```\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/master/samples/buildstrategy/buildah/buildstrategy_buildah_cr.yaml\n```\n####
    Buildpacks-v3 \n```\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/master/samples/buildstrategy/buildpacks-v3/buildstrategy_buildpacks-v3_cr.yaml\n```\n####
    Kaniko \n```\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/master/samples/buildstrategy/kaniko/buildstrategy_kaniko_cr.yaml\n```\n####
    Source-to-Image (s2i)\n```\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/master/samples/buildstrategy/source-to-image/buildstrategy_source-to-image_cr.yaml\n```\n\n###
    Build an image from source code\n\n\n#### Configure a namespace-scoped Build.\n```\n
    \ apiVersion: build.dev/v1alpha1\n  kind: Build\n  metadata:\n    name: buildah-golang-build\n
    \ spec:\n    source:\n      url: https://github.com/sbose78/taxi\n      revision:
    master\n    strategy:\n      name: buildah\n      kind: ClusterBuildStrategy\n
    \   dockerfile: Dockerfile\n    output:\n      image: quay.io/build-examples/taxi-app\n```\n###
    Trigger a build by creating a `BuildRun`\n```\n---\n  apiVersion: build.dev/v1alpha1\n
    \ kind: BuildRun\n  metadata:\n    name: buildah-golang-buildrun\n  spec:\n    buildRef:\n
    \     name: buildah-golang-build\n    resources:\n      limits:\n        cpu:
    \"1\"\n        memory: \"1Gi\"\n```\n"
  displayName: Shipwright Build
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - build-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - build.dev
          resources:
          - '*'
          - buildstrategies
          - clusterbuildstrategies
          - buildruns
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - tekton.dev
          resources:
          - tasks
          - taskruns
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: build-operator
      deployments:
      - name: build-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: build-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: build-operator
            spec:
              containers:
              - command:
                - build-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: build-operator
                image: quay.io/shipwright/shipwright-operator:v0.1.0
                imagePullPolicy: Always
                livenessProbe:
                  exec:
                    command:
                    - stat
                    - /tmp/operator-sdk-ready
                  initialDelaySeconds: 5
                  periodSeconds: 10
                name: build-operator
                readinessProbe:
                  exec:
                    command:
                    - stat
                    - /tmp/operator-sdk-ready
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources: {}
              serviceAccountName: build-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - API
  - Cloud-native
  - Build
  maintainers:
  - email: shbose@redhat.com
    name: Shoubhik Bose
  - email: smoser@de.ibm.com
    name: Simon
  maturity: alpha
  provider:
    name: Project Shipwright
  version: 0.1.0
