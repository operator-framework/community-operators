apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: submariners.submariner.io
spec:
  group: submariner.io
  names:
    kind: Submariner
    listKind: SubmarinerList
    plural: submariners
    singular: submariner
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Submariner is the Schema for the submariners API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SubmarinerSpec defines the desired state of Submariner
          properties:
            broker:
              type: string
            brokerK8sApiServer:
              type: string
            brokerK8sApiServerToken:
              type: string
            brokerK8sCA:
              type: string
            brokerK8sRemoteNamespace:
              type: string
            cableDriver:
              type: string
            ceIPSecDebug:
              type: boolean
            ceIPSecIKEPort:
              type: integer
            ceIPSecNATTPort:
              type: integer
            ceIPSecPSK:
              type: string
            clusterCIDR:
              type: string
            clusterID:
              type: string
            colorCodes:
              type: string
            debug:
              type: boolean
            globalCIDR:
              type: string
            namespace:
              type: string
            natEnabled:
              type: boolean
            repository:
              type: string
            serviceCIDR:
              type: string
            serviceDiscoveryEnabled:
              type: boolean
            version:
              type: string
          required:
          - broker
          - brokerK8sApiServer
          - brokerK8sApiServerToken
          - brokerK8sCA
          - brokerK8sRemoteNamespace
          - ceIPSecDebug
          - ceIPSecPSK
          - clusterCIDR
          - clusterID
          - debug
          - namespace
          - natEnabled
          - serviceCIDR
          type: object
        status:
          description: SubmarinerStatus defines the observed state of Submariner
          properties:
            clusterCIDR:
              type: string
            clusterID:
              type: string
            colorCodes:
              type: string
            engineDaemonSetStatus:
              description: DaemonSetStatus represents the current status of a daemon
                set.
              properties:
                collisionCount:
                  description: Count of hash collisions for the DaemonSet. The DaemonSet
                    controller uses this field as a collision avoidance mechanism
                    when it needs to create the name for the newest ControllerRevision.
                  format: int32
                  type: integer
                conditions:
                  description: Represents the latest available observations of a DaemonSet's
                    current state.
                  items:
                    description: DaemonSetCondition describes the state of a DaemonSet
                      at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of DaemonSet condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                currentNumberScheduled:
                  description: 'The number of nodes that are running at least 1 daemon
                    pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                desiredNumberScheduled:
                  description: 'The total number of nodes that should be running the
                    daemon pod (including nodes correctly running the daemon pod).
                    More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                numberAvailable:
                  description: The number of nodes that should be running the daemon
                    pod and have one or more of the daemon pod running and available
                    (ready for at least spec.minReadySeconds)
                  format: int32
                  type: integer
                numberMisscheduled:
                  description: 'The number of nodes that are running the daemon pod,
                    but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                numberReady:
                  description: The number of nodes that should be running the daemon
                    pod and have one or more of the daemon pod running and ready.
                  format: int32
                  type: integer
                numberUnavailable:
                  description: The number of nodes that should be running the daemon
                    pod and have none of the daemon pod running and available (ready
                    for at least spec.minReadySeconds)
                  format: int32
                  type: integer
                observedGeneration:
                  description: The most recent generation observed by the daemon set
                    controller.
                  format: int64
                  type: integer
                updatedNumberScheduled:
                  description: The total number of nodes that are running updated
                    daemon pod
                  format: int32
                  type: integer
              required:
              - currentNumberScheduled
              - desiredNumberScheduled
              - numberMisscheduled
              - numberReady
              type: object
            gateways:
              items:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  status:
                    properties:
                      connections:
                        items:
                          properties:
                            endpoint:
                              properties:
                                backend:
                                  type: string
                                backend_config:
                                  additionalProperties:
                                    type: string
                                  type: object
                                cable_name:
                                  type: string
                                cluster_id:
                                  type: string
                                hostname:
                                  type: string
                                nat_enabled:
                                  type: boolean
                                private_ip:
                                  type: string
                                public_ip:
                                  type: string
                                subnets:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - backend
                              - cable_name
                              - cluster_id
                              - hostname
                              - nat_enabled
                              - private_ip
                              - public_ip
                              - subnets
                              type: object
                            status:
                              type: string
                            statusMessage:
                              type: string
                          required:
                          - endpoint
                          - status
                          - statusMessage
                          type: object
                        type: array
                      haStatus:
                        type: string
                      localEndpoint:
                        properties:
                          backend:
                            type: string
                          backend_config:
                            additionalProperties:
                              type: string
                            type: object
                          cable_name:
                            type: string
                          cluster_id:
                            type: string
                          hostname:
                            type: string
                          nat_enabled:
                            type: boolean
                          private_ip:
                            type: string
                          public_ip:
                            type: string
                          subnets:
                            items:
                              type: string
                            type: array
                        required:
                        - backend
                        - cable_name
                        - cluster_id
                        - hostname
                        - nat_enabled
                        - private_ip
                        - public_ip
                        - subnets
                        type: object
                      statusFailure:
                        type: string
                      version:
                        type: string
                    required:
                    - connections
                    - haStatus
                    - localEndpoint
                    - statusFailure
                    - version
                    type: object
                required:
                - status
                type: object
              type: array
            globalCIDR:
              type: string
            globalnetDaemonSetStatus:
              description: DaemonSetStatus represents the current status of a daemon
                set.
              properties:
                collisionCount:
                  description: Count of hash collisions for the DaemonSet. The DaemonSet
                    controller uses this field as a collision avoidance mechanism
                    when it needs to create the name for the newest ControllerRevision.
                  format: int32
                  type: integer
                conditions:
                  description: Represents the latest available observations of a DaemonSet's
                    current state.
                  items:
                    description: DaemonSetCondition describes the state of a DaemonSet
                      at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of DaemonSet condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                currentNumberScheduled:
                  description: 'The number of nodes that are running at least 1 daemon
                    pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                desiredNumberScheduled:
                  description: 'The total number of nodes that should be running the
                    daemon pod (including nodes correctly running the daemon pod).
                    More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                numberAvailable:
                  description: The number of nodes that should be running the daemon
                    pod and have one or more of the daemon pod running and available
                    (ready for at least spec.minReadySeconds)
                  format: int32
                  type: integer
                numberMisscheduled:
                  description: 'The number of nodes that are running the daemon pod,
                    but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                numberReady:
                  description: The number of nodes that should be running the daemon
                    pod and have one or more of the daemon pod running and ready.
                  format: int32
                  type: integer
                numberUnavailable:
                  description: The number of nodes that should be running the daemon
                    pod and have none of the daemon pod running and available (ready
                    for at least spec.minReadySeconds)
                  format: int32
                  type: integer
                observedGeneration:
                  description: The most recent generation observed by the daemon set
                    controller.
                  format: int64
                  type: integer
                updatedNumberScheduled:
                  description: The total number of nodes that are running updated
                    daemon pod
                  format: int32
                  type: integer
              required:
              - currentNumberScheduled
              - desiredNumberScheduled
              - numberMisscheduled
              - numberReady
              type: object
            natEnabled:
              type: boolean
            routeAgentDaemonSetStatus:
              description: DaemonSetStatus represents the current status of a daemon
                set.
              properties:
                collisionCount:
                  description: Count of hash collisions for the DaemonSet. The DaemonSet
                    controller uses this field as a collision avoidance mechanism
                    when it needs to create the name for the newest ControllerRevision.
                  format: int32
                  type: integer
                conditions:
                  description: Represents the latest available observations of a DaemonSet's
                    current state.
                  items:
                    description: DaemonSetCondition describes the state of a DaemonSet
                      at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of DaemonSet condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                currentNumberScheduled:
                  description: 'The number of nodes that are running at least 1 daemon
                    pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                desiredNumberScheduled:
                  description: 'The total number of nodes that should be running the
                    daemon pod (including nodes correctly running the daemon pod).
                    More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                numberAvailable:
                  description: The number of nodes that should be running the daemon
                    pod and have one or more of the daemon pod running and available
                    (ready for at least spec.minReadySeconds)
                  format: int32
                  type: integer
                numberMisscheduled:
                  description: 'The number of nodes that are running the daemon pod,
                    but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                  format: int32
                  type: integer
                numberReady:
                  description: The number of nodes that should be running the daemon
                    pod and have one or more of the daemon pod running and ready.
                  format: int32
                  type: integer
                numberUnavailable:
                  description: The number of nodes that should be running the daemon
                    pod and have none of the daemon pod running and available (ready
                    for at least spec.minReadySeconds)
                  format: int32
                  type: integer
                observedGeneration:
                  description: The most recent generation observed by the daemon set
                    controller.
                  format: int64
                  type: integer
                updatedNumberScheduled:
                  description: The total number of nodes that are running updated
                    daemon pod
                  format: int32
                  type: integer
              required:
              - currentNumberScheduled
              - desiredNumberScheduled
              - numberMisscheduled
              - numberReady
              type: object
            serviceCIDR:
              type: string
          required:
          - clusterID
          - natEnabled
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
