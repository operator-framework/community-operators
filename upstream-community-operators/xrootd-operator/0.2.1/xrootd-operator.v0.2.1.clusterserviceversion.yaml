apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "catalog.xrootd.org/v1alpha1",
          "kind": "XrootdVersion",
          "metadata": {
            "name": "xrootdversion-sample"
          },
          "spec": {
            "image": "qserv/xrootd:latest",
            "version": "latest"
          }
        },
        {
          "apiVersion": "xrootd.xrootd.org/v1alpha1",
          "kind": "XrootdCluster",
          "metadata": {
            "name": "xrootdcluster-sample"
          },
          "spec": {
            "redirector": {
              "replicas": 2
            },
            "version": "xrootdversion-sample",
            "worker": {
              "replicas": 3,
              "storage": {
                "capacity": "1Gi"
              }
            }
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Application Runtime
    certified: "true"
    containerImage: qserv/xrootd-operator:0.2.1
    createdAt: 2020-08-30 17:20:00
    description: Create and maintain highly-available xrootd clusters on Kubernetes
    operators.operatorframework.io/builder: operator-sdk-v1.0.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    repository: https://github.com/xrootd/xrootd-k8s-operator
    support: Xrootd Community
  name: xrootd-operator.v0.2.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: XrootdCluster is the Schema for the xrootdclusters API. This denotes a single Xrootd cluster configured with requested version, xrd config and other relevant configurable options.
      displayName: Xrootd Cluster
      kind: XrootdCluster
      name: xrootdclusters.xrootd.xrootd.org
      resources:
      - kind: Service
        name: ${XROOTD_NAME}-xrootd-redirector
        version: v1
      - kind: StatefulSet
        name: ${XROOTD_NAME}-xrootd-redirector
        version: v1
      - kind: Service
        name: ${XROOTD_NAME}-xrootd-worker
        version: v1
      - kind: StatefulSet
        name: ${XROOTD_NAME}-xrootd-worker
        version: v1
      specDescriptors:
      - description: The desired number of redirector pods for the xrootd cluster
        displayName: Redirector Replicas
        path: redirector.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Version must be name of XrootdVersion CR instance which defines the xrootd protcol image to use in the cluster pods. The requested XrootdVersion instance must be installed in the target namespace using XrootdVersion CRD.
        displayName: Xrootd Version Name
        path: version
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:catalog.xrootd.org:v1alpha1:XrootdVersion
      - description: The desired number of worker pods for the xrootd cluster
        displayName: Worker Replicas
        path: worker.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The desired storage class to use for Dynamic Persistent Volume Provisioning for Worker pods
        displayName: Storage Class
        path: worker.storage
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:storage.k8s.io:v1beta1:StorageClass
      version: v1alpha1
    - description: XrootdVersion is the Schema for the xrootdversions API. Before deploying Xrootd Cluster, required Xrootd protocol version and its docker image must be provided using this CRD in the cluster's target namespace.
      displayName: Xrootd Version
      kind: XrootdVersion
      name: xrootdversions.catalog.xrootd.org
      specDescriptors:
      - description: Is this version deprecated for production use?
        displayName: Is Deprecated?
        path: deprecated
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Version of the xrootd application in the provided image
        displayName: Xrootd Version
        path: version
      version: v1alpha1
  description: |
    ## Overview

    Xrootd Operator manages the full lifecycle of [Xrootd](https://github.com/xrootd/xrootd) at scale,
    in order to ease and fully automate deployment and management of XRootD clusters.

    The operator aims to provide the following:

    - **Basic Install** and **Seamless upgrades** to Xrootd components.
    - Out-of-box Intra-Cluster discovery support.

    Mind you, this is still a work-in-progress implementation.

    ## Usage
    - First ensure the desired xrootd version is deployed by creating a new `XrootdVersion` resource in the target namespace:
    ```
    apiVersion: catalog.xrootd.org/v1alpha1
    kind: XrootdVersion
    metadata:
      name: xrootdversion-4.1.2
    spec:
      version: "v4.1.2"
      image: "qserv/xrootd:4.1.2"
    ```
    - Deploy a basic Xrootd cluster by creating a new `XrootdCluster` resource in the namespace where the operator is installed.
    ```
    apiVersion: xrootd.xrootd.org/v1alpha1
    kind: XrootdCluster
    metadata:
      name: example-xrootd
    spec:
      version: "xrootdversion-4.1.2"
      redirector:
        replicas: 1
      worker:
        replicas: 2
        storage:
          class: "standard"
          capacity: "1Gi"
    ```

    See the examples on [github](https://github.com/xrootd/xrootd-k8s-operator/tree/master/manifests) for more information.
  displayName: XrootD operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - endpoints
          - events
          - persistentvolumeclaims
          - pods
          - pods/status
          - secrets
          - services
          - services/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/log
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - catalog.xrootd.org
          resources:
          - xrootdversions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - xrootd.xrootd.org
          resources:
          - xrootdclusters
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - xrootd.xrootd.org
          resources:
          - xrootdclusters/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: xrootd-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                command:
                - /manager
                image: qserv/xrootd-operator:0.2.1@sha256:aa43ed3bf444caec349158321757aca68c70de08e2f26166c67f9c45d9cedd54
                name: manager
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Xrootd
  links:
  - name: Xrootd Operator
    url: https://github.com/xrootd/xrootd-k8s-operator
  - name: Xrootd
    url: https://xrootd.slac.stanford.edu/index.html
  maintainers:
  - email: shivanshs9@gmail.com
    name: Shivansh Saini
  maturity: alpha
  provider:
    name: Xrootd community
  version: 0.2.1
